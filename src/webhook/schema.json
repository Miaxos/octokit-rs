{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "branch_protection_rule$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "Activity related to a branch protection rule. For more information, see \"[About branch protection rules](https://docs.github.com/en/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#about-branch-protection-rules).\"",
      "required": ["action", "rule", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "rule": { "$ref": "#/definitions/branch-protection-rule" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "title": "branch protection rule created event",
      "additionalProperties": false
    },
    "branch_protection_rule$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "Activity related to a branch protection rule. For more information, see \"[About branch protection rules](https://docs.github.com/en/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#about-branch-protection-rules).\"",
      "required": ["action", "rule", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "rule": { "$ref": "#/definitions/branch-protection-rule" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "title": "branch protection rule deleted event",
      "additionalProperties": false
    },
    "branch_protection_rule$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "Activity related to a branch protection rule. For more information, see \"[About branch protection rules](https://docs.github.com/en/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#about-branch-protection-rules).\"",
      "required": ["action", "rule", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "rule": { "$ref": "#/definitions/branch-protection-rule" },
        "changes": {
          "type": "object",
          "description": "If the action was `edited`, the changes to the rule.",
          "properties": {
            "admin_enforced": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "$ref": "#/definitions/branch-protection-rule-boolean"
                }
              },
              "additionalProperties": false
            },
            "allow_deletions_enforcement_level": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "oneOf": [
                    {
                      "$ref": "#/definitions/branch-protection-rule-enforcement-level"
                    },
                    { "type": "null" }
                  ]
                }
              },
              "additionalProperties": false
            },
            "allow_force_pushes_enforcement_level": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "$ref": "#/definitions/branch-protection-rule-enforcement-level"
                }
              },
              "additionalProperties": false
            },
            "authorized_actors_only": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "$ref": "#/definitions/branch-protection-rule-boolean"
                }
              },
              "additionalProperties": false
            },
            "authorized_actor_names": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": { "$ref": "#/definitions/branch-protection-rule-array" }
              },
              "additionalProperties": false
            },
            "authorized_dismissal_actors_only": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "oneOf": [
                    { "$ref": "#/definitions/branch-protection-rule-boolean" },
                    { "type": "null" }
                  ]
                }
              },
              "additionalProperties": false
            },
            "dismiss_stale_reviews_on_push": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "$ref": "#/definitions/branch-protection-rule-boolean"
                }
              },
              "additionalProperties": false
            },
            "pull_request_reviews_enforcement_level": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "$ref": "#/definitions/branch-protection-rule-enforcement-level"
                }
              },
              "additionalProperties": false
            },
            "require_code_owner_review": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "$ref": "#/definitions/branch-protection-rule-boolean"
                }
              },
              "additionalProperties": false
            },
            "required_approving_review_count": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "$ref": "#/definitions/branch-protection-rule-number"
                }
              },
              "additionalProperties": false
            },
            "required_conversation_resolution_level": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "$ref": "#/definitions/branch-protection-rule-enforcement-level"
                }
              },
              "additionalProperties": false
            },
            "required_deployments_enforcement_level": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "$ref": "#/definitions/branch-protection-rule-enforcement-level"
                }
              },
              "additionalProperties": false
            },
            "required_status_checks": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": { "$ref": "#/definitions/branch-protection-rule-array" }
              },
              "additionalProperties": false
            },
            "required_status_checks_enforcement_level": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "$ref": "#/definitions/branch-protection-rule-enforcement-level"
                }
              },
              "additionalProperties": false
            },
            "signature_requirement_enforcement_level": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "$ref": "#/definitions/branch-protection-rule-enforcement-level"
                }
              },
              "additionalProperties": false
            },
            "linear_history_requirement_enforcement_level": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "$ref": "#/definitions/branch-protection-rule-enforcement-level"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "title": "branch protection rule edited event",
      "additionalProperties": false
    },
    "branch_protection_rule_event": {
      "oneOf": [
        { "$ref": "#/definitions/branch_protection_rule$created" },
        { "$ref": "#/definitions/branch_protection_rule$deleted" },
        { "$ref": "#/definitions/branch_protection_rule$edited" }
      ]
    },
    "check_run$completed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "check_run", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["completed"] },
        "check_run": {
          "description": "The [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run).",
          "type": "object",
          "required": [
            "id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at",
            "output",
            "name",
            "check_suite",
            "app",
            "pull_requests"
          ],
          "properties": {
            "id": { "type": "integer", "description": "The id of the check." },
            "node_id": { "type": "string" },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the commit that is being checked."
            },
            "external_id": { "type": "string" },
            "url": { "type": "string", "format": "uri" },
            "html_url": { "type": "string", "format": "uri" },
            "details_url": { "type": "string", "format": "uri" },
            "status": {
              "type": "string",
              "enum": ["completed"],
              "description": "The current status of the check run. Can be `queued`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "type": ["string", "null"],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed."
            },
            "started_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "completed_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "output": {
              "type": "object",
              "required": [
                "summary",
                "text",
                "annotations_count",
                "annotations_url"
              ],
              "properties": {
                "title": { "type": ["string", "null"] },
                "summary": { "type": ["string", "null"] },
                "text": { "type": ["string", "null"] },
                "annotations_count": { "type": "integer" },
                "annotations_url": { "type": "string", "format": "uri" }
              },
              "additionalProperties": false
            },
            "name": {
              "type": "string",
              "description": "The name of the check run."
            },
            "check_suite": {
              "type": "object",
              "required": [
                "id",
                "head_branch",
                "head_sha",
                "status",
                "conclusion",
                "url",
                "before",
                "after",
                "pull_requests",
                "app",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id of the check suite that this check run is part of."
                },
                "node_id": { "type": "string" },
                "head_branch": { "type": ["string", "null"] },
                "head_sha": {
                  "type": "string",
                  "description": "The SHA of the head commit that is being checked."
                },
                "status": {
                  "type": "string",
                  "enum": ["in_progress", "completed", "queued"]
                },
                "conclusion": {
                  "type": ["string", "null"],
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale",
                    null
                  ]
                },
                "url": { "type": "string", "format": "uri" },
                "before": { "type": ["string", "null"] },
                "after": { "type": ["string", "null"] },
                "pull_requests": {
                  "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_branch`.  \n  \n**Note:**\n\n*   The `head_sha` of the check suite can differ from the `sha` of the pull request if subsequent pushes are made into the PR.\n*   When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.",
                  "type": "array",
                  "items": { "$ref": "#/definitions/check-run-pull-request" }
                },
                "deployment": { "$ref": "#/definitions/check-run-deployment" },
                "app": { "$ref": "#/definitions/app" },
                "created_at": { "type": "string", "format": "date-time" },
                "updated_at": { "type": "string", "format": "date-time" }
              },
              "additionalProperties": false
            },
            "app": { "$ref": "#/definitions/app" },
            "pull_requests": {
              "type": "array",
              "items": { "$ref": "#/definitions/check-run-pull-request" }
            },
            "deployment": { "$ref": "#/definitions/check-run-deployment" }
          },
          "additionalProperties": false
        },
        "requested_action": {
          "type": ["object", "null"],
          "description": "The action requested by the user.",
          "properties": {
            "identifier": {
              "type": "string",
              "description": "The integrator reference of the action requested by the user."
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "check_run completed event"
    },
    "check_run$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "check_run", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "check_run": {
          "type": "object",
          "description": "The [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run).",
          "required": [
            "id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at",
            "output",
            "name",
            "check_suite",
            "app",
            "pull_requests"
          ],
          "properties": {
            "id": { "type": "integer", "description": "The id of the check." },
            "node_id": { "type": "string" },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the commit that is being checked."
            },
            "external_id": { "type": "string" },
            "url": { "type": "string", "format": "uri" },
            "html_url": { "type": "string", "format": "uri" },
            "details_url": { "type": "string", "format": "uri" },
            "status": {
              "type": "string",
              "enum": ["queued", "in_progress", "completed", "waiting"],
              "description": "The current status of the check run. Can be `queued`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "type": ["string", "null"],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed."
            },
            "started_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "completed_at": {
              "oneOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "output": {
              "type": "object",
              "required": [
                "summary",
                "text",
                "annotations_count",
                "annotations_url"
              ],
              "properties": {
                "title": { "type": ["string", "null"] },
                "summary": { "type": ["string", "null"] },
                "text": { "type": ["string", "null"] },
                "annotations_count": { "type": "integer" },
                "annotations_url": { "type": "string", "format": "uri" }
              },
              "additionalProperties": false
            },
            "name": {
              "type": "string",
              "description": "The name of the check run."
            },
            "check_suite": {
              "type": "object",
              "required": [
                "id",
                "head_branch",
                "head_sha",
                "status",
                "conclusion",
                "url",
                "before",
                "after",
                "pull_requests",
                "app",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id of the check suite that this check run is part of."
                },
                "node_id": { "type": "string" },
                "head_branch": { "type": ["string", "null"] },
                "head_sha": {
                  "type": "string",
                  "description": "The SHA of the head commit that is being checked."
                },
                "status": {
                  "type": "string",
                  "enum": ["queued", "in_progress", "completed"]
                },
                "conclusion": {
                  "type": ["string", "null"],
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale",
                    null
                  ]
                },
                "url": { "type": "string", "format": "uri" },
                "before": { "type": ["string", "null"] },
                "after": { "type": ["string", "null"] },
                "pull_requests": {
                  "type": "array",
                  "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_branch`.  \n  \n**Note:**\n\n*   The `head_sha` of the check suite can differ from the `sha` of the pull request if subsequent pushes are made into the PR.\n*   When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.",
                  "items": { "$ref": "#/definitions/check-run-pull-request" }
                },
                "deployment": { "$ref": "#/definitions/check-run-deployment" },
                "app": { "$ref": "#/definitions/app" },
                "created_at": { "type": "string", "format": "date-time" },
                "updated_at": { "type": "string", "format": "date-time" }
              },
              "additionalProperties": false
            },
            "app": { "$ref": "#/definitions/app" },
            "pull_requests": {
              "type": "array",
              "items": { "$ref": "#/definitions/check-run-pull-request" }
            },
            "deployment": { "$ref": "#/definitions/check-run-deployment" }
          },
          "additionalProperties": false
        },
        "requested_action": {
          "type": ["object", "null"],
          "description": "The action requested by the user.",
          "properties": {
            "identifier": {
              "type": "string",
              "description": "The integrator reference of the action requested by the user."
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "check_run created event"
    },
    "check_run$requested_action": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "check_run",
        "requested_action",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["requested_action"] },
        "check_run": {
          "type": "object",
          "description": "The [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run).",
          "required": [
            "id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at",
            "output",
            "name",
            "check_suite",
            "app",
            "pull_requests"
          ],
          "properties": {
            "id": { "type": "integer", "description": "The id of the check." },
            "node_id": { "type": "string" },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the commit that is being checked."
            },
            "external_id": { "type": "string" },
            "url": { "type": "string", "format": "uri" },
            "html_url": { "type": "string", "format": "uri" },
            "details_url": { "type": "string", "format": "uri" },
            "status": {
              "type": "string",
              "enum": ["queued", "in_progress", "completed"],
              "description": "The current status of the check run. Can be `queued`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "type": ["string", "null"],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed."
            },
            "started_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "completed_at": {
              "oneOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "output": {
              "type": "object",
              "required": [
                "summary",
                "text",
                "annotations_count",
                "annotations_url"
              ],
              "properties": {
                "title": { "type": ["string", "null"] },
                "summary": { "type": ["string", "null"] },
                "text": { "type": ["string", "null"] },
                "annotations_count": { "type": "integer" },
                "annotations_url": { "type": "string", "format": "uri" }
              },
              "additionalProperties": false
            },
            "name": {
              "type": "string",
              "description": "The name of the check run."
            },
            "check_suite": {
              "type": "object",
              "required": [
                "id",
                "head_branch",
                "head_sha",
                "status",
                "conclusion",
                "url",
                "before",
                "after",
                "pull_requests",
                "app",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id of the check suite that this check run is part of."
                },
                "node_id": { "type": "string" },
                "head_branch": { "type": ["string", "null"] },
                "head_sha": {
                  "type": "string",
                  "description": "The SHA of the head commit that is being checked."
                },
                "status": {
                  "type": "string",
                  "enum": ["queued", "in_progress", "completed", "waiting"]
                },
                "conclusion": {
                  "type": ["string", "null"],
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale",
                    null
                  ]
                },
                "url": { "type": "string", "format": "uri" },
                "before": { "type": ["string", "null"] },
                "after": { "type": ["string", "null"] },
                "pull_requests": {
                  "type": "array",
                  "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_branch`.  \n  \n**Note:**\n\n*   The `head_sha` of the check suite can differ from the `sha` of the pull request if subsequent pushes are made into the PR.\n*   When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.",
                  "items": { "$ref": "#/definitions/check-run-pull-request" }
                },
                "deployment": { "$ref": "#/definitions/check-run-deployment" },
                "app": { "$ref": "#/definitions/app" },
                "created_at": { "type": "string", "format": "date-time" },
                "updated_at": { "type": "string", "format": "date-time" }
              },
              "additionalProperties": false
            },
            "app": { "$ref": "#/definitions/app" },
            "pull_requests": {
              "type": "array",
              "items": { "$ref": "#/definitions/check-run-pull-request" }
            },
            "deployment": { "$ref": "#/definitions/check-run-deployment" }
          },
          "additionalProperties": false
        },
        "requested_action": {
          "type": "object",
          "description": "The action requested by the user.",
          "properties": {
            "identifier": {
              "type": "string",
              "description": "The integrator reference of the action requested by the user."
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "check_run requested_action event"
    },
    "check_run$rerequested": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "check_run", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["rerequested"] },
        "check_run": {
          "type": "object",
          "description": "The [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run).",
          "required": [
            "id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at",
            "output",
            "name",
            "check_suite",
            "app",
            "pull_requests"
          ],
          "properties": {
            "id": { "type": "integer", "description": "The id of the check." },
            "node_id": { "type": "string" },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the commit that is being checked."
            },
            "external_id": { "type": "string" },
            "url": { "type": "string", "format": "uri" },
            "html_url": { "type": "string", "format": "uri" },
            "details_url": { "type": "string", "format": "uri" },
            "status": {
              "type": "string",
              "enum": ["completed"],
              "description": "The phase of the lifecycle that the check is currently in."
            },
            "conclusion": {
              "type": ["string", "null"],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has `completed`."
            },
            "started_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "completed_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "output": {
              "type": "object",
              "required": [
                "summary",
                "text",
                "annotations_count",
                "annotations_url"
              ],
              "properties": {
                "title": { "type": ["string", "null"] },
                "summary": { "type": ["string", "null"] },
                "text": { "type": ["string", "null"] },
                "annotations_count": { "type": "integer" },
                "annotations_url": { "type": "string", "format": "uri" }
              },
              "additionalProperties": false
            },
            "name": {
              "type": "string",
              "description": "The name of the check."
            },
            "check_suite": {
              "type": "object",
              "required": [
                "id",
                "head_branch",
                "head_sha",
                "status",
                "conclusion",
                "url",
                "before",
                "after",
                "pull_requests",
                "app",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id of the check suite that this check run is part of."
                },
                "node_id": { "type": "string" },
                "head_branch": { "type": ["string", "null"] },
                "head_sha": {
                  "type": "string",
                  "description": "The SHA of the head commit that is being checked."
                },
                "status": { "type": "string", "enum": ["completed"] },
                "conclusion": {
                  "type": "string",
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale"
                  ]
                },
                "url": { "type": "string", "format": "uri" },
                "before": { "type": ["string", "null"] },
                "after": { "type": ["string", "null"] },
                "pull_requests": {
                  "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_branch`.  \n  \n**Note:**\n\n*   The `head_sha` of the check suite can differ from the `sha` of the pull request if subsequent pushes are made into the PR.\n*   When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.",
                  "type": "array",
                  "items": { "$ref": "#/definitions/check-run-pull-request" }
                },
                "deployment": { "$ref": "#/definitions/check-run-deployment" },
                "app": { "$ref": "#/definitions/app" },
                "created_at": { "type": "string", "format": "date-time" },
                "updated_at": { "type": "string", "format": "date-time" }
              },
              "additionalProperties": false
            },
            "app": { "$ref": "#/definitions/app" },
            "pull_requests": {
              "type": "array",
              "items": { "$ref": "#/definitions/check-run-pull-request" }
            },
            "deployment": { "$ref": "#/definitions/check-run-deployment" }
          },
          "additionalProperties": false
        },
        "requested_action": {
          "type": ["object", "null"],
          "description": "The action requested by the user.",
          "properties": {
            "identifier": {
              "type": "string",
              "description": "The integrator reference of the action requested by the user."
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "check_run rerequested event"
    },
    "check_run_event": {
      "oneOf": [
        { "$ref": "#/definitions/check_run$completed" },
        { "$ref": "#/definitions/check_run$created" },
        { "$ref": "#/definitions/check_run$requested_action" },
        { "$ref": "#/definitions/check_run$rerequested" }
      ]
    },
    "check_suite$completed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "check_suite", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["completed"] },
        "check_suite": {
          "type": "object",
          "description": "The [check_suite](https://docs.github.com/en/rest/reference/checks#suites).",
          "required": [
            "id",
            "node_id",
            "head_branch",
            "head_sha",
            "status",
            "conclusion",
            "url",
            "before",
            "after",
            "pull_requests",
            "app",
            "created_at",
            "updated_at",
            "latest_check_runs_count",
            "check_runs_url",
            "head_commit"
          ],
          "properties": {
            "id": { "type": "integer" },
            "node_id": { "type": "string" },
            "head_branch": {
              "type": ["string", "null"],
              "description": "The head branch name the changes are on."
            },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the head commit that is being checked."
            },
            "status": {
              "type": ["string", "null"],
              "enum": ["requested", "in_progress", "completed", "queued", null],
              "description": "The summary status for all check runs that are part of the check suite. Can be `queued`, `requested`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "type": ["string", "null"],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                null
              ],
              "description": "The summary conclusion for all check runs that are part of the check suite. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has `completed`."
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "URL that points to the check suite API resource."
            },
            "before": { "type": ["string", "null"] },
            "after": { "type": ["string", "null"] },
            "pull_requests": {
              "type": "array",
              "items": { "$ref": "#/definitions/check-run-pull-request" },
              "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_sha` and `head_branch`. When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty."
            },
            "app": { "$ref": "#/definitions/app" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "runs_rerequestable": { "type": "boolean" },
            "rerequestable": { "type": "boolean" },
            "latest_check_runs_count": { "type": "integer" },
            "check_runs_url": { "type": "string", "format": "uri" },
            "head_commit": { "$ref": "#/definitions/commit-simple" }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "check_suite completed event"
    },
    "check_suite$requested": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "check_suite", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["requested"] },
        "check_suite": {
          "type": "object",
          "description": "The [check_suite](https://docs.github.com/en/rest/reference/checks#suites).",
          "required": [
            "id",
            "node_id",
            "head_branch",
            "head_sha",
            "status",
            "conclusion",
            "url",
            "before",
            "after",
            "pull_requests",
            "app",
            "created_at",
            "updated_at",
            "latest_check_runs_count",
            "check_runs_url",
            "head_commit"
          ],
          "properties": {
            "id": { "type": "integer" },
            "node_id": { "type": "string" },
            "head_branch": {
              "type": ["string", "null"],
              "description": "The head branch name the changes are on."
            },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the head commit that is being checked."
            },
            "status": {
              "type": ["string", "null"],
              "enum": ["requested", "in_progress", "completed", "queued", null],
              "description": "The summary status for all check runs that are part of the check suite. Can be `queued`, `requested`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "description": "The summary conclusion for all check runs that are part of the check suite. Can be one of `success`, `failure`,` neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed.",
              "type": ["string", "null"],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                null
              ]
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "URL that points to the check suite API resource."
            },
            "before": { "type": ["string", "null"] },
            "after": { "type": ["string", "null"] },
            "pull_requests": {
              "type": "array",
              "items": { "$ref": "#/definitions/check-run-pull-request" },
              "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_sha` and `head_branch`. When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty."
            },
            "app": { "$ref": "#/definitions/app" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "runs_rerequestable": { "type": "boolean" },
            "rerequestable": { "type": "boolean" },
            "latest_check_runs_count": { "type": "integer" },
            "check_runs_url": { "type": "string", "format": "uri" },
            "head_commit": { "$ref": "#/definitions/commit-simple" }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "check_suite requested event"
    },
    "check_suite$rerequested": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "check_suite", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["rerequested"] },
        "check_suite": {
          "type": "object",
          "description": "The [check_suite](https://docs.github.com/en/rest/reference/checks#suites).",
          "required": [
            "id",
            "node_id",
            "head_branch",
            "head_sha",
            "status",
            "conclusion",
            "url",
            "before",
            "after",
            "pull_requests",
            "app",
            "created_at",
            "updated_at",
            "latest_check_runs_count",
            "check_runs_url",
            "head_commit"
          ],
          "properties": {
            "id": { "type": "integer" },
            "node_id": { "type": "string" },
            "head_branch": {
              "type": ["string", "null"],
              "description": "The head branch name the changes are on."
            },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the head commit that is being checked."
            },
            "status": {
              "type": ["string", "null"],
              "enum": ["requested", "in_progress", "completed", "queued", null],
              "description": "The summary status for all check runs that are part of the check suite. Can be `queued`, `requested`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "type": ["string", "null"],
              "description": "The summary conclusion for all check runs that are part of the check suite. Can be one of `success`, `failure`,` neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed.",
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                null
              ]
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "URL that points to the check suite API resource."
            },
            "before": { "type": ["string", "null"] },
            "after": { "type": ["string", "null"] },
            "pull_requests": {
              "type": "array",
              "items": { "$ref": "#/definitions/check-run-pull-request" },
              "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_sha` and `head_branch`. When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty."
            },
            "app": { "$ref": "#/definitions/app" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "latest_check_runs_count": { "type": "integer" },
            "check_runs_url": { "type": "string", "format": "uri" },
            "head_commit": { "$ref": "#/definitions/commit-simple" }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "check_suite rerequested event"
    },
    "check_suite_event": {
      "oneOf": [
        { "$ref": "#/definitions/check_suite$completed" },
        { "$ref": "#/definitions/check_suite$requested" },
        { "$ref": "#/definitions/check_suite$rerequested" }
      ]
    },
    "code_scanning_alert$appeared_in_branch": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["appeared_in_branch"] },
        "alert": {
          "type": "object",
          "description": "The code scanning alert involved in the event.",
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "properties": {
            "number": {
              "type": "integer",
              "description": "The code scanning alert number."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "format": "uri",
              "description": "The GitHub URL of the alert resource."
            },
            "instances": {
              "type": "array",
              "items": { "$ref": "#/definitions/alert-instance" }
            },
            "most_recent_instance": { "$ref": "#/definitions/alert-instance" },
            "state": {
              "type": "string",
              "description": "State of a code scanning alert.",
              "enum": ["open", "dismissed", "fixed"]
            },
            "dismissed_by": {
              "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
            },
            "dismissed_at": {
              "type": ["string", "null"],
              "format": "date-time",
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_reason": {
              "type": ["string", "null"],
              "enum": ["false positive", "won't fix", "used in tests", null],
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`."
            },
            "rule": {
              "type": "object",
              "required": ["id", "severity", "description"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the rule used to detect the alert."
                },
                "severity": {
                  "type": ["string", "null"],
                  "enum": ["none", "note", "warning", "error", null],
                  "description": "The severity of the alert."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the rule used to detect the alert."
                }
              },
              "additionalProperties": false
            },
            "tool": {
              "type": "object",
              "required": ["name", "version"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tool used to generate the code scanning analysis alert."
                },
                "version": {
                  "type": ["string", "null"],
                  "description": "The version of the tool used to detect the alert."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "ref": {
          "type": "string",
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "commit_oid": {
          "type": "string",
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/github-org" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "code_scanning_alert appeared_in_branch event"
    },
    "code_scanning_alert$closed_by_user": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["closed_by_user"] },
        "alert": {
          "type": "object",
          "description": "The code scanning alert involved in the event.",
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "properties": {
            "number": {
              "type": "integer",
              "description": "The code scanning alert number."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "format": "uri",
              "description": "The GitHub URL of the alert resource."
            },
            "instances": {
              "type": "array",
              "items": {
                "allOf": [
                  { "$ref": "#/definitions/alert-instance" },
                  {
                    "type": "object",
                    "required": ["state"],
                    "properties": {
                      "state": { "type": "string", "enum": ["dismissed"] }
                    },
                    "tsAdditionalProperties": false
                  }
                ]
              }
            },
            "most_recent_instance": { "$ref": "#/definitions/alert-instance" },
            "state": {
              "type": "string",
              "description": "State of a code scanning alert.",
              "enum": ["dismissed"]
            },
            "dismissed_by": { "$ref": "#/definitions/user" },
            "dismissed_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_reason": {
              "type": ["string", "null"],
              "enum": ["false positive", "won't fix", "used in tests", null],
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`."
            },
            "rule": {
              "type": "object",
              "required": ["id", "severity", "description"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the rule used to detect the alert."
                },
                "severity": {
                  "type": ["string", "null"],
                  "enum": ["none", "note", "warning", "error", null],
                  "description": "The severity of the alert."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the rule used to detect the alert."
                },
                "name": { "type": "string" },
                "full_description": { "type": "string" },
                "tags": { "type": "null" },
                "help": { "type": "null" }
              },
              "additionalProperties": false
            },
            "tool": {
              "type": "object",
              "required": ["name", "version"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tool used to generate the code scanning analysis alert."
                },
                "version": {
                  "type": ["string", "null"],
                  "description": "The version of the tool used to detect the alert."
                },
                "guid": { "type": ["string", "null"] }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "ref": {
          "type": "string",
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "commit_oid": {
          "type": "string",
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "code_scanning_alert closed_by_user event"
    },
    "code_scanning_alert$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "alert": {
          "type": "object",
          "description": "The code scanning alert involved in the event.",
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "properties": {
            "number": {
              "type": "integer",
              "description": "The code scanning alert number."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "format": "uri",
              "description": "The GitHub URL of the alert resource."
            },
            "instances": {
              "type": "array",
              "items": {
                "allOf": [
                  { "$ref": "#/definitions/alert-instance" },
                  {
                    "type": "object",
                    "required": ["state"],
                    "properties": {
                      "state": {
                        "type": "string",
                        "enum": ["open", "dismissed"]
                      }
                    },
                    "tsAdditionalProperties": false
                  }
                ]
              }
            },
            "most_recent_instance": { "$ref": "#/definitions/alert-instance" },
            "state": {
              "type": "string",
              "description": "State of a code scanning alert.",
              "enum": ["open", "dismissed"]
            },
            "dismissed_by": { "type": "null" },
            "dismissed_at": {
              "type": "null",
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_reason": {
              "type": "null",
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`."
            },
            "rule": {
              "type": "object",
              "required": ["id", "severity", "description"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the rule used to detect the alert."
                },
                "severity": {
                  "type": ["string", "null"],
                  "enum": ["none", "note", "warning", "error", null],
                  "description": "The severity of the alert."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the rule used to detect the alert."
                },
                "name": { "type": "string" },
                "full_description": { "type": "string" },
                "tags": { "type": "null" },
                "help": { "type": "null" }
              },
              "additionalProperties": false
            },
            "tool": {
              "type": "object",
              "required": ["name", "version"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tool used to generate the code scanning analysis alert."
                },
                "version": {
                  "type": ["string", "null"],
                  "description": "The version of the tool used to detect the alert."
                },
                "guid": { "type": ["string", "null"] }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "ref": {
          "type": "string",
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "commit_oid": {
          "type": "string",
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/github-org" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "code_scanning_alert created event"
    },
    "code_scanning_alert$fixed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["fixed"] },
        "alert": {
          "type": "object",
          "description": "The code scanning alert involved in the event.",
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "properties": {
            "number": {
              "type": "integer",
              "description": "The code scanning alert number."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "format": "uri",
              "description": "The GitHub URL of the alert resource."
            },
            "instances": {
              "type": "array",
              "items": {
                "allOf": [
                  { "$ref": "#/definitions/alert-instance" },
                  {
                    "type": "object",
                    "required": ["state"],
                    "properties": {
                      "state": { "type": "string", "enum": ["fixed"] }
                    },
                    "tsAdditionalProperties": false
                  }
                ]
              }
            },
            "state": {
              "type": "string",
              "description": "State of a code scanning alert.",
              "enum": ["fixed"]
            },
            "dismissed_by": {
              "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
            },
            "dismissed_at": {
              "type": ["string", "null"],
              "format": "date-time",
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_reason": {
              "type": ["string", "null"],
              "enum": ["false positive", "won't fix", "used in tests", null],
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`."
            },
            "rule": {
              "type": "object",
              "required": ["id", "severity", "description"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the rule used to detect the alert."
                },
                "severity": {
                  "type": ["string", "null"],
                  "enum": ["none", "note", "warning", "error", null],
                  "description": "The severity of the alert."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the rule used to detect the alert."
                },
                "name": { "type": "string" },
                "full_description": { "type": "string" },
                "tags": { "type": "null" },
                "help": { "type": "null" }
              },
              "additionalProperties": false
            },
            "tool": {
              "type": "object",
              "required": ["name", "version"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tool used to generate the code scanning analysis alert."
                },
                "version": {
                  "type": ["string", "null"],
                  "description": "The version of the tool used to detect the alert."
                },
                "guid": { "type": ["string", "null"] }
              },
              "additionalProperties": false
            },
            "most_recent_instance": { "$ref": "#/definitions/alert-instance" },
            "instances_url": { "type": "string", "format": "uri" }
          },
          "additionalProperties": false
        },
        "ref": {
          "type": "string",
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "commit_oid": {
          "type": "string",
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/github-org" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "code_scanning_alert fixed event"
    },
    "code_scanning_alert$reopened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["reopened"] },
        "alert": {
          "type": "object",
          "description": "The code scanning alert involved in the event.",
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "properties": {
            "number": {
              "type": "integer",
              "description": "The code scanning alert number."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "format": "uri",
              "description": "The GitHub URL of the alert resource."
            },
            "instances": {
              "type": "array",
              "items": {
                "allOf": [
                  { "$ref": "#/definitions/alert-instance" },
                  {
                    "type": "object",
                    "required": ["state"],
                    "properties": {
                      "state": { "type": "string", "enum": ["open"] }
                    },
                    "tsAdditionalProperties": false
                  }
                ]
              }
            },
            "most_recent_instance": { "$ref": "#/definitions/alert-instance" },
            "state": {
              "type": "string",
              "description": "State of a code scanning alert.",
              "enum": ["open", "dismissed", "fixed"]
            },
            "dismissed_by": { "type": "null" },
            "dismissed_at": {
              "type": "null",
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_reason": {
              "type": "null",
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`."
            },
            "rule": {
              "type": "object",
              "required": ["id", "severity", "description"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the rule used to detect the alert."
                },
                "severity": {
                  "type": ["string", "null"],
                  "enum": ["none", "note", "warning", "error", null],
                  "description": "The severity of the alert."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the rule used to detect the alert."
                },
                "name": { "type": "string" },
                "full_description": { "type": "string" },
                "tags": { "type": "null" },
                "help": { "type": "null" }
              },
              "additionalProperties": false
            },
            "tool": {
              "type": "object",
              "required": ["name", "version"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tool used to generate the code scanning analysis alert."
                },
                "version": {
                  "type": ["string", "null"],
                  "description": "The version of the tool used to detect the alert."
                },
                "guid": { "type": ["string", "null"] }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "ref": {
          "type": "string",
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "commit_oid": {
          "type": "string",
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/github-org" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "code_scanning_alert reopened event"
    },
    "code_scanning_alert$reopened_by_user": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["reopened_by_user"] },
        "alert": {
          "type": "object",
          "description": "The code scanning alert involved in the event.",
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "properties": {
            "number": {
              "type": "integer",
              "description": "The code scanning alert number."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "The REST API URL of the alert resource."
            },
            "html_url": {
              "type": "string",
              "format": "uri",
              "description": "The GitHub URL of the alert resource."
            },
            "instances": {
              "type": "array",
              "items": {
                "allOf": [
                  { "$ref": "#/definitions/alert-instance" },
                  {
                    "type": "object",
                    "required": ["state"],
                    "properties": {
                      "state": { "type": "string", "enum": ["open"] }
                    },
                    "tsAdditionalProperties": false
                  }
                ]
              }
            },
            "most_recent_instance": { "$ref": "#/definitions/alert-instance" },
            "state": {
              "type": "string",
              "description": "State of a code scanning alert.",
              "enum": ["open"]
            },
            "dismissed_by": { "type": "null" },
            "dismissed_at": {
              "type": "null",
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "dismissed_reason": {
              "type": "null",
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`."
            },
            "rule": {
              "type": "object",
              "required": ["id", "severity", "description"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the rule used to detect the alert."
                },
                "severity": {
                  "type": ["string", "null"],
                  "enum": ["none", "note", "warning", "error", null],
                  "description": "The severity of the alert."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the rule used to detect the alert."
                }
              },
              "additionalProperties": false
            },
            "tool": {
              "type": "object",
              "required": ["name", "version"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tool used to generate the code scanning analysis alert."
                },
                "version": {
                  "type": ["string", "null"],
                  "description": "The version of the tool used to detect the alert."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "ref": {
          "type": "string",
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "commit_oid": {
          "type": "string",
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "code_scanning_alert reopened_by_user event"
    },
    "code_scanning_alert_event": {
      "oneOf": [
        { "$ref": "#/definitions/code_scanning_alert$appeared_in_branch" },
        { "$ref": "#/definitions/code_scanning_alert$closed_by_user" },
        { "$ref": "#/definitions/code_scanning_alert$created" },
        { "$ref": "#/definitions/code_scanning_alert$fixed" },
        { "$ref": "#/definitions/code_scanning_alert$reopened" },
        { "$ref": "#/definitions/code_scanning_alert$reopened_by_user" }
      ]
    },
    "commit_comment$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "A commit comment is created. The type of activity is specified in the `action` property. ",
      "required": ["action", "comment", "repository", "sender"],
      "properties": {
        "action": {
          "type": "string",
          "enum": ["created"],
          "description": "The action performed. Can be `created`."
        },
        "comment": {
          "type": "object",
          "description": "The [commit comment](https://docs.github.com/en/rest/reference/repos#get-a-commit-comment) resource.",
          "required": [
            "url",
            "html_url",
            "id",
            "node_id",
            "user",
            "position",
            "line",
            "path",
            "commit_id",
            "created_at",
            "updated_at",
            "author_association",
            "body"
          ],
          "properties": {
            "url": { "type": "string", "format": "uri" },
            "html_url": { "type": "string", "format": "uri" },
            "id": {
              "type": "integer",
              "description": "The ID of the commit comment."
            },
            "node_id": {
              "type": "string",
              "description": "The node ID of the commit comment."
            },
            "user": { "$ref": "#/definitions/user" },
            "position": {
              "type": ["integer", "null"],
              "description": "The line index in the diff to which the comment applies."
            },
            "line": {
              "type": ["integer", "null"],
              "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment"
            },
            "path": {
              "type": ["string", "null"],
              "description": "The relative path of the file to which the comment applies."
            },
            "commit_id": {
              "type": "string",
              "description": "The SHA of the commit to which the comment applies."
            },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "body": {
              "type": "string",
              "description": "The text of the comment."
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "commit_comment created event"
    },
    "commit_comment_event": {
      "oneOf": [{ "$ref": "#/definitions/commit_comment$created" }]
    },
    "create$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "A Git branch or tag is created.",
      "required": [
        "ref",
        "ref_type",
        "master_branch",
        "description",
        "pusher_type",
        "repository",
        "sender"
      ],
      "properties": {
        "ref": {
          "type": "string",
          "description": "The [`git ref`](https://docs.github.com/en/rest/reference/git#get-a-reference) resource."
        },
        "ref_type": {
          "type": "string",
          "enum": ["tag", "branch"],
          "description": "The type of Git ref object created in the repository. Can be either `branch` or `tag`."
        },
        "master_branch": {
          "type": "string",
          "description": "The name of the repository's default branch (usually `main`)."
        },
        "description": {
          "type": ["string", "null"],
          "description": "The repository's current description."
        },
        "pusher_type": {
          "type": "string",
          "description": "The pusher type for the event. Can be either `user` or a deploy key."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "create event"
    },
    "delete$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "A Git branch or tag is deleted.",
      "required": ["ref", "ref_type", "pusher_type", "repository", "sender"],
      "properties": {
        "ref": {
          "type": "string",
          "description": "The [`git ref`](https://docs.github.com/en/rest/reference/git#get-a-reference) resource."
        },
        "ref_type": {
          "type": "string",
          "enum": ["tag", "branch"],
          "description": "The type of Git ref object deleted in the repository. Can be either `branch` or `tag`."
        },
        "pusher_type": {
          "type": "string",
          "description": "The pusher type for the event. Can be either `user` or a deploy key."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "delete event"
    },
    "dependabot_alert$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "alert", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "alert": {
          "allOf": [
            { "$ref": "#/definitions/dependabot-alert" },
            {
              "type": "object",
              "required": [
                "state",
                "fixed_at",
                "dismissed_at",
                "dismissed_by",
                "dismissed_reason",
                "dismissed_comment"
              ],
              "properties": {
                "state": { "type": "string", "enum": ["open"] },
                "fixed_at": { "type": "null" },
                "dismissed_at": { "type": "null" },
                "dismissed_by": { "type": "null" },
                "dismissed_reason": { "type": "null" },
                "dismissed_comment": { "type": "null" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/github-org" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "dependabot_alert created event"
    },
    "dependabot_alert$dismissed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "alert", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["dismissed"] },
        "alert": {
          "allOf": [
            { "$ref": "#/definitions/dependabot-alert" },
            {
              "type": "object",
              "required": [
                "state",
                "dismissed_at",
                "dismissed_by",
                "dismissed_reason"
              ],
              "properties": {
                "state": { "type": "string", "enum": ["dismissed"] },
                "dismissed_at": { "type": "string", "format": "date-time" },
                "dismissed_by": { "$ref": "#/definitions/user" },
                "dismissed_reason": {
                  "type": "string",
                  "enum": [
                    "fix_started",
                    "inaccurate",
                    "no_bandwidth",
                    "not_used",
                    "tolerable_risk"
                  ]
                }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "dependabot_alert dismissed event"
    },
    "dependabot_alert$fixed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "alert", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["fixed"] },
        "alert": {
          "allOf": [
            { "$ref": "#/definitions/dependabot-alert" },
            {
              "type": "object",
              "required": ["state", "fixed_at"],
              "properties": {
                "state": { "type": "string", "enum": ["fixed"] },
                "fixed_at": { "type": "string", "format": "date-time" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/github-org" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "dependabot_alert fixed event"
    },
    "dependabot_alert$reintroduced": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "alert", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["reintroduced"] },
        "alert": { "$ref": "#/definitions/dependabot-alert" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/github-org" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "dependabot_alert reintroduced event"
    },
    "dependabot_alert$reopened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "alert", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["reopened"] },
        "alert": { "$ref": "#/definitions/dependabot-alert" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "dependabot_alert reopened event"
    },
    "dependabot_alert_event": {
      "oneOf": [
        { "$ref": "#/definitions/dependabot_alert$created" },
        { "$ref": "#/definitions/dependabot_alert$dismissed" },
        { "$ref": "#/definitions/dependabot_alert$fixed" },
        { "$ref": "#/definitions/dependabot_alert$reintroduced" },
        { "$ref": "#/definitions/dependabot_alert$reopened" }
      ]
    },
    "deploy_key$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "key", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "key": {
          "type": "object",
          "description": "The [`deploy key`](https://docs.github.com/en/rest/reference/deployments#get-a-deploy-key) resource.",
          "required": [
            "id",
            "key",
            "url",
            "title",
            "verified",
            "created_at",
            "read_only"
          ],
          "properties": {
            "id": { "type": "integer" },
            "key": { "type": "string" },
            "url": { "type": "string", "format": "uri" },
            "title": { "type": "string" },
            "verified": { "type": "boolean" },
            "created_at": { "type": "string", "format": "date-time" },
            "read_only": { "type": "boolean" }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "deploy_key created event"
    },
    "deploy_key$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "key", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "key": {
          "type": "object",
          "description": "The [`deploy key`](https://docs.github.com/en/rest/reference/deployments#get-a-deploy-key) resource.",
          "required": [
            "id",
            "key",
            "url",
            "title",
            "verified",
            "created_at",
            "read_only"
          ],
          "properties": {
            "id": { "type": "integer" },
            "key": { "type": "string" },
            "url": { "type": "string", "format": "uri" },
            "title": { "type": "string" },
            "verified": { "type": "boolean" },
            "created_at": { "type": "string", "format": "date-time" },
            "read_only": { "type": "boolean" }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "deploy_key deleted event"
    },
    "deploy_key_event": {
      "oneOf": [
        { "$ref": "#/definitions/deploy_key$created" },
        { "$ref": "#/definitions/deploy_key$deleted" }
      ]
    },
    "deployment$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "deployment",
        "workflow",
        "workflow_run",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "deployment": { "$ref": "#/definitions/deployment" },
        "workflow": {
          "oneOf": [{ "$ref": "#/definitions/workflow" }, { "type": "null" }]
        },
        "workflow_run": {
          "oneOf": [
            { "$ref": "#/definitions/deployment-workflow-run" },
            { "type": "null" }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "deployment created event"
    },
    "deployment_event": {
      "oneOf": [{ "$ref": "#/definitions/deployment$created" }]
    },
    "deployment_protection_rule$requested": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "deployment protection rule requested event",
      "type": "object",
      "required": ["action", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["requested"] },
        "environment": {
          "description": "The name of the environment that has the deployment protection rule.",
          "type": "string"
        },
        "event": {
          "description": "The event that triggered the deployment protection rule.",
          "type": "string"
        },
        "deployment_callback_url": {
          "description": "The URL to review the deployment protection rule.",
          "type": "string",
          "format": "uri"
        },
        "deployment": { "$ref": "#/definitions/deployment" },
        "pull_requests": {
          "type": "array",
          "items": { "$ref": "#/definitions/pull-request" }
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false
    },
    "deployment_protection_rule_event": {
      "oneOf": [
        { "$ref": "#/definitions/deployment_protection_rule$requested" }
      ]
    },
    "deployment_review$approved": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "workflow_run",
        "since",
        "repository",
        "organization",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["approved"] },
        "workflow_run": { "$ref": "#/definitions/workflow-run" },
        "since": { "type": "string", "format": "date-time" },
        "workflow_job_run": {
          "type": "object",
          "required": [
            "id",
            "name",
            "status",
            "conclusion",
            "html_url",
            "created_at",
            "updated_at",
            "environment"
          ],
          "properties": {
            "id": { "type": "integer" },
            "name": { "type": "string" },
            "status": {
              "type": "string",
              "enum": ["queued", "in_progress", "completed", "waiting"]
            },
            "conclusion": {
              "type": ["string", "null"],
              "enum": ["success", "failure", "cancelled", "skipped", null]
            },
            "html_url": { "type": "string", "format": "uri" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "environment": { "type": "string" }
          },
          "additionalProperties": false
        },
        "workflow_job_runs": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "id",
              "name",
              "status",
              "conclusion",
              "html_url",
              "created_at",
              "updated_at",
              "environment"
            ],
            "properties": {
              "id": { "type": "integer" },
              "name": { "type": "string" },
              "status": {
                "type": "string",
                "enum": ["queued", "in_progress", "completed", "waiting"]
              },
              "conclusion": {
                "type": ["string", "null"],
                "enum": ["success", "failure", "cancelled", "skipped", null]
              },
              "html_url": { "type": "string", "format": "uri" },
              "created_at": { "type": "string", "format": "date-time" },
              "updated_at": { "type": "string", "format": "date-time" },
              "environment": { "type": "string" }
            },
            "additionalProperties": false
          }
        },
        "reviewers": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "object",
                "required": ["type", "reviewer"],
                "properties": {
                  "type": { "type": "string", "enum": ["User"] },
                  "reviewer": { "$ref": "#/definitions/user" }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": ["type", "reviewer"],
                "properties": {
                  "type": { "type": "string", "enum": ["Team"] },
                  "reviewer": { "$ref": "#/definitions/team" }
                },
                "additionalProperties": false
              }
            ]
          }
        },
        "approver": { "$ref": "#/definitions/user" },
        "comment": { "type": "string" },
        "repository": { "$ref": "#/definitions/repository" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "deployment_review approved event"
    },
    "deployment_review$rejected": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "workflow_run",
        "since",
        "repository",
        "organization",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["rejected"] },
        "workflow_run": { "$ref": "#/definitions/workflow-run" },
        "since": { "type": "string", "format": "date-time" },
        "workflow_job_run": {
          "type": "object",
          "required": [
            "id",
            "name",
            "status",
            "conclusion",
            "html_url",
            "created_at",
            "updated_at",
            "environment"
          ],
          "properties": {
            "id": { "type": "integer" },
            "name": { "type": "string" },
            "status": {
              "type": "string",
              "enum": ["queued", "in_progress", "completed", "waiting"]
            },
            "conclusion": {
              "type": ["string", "null"],
              "enum": ["success", "failure", "cancelled", "skipped", null]
            },
            "html_url": { "type": "string", "format": "uri" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "environment": { "type": "string" }
          },
          "additionalProperties": false
        },
        "workflow_job_runs": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "id",
              "name",
              "status",
              "conclusion",
              "html_url",
              "created_at",
              "updated_at",
              "environment"
            ],
            "properties": {
              "id": { "type": "integer" },
              "name": { "type": "string" },
              "status": {
                "type": "string",
                "enum": ["queued", "in_progress", "completed", "waiting"]
              },
              "conclusion": {
                "type": ["string", "null"],
                "enum": ["success", "failure", "cancelled", "skipped", null]
              },
              "html_url": { "type": "string", "format": "uri" },
              "created_at": { "type": "string", "format": "date-time" },
              "updated_at": { "type": "string", "format": "date-time" },
              "environment": { "type": "string" }
            },
            "additionalProperties": false
          }
        },
        "reviewers": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "object",
                "required": ["type", "reviewer"],
                "properties": {
                  "type": { "type": "string", "enum": ["User"] },
                  "reviewer": { "$ref": "#/definitions/user" }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": ["type", "reviewer"],
                "properties": {
                  "type": { "type": "string", "enum": ["Team"] },
                  "reviewer": { "$ref": "#/definitions/team" }
                },
                "additionalProperties": false
              }
            ]
          }
        },
        "approver": { "$ref": "#/definitions/user" },
        "comment": { "type": "string" },
        "repository": { "$ref": "#/definitions/repository" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "deployment_review rejected event"
    },
    "deployment_review$requested": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "environment",
        "workflow_run",
        "since",
        "workflow_job_run",
        "reviewers",
        "requestor",
        "repository",
        "organization",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["requested"] },
        "workflow_run": {
          "oneOf": [
            { "$ref": "#/definitions/workflow-run" },
            { "type": "null" }
          ]
        },
        "since": { "type": "string", "format": "date-time" },
        "workflow_job_run": {
          "type": "object",
          "required": [
            "id",
            "name",
            "status",
            "conclusion",
            "html_url",
            "created_at",
            "updated_at",
            "environment"
          ],
          "properties": {
            "id": { "type": "integer" },
            "name": { "type": "string" },
            "status": {
              "type": "string",
              "enum": ["queued", "in_progress", "completed", "waiting"]
            },
            "conclusion": {
              "type": ["string", "null"],
              "enum": ["success", "failure", "cancelled", "skipped", null]
            },
            "html_url": { "type": "string", "format": "uri" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "environment": { "type": "string" }
          },
          "additionalProperties": false
        },
        "environment": { "type": "string" },
        "reviewers": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "object",
                "required": ["type", "reviewer"],
                "properties": {
                  "type": { "type": "string", "enum": ["User"] },
                  "reviewer": { "$ref": "#/definitions/user" }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": ["type", "reviewer"],
                "properties": {
                  "type": { "type": "string", "enum": ["Team"] },
                  "reviewer": { "$ref": "#/definitions/team" }
                },
                "additionalProperties": false
              }
            ]
          }
        },
        "requestor": { "$ref": "#/definitions/user" },
        "repository": { "$ref": "#/definitions/repository" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "deployment_review requested event"
    },
    "deployment_review_event": {
      "oneOf": [
        { "$ref": "#/definitions/deployment_review$approved" },
        { "$ref": "#/definitions/deployment_review$rejected" },
        { "$ref": "#/definitions/deployment_review$requested" }
      ]
    },
    "deployment_status$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "deployment_status",
        "deployment",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "deployment_status": {
          "type": "object",
          "description": "The [deployment status](https://docs.github.com/en/rest/reference/deployments#list-deployment-statuses).",
          "required": [
            "url",
            "id",
            "node_id",
            "state",
            "creator",
            "description",
            "environment",
            "target_url",
            "created_at",
            "updated_at",
            "deployment_url",
            "repository_url"
          ],
          "properties": {
            "url": { "type": "string", "format": "uri" },
            "id": { "type": "integer" },
            "node_id": { "type": "string" },
            "state": {
              "type": "string",
              "description": "The new state. Can be `pending`, `success`, `failure`, or `error`.",
              "enum": [
                "pending",
                "in_progress",
                "success",
                "failure",
                "error",
                "waiting",
                "queued"
              ]
            },
            "creator": { "$ref": "#/definitions/user" },
            "description": {
              "type": "string",
              "description": "The optional human-readable description added to the status."
            },
            "environment": { "type": "string" },
            "environment_url": {
              "oneOf": [
                { "type": "string", "format": "uri" },
                { "type": "string", "enum": [""] }
              ]
            },
            "log_url": { "type": "string", "format": "uri" },
            "target_url": {
              "type": "string",
              "description": "The optional link added to the status."
            },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "deployment_url": { "type": "string", "format": "uri" },
            "repository_url": { "type": "string", "format": "uri" },
            "performed_via_github_app": {
              "oneOf": [{ "$ref": "#/definitions/app" }, { "type": "null" }]
            }
          },
          "additionalProperties": false
        },
        "deployment": { "$ref": "#/definitions/deployment" },
        "check_run": {
          "type": "object",
          "required": [
            "id",
            "name",
            "node_id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "details_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at"
          ],
          "properties": {
            "id": { "type": "integer", "description": "The id of the check." },
            "name": {
              "type": "string",
              "description": "The name of the check run."
            },
            "node_id": { "type": "string" },
            "head_sha": {
              "type": "string",
              "description": "The SHA of the commit that is being checked."
            },
            "external_id": { "type": "string" },
            "url": { "type": "string", "format": "uri" },
            "html_url": { "type": "string", "format": "uri" },
            "details_url": { "type": "string", "format": "uri" },
            "status": {
              "type": "string",
              "enum": ["queued", "in_progress", "completed", "waiting"],
              "description": "The current status of the check run. Can be `queued`, `in_progress`, or `completed`."
            },
            "conclusion": {
              "type": ["string", "null"],
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed."
            },
            "started_at": { "type": "string", "format": "date-time" },
            "completed_at": {
              "type": ["string", "null"],
              "format": "date-time"
            }
          },
          "additionalProperties": false
        },
        "workflow_run": { "$ref": "#/definitions/deployment-workflow-run" },
        "workflow": { "$ref": "#/definitions/workflow" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "deployment_status created event"
    },
    "deployment_status_event": {
      "oneOf": [{ "$ref": "#/definitions/deployment_status$created" }]
    },
    "discussion$answered": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "discussion", "answer", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["answered"] },
        "discussion": {
          "allOf": [
            { "$ref": "#/definitions/discussion" },
            {
              "type": "object",
              "required": [
                "category",
                "answer_html_url",
                "answer_chosen_at",
                "answer_chosen_by"
              ],
              "properties": {
                "category": {
                  "type": "object",
                  "required": ["is_answerable"],
                  "properties": {
                    "is_answerable": { "type": "boolean", "enum": [true] }
                  },
                  "tsAdditionalProperties": false
                },
                "answer_html_url": { "type": "string", "format": "uri" },
                "answer_chosen_at": { "type": "string", "format": "date-time" },
                "answer_chosen_by": { "$ref": "#/definitions/user" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "answer": {
          "type": "object",
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body"
          ],
          "properties": {
            "id": { "type": "integer" },
            "node_id": { "type": "string" },
            "html_url": { "type": "string" },
            "parent_id": { "type": "null" },
            "child_comment_count": { "type": "integer" },
            "repository_url": { "type": "string" },
            "discussion_id": { "type": "integer" },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "user": { "$ref": "#/definitions/user" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "body": { "type": "string" }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion answered event"
    },
    "discussion$category_changed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "discussion", "repository", "sender"],
      "properties": {
        "changes": {
          "type": "object",
          "required": ["category"],
          "properties": {
            "category": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "object",
                  "required": [
                    "id",
                    "repository_id",
                    "emoji",
                    "name",
                    "description",
                    "created_at",
                    "updated_at",
                    "slug",
                    "is_answerable"
                  ],
                  "properties": {
                    "id": { "type": "integer" },
                    "repository_id": { "type": "integer" },
                    "emoji": { "type": "string" },
                    "name": { "type": "string" },
                    "description": { "type": "string" },
                    "created_at": { "type": "string", "format": "date-time" },
                    "updated_at": { "type": "string", "format": "date-time" },
                    "slug": { "type": "string" },
                    "is_answerable": { "type": "boolean" }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "action": { "type": "string", "enum": ["category_changed"] },
        "discussion": { "$ref": "#/definitions/discussion" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion category changed event"
    },
    "discussion$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "discussion", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "discussion": {
          "allOf": [
            { "$ref": "#/definitions/discussion" },
            {
              "type": "object",
              "required": [
                "state",
                "locked",
                "answer_html_url",
                "answer_chosen_at",
                "answer_chosen_by"
              ],
              "properties": {
                "state": { "type": "string", "enum": ["open", "converting"] },
                "locked": { "type": "boolean", "enum": [false] },
                "answer_html_url": { "type": "null" },
                "answer_chosen_at": { "type": "null" },
                "answer_chosen_by": { "type": "null" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion created event"
    },
    "discussion$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "discussion", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "discussion": { "$ref": "#/definitions/discussion" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion deleted event"
    },
    "discussion$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "discussion", "repository", "sender"],
      "properties": {
        "changes": {
          "type": "object",
          "properties": {
            "title": {
              "type": "object",
              "required": ["from"],
              "properties": { "from": { "type": "string" } },
              "additionalProperties": false
            },
            "body": {
              "type": "object",
              "required": ["from"],
              "properties": { "from": { "type": "string" } },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "action": { "type": "string", "enum": ["edited"] },
        "discussion": { "$ref": "#/definitions/discussion" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion edited event"
    },
    "discussion$labeled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "discussion", "label", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["labeled"] },
        "discussion": { "$ref": "#/definitions/discussion" },
        "label": { "$ref": "#/definitions/label" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion labeled event"
    },
    "discussion$locked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "discussion", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["locked"] },
        "discussion": {
          "allOf": [
            { "$ref": "#/definitions/discussion" },
            {
              "type": "object",
              "required": ["state", "locked"],
              "properties": {
                "state": { "type": "string", "enum": ["locked"] },
                "locked": { "type": "boolean", "enum": [true] }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion locked event"
    },
    "discussion$pinned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "discussion", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["pinned"] },
        "discussion": { "$ref": "#/definitions/discussion" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion pinned event"
    },
    "discussion$transferred": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "discussion", "repository", "sender"],
      "properties": {
        "changes": {
          "type": "object",
          "required": ["new_discussion", "new_repository"],
          "properties": {
            "new_discussion": { "$ref": "#/definitions/discussion" },
            "new_repository": { "$ref": "#/definitions/repository" }
          },
          "additionalProperties": false
        },
        "action": { "type": "string", "enum": ["transferred"] },
        "discussion": { "$ref": "#/definitions/discussion" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion transferred event"
    },
    "discussion$unanswered": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "discussion",
        "old_answer",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["unanswered"] },
        "discussion": {
          "allOf": [
            { "$ref": "#/definitions/discussion" },
            {
              "type": "object",
              "required": [
                "category",
                "answer_html_url",
                "answer_chosen_at",
                "answer_chosen_by"
              ],
              "properties": {
                "category": {
                  "type": "object",
                  "required": ["is_answerable"],
                  "properties": {
                    "is_answerable": { "type": "boolean", "enum": [true] }
                  },
                  "tsAdditionalProperties": false
                },
                "answer_html_url": { "type": "null" },
                "answer_chosen_at": { "type": "null" },
                "answer_chosen_by": { "type": "null" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "old_answer": {
          "type": "object",
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body"
          ],
          "properties": {
            "id": { "type": "integer" },
            "node_id": { "type": "string" },
            "html_url": { "type": "string" },
            "parent_id": { "type": "null" },
            "child_comment_count": { "type": "integer" },
            "repository_url": { "type": "string" },
            "discussion_id": { "type": "integer" },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "user": { "$ref": "#/definitions/user" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "body": { "type": "string" }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion unanswered event"
    },
    "discussion$unlabeled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "discussion", "label", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["unlabeled"] },
        "discussion": { "$ref": "#/definitions/discussion" },
        "label": { "$ref": "#/definitions/label" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion unlabeled event"
    },
    "discussion$unlocked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "discussion", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["unlocked"] },
        "discussion": {
          "allOf": [
            { "$ref": "#/definitions/discussion" },
            {
              "type": "object",
              "required": ["state", "locked"],
              "properties": {
                "state": { "type": "string", "enum": ["open"] },
                "locked": { "type": "boolean", "enum": [false] }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion unlocked event"
    },
    "discussion$unpinned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "discussion", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["unpinned"] },
        "discussion": { "$ref": "#/definitions/discussion" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion unpinned event"
    },
    "discussion_event": {
      "oneOf": [
        { "$ref": "#/definitions/discussion$answered" },
        { "$ref": "#/definitions/discussion$category_changed" },
        { "$ref": "#/definitions/discussion$created" },
        { "$ref": "#/definitions/discussion$deleted" },
        { "$ref": "#/definitions/discussion$edited" },
        { "$ref": "#/definitions/discussion$labeled" },
        { "$ref": "#/definitions/discussion$locked" },
        { "$ref": "#/definitions/discussion$pinned" },
        { "$ref": "#/definitions/discussion$transferred" },
        { "$ref": "#/definitions/discussion$unanswered" },
        { "$ref": "#/definitions/discussion$unlabeled" },
        { "$ref": "#/definitions/discussion$unlocked" },
        { "$ref": "#/definitions/discussion$unpinned" }
      ]
    },
    "discussion_comment$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "comment",
        "discussion",
        "repository",
        "sender",
        "installation"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "comment": {
          "type": "object",
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body",
            "reactions"
          ],
          "properties": {
            "id": { "type": "integer" },
            "node_id": { "type": "string" },
            "html_url": { "type": "string" },
            "parent_id": { "type": ["integer", "null"] },
            "child_comment_count": { "type": "integer" },
            "repository_url": { "type": "string" },
            "discussion_id": { "type": "integer" },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "user": { "$ref": "#/definitions/user" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "body": {
              "type": "string",
              "description": "The main text of the comment."
            },
            "reactions": { "$ref": "#/definitions/reactions" }
          },
          "additionalProperties": false
        },
        "discussion": { "$ref": "#/definitions/discussion" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion_comment created event"
    },
    "discussion_comment$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "comment",
        "discussion",
        "repository",
        "sender",
        "installation"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "comment": {
          "type": "object",
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body",
            "reactions"
          ],
          "properties": {
            "id": { "type": "integer" },
            "node_id": { "type": "string" },
            "html_url": { "type": "string" },
            "parent_id": { "type": ["integer", "null"] },
            "child_comment_count": { "type": "integer" },
            "repository_url": { "type": "string" },
            "discussion_id": { "type": "integer" },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "user": { "$ref": "#/definitions/user" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "body": {
              "type": "string",
              "description": "The main text of the comment."
            },
            "reactions": { "$ref": "#/definitions/reactions" }
          },
          "additionalProperties": false
        },
        "discussion": { "$ref": "#/definitions/discussion" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion_comment deleted event"
    },
    "discussion_comment$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "changes",
        "comment",
        "discussion",
        "repository",
        "sender",
        "installation"
      ],
      "properties": {
        "changes": {
          "type": "object",
          "required": ["body"],
          "properties": {
            "body": {
              "type": "object",
              "required": ["from"],
              "properties": { "from": { "type": "string" } },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "action": { "type": "string", "enum": ["edited"] },
        "comment": {
          "type": "object",
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body",
            "reactions"
          ],
          "properties": {
            "id": { "type": "integer" },
            "node_id": { "type": "string" },
            "html_url": { "type": "string" },
            "parent_id": { "type": ["integer", "null"] },
            "child_comment_count": { "type": "integer" },
            "repository_url": { "type": "string" },
            "discussion_id": { "type": "integer" },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "user": { "$ref": "#/definitions/user" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "body": {
              "type": "string",
              "description": "The main text of the comment."
            },
            "reactions": { "$ref": "#/definitions/reactions" }
          },
          "additionalProperties": false
        },
        "discussion": { "$ref": "#/definitions/discussion" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "discussion_comment edited event"
    },
    "discussion_comment_event": {
      "oneOf": [
        { "$ref": "#/definitions/discussion_comment$created" },
        { "$ref": "#/definitions/discussion_comment$deleted" },
        { "$ref": "#/definitions/discussion_comment$edited" }
      ]
    },
    "fork$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "A user forks a repository.",
      "required": ["forkee", "repository", "sender"],
      "properties": {
        "forkee": {
          "description": "The created [`repository`](https://docs.github.com/en/rest/reference/repos#get-a-repository) resource.",
          "allOf": [
            { "$ref": "#/definitions/repository" },
            {
              "type": "object",
              "properties": { "fork": { "type": "boolean", "enum": [true] } },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "fork event"
    },
    "github_app_authorization$revoked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["revoked"] },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "github_app_authorization revoked event"
    },
    "github_app_authorization_event": {
      "oneOf": [{ "$ref": "#/definitions/github_app_authorization$revoked" }]
    },
    "gollum$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "A wiki page is created or updated.",
      "required": ["pages", "repository", "sender"],
      "properties": {
        "pages": {
          "type": "array",
          "description": "The pages that were updated.",
          "items": {
            "type": "object",
            "required": [
              "page_name",
              "title",
              "summary",
              "action",
              "sha",
              "html_url"
            ],
            "properties": {
              "page_name": {
                "type": "string",
                "description": "The name of the page."
              },
              "title": {
                "type": "string",
                "description": "The current page title."
              },
              "summary": { "type": "null" },
              "action": {
                "type": "string",
                "enum": ["created", "edited"],
                "description": "The action that was performed on the page. Can be `created` or `edited`."
              },
              "sha": {
                "type": "string",
                "description": "The latest commit SHA of the page."
              },
              "html_url": {
                "type": "string",
                "format": "uri",
                "description": "Points to the HTML wiki page."
              }
            },
            "additionalProperties": false
          }
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "gollum event"
    },
    "installation$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "installation", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "installation": { "$ref": "#/definitions/installation" },
        "repositories": {
          "type": "array",
          "description": "An array of repository objects that the installation can access.",
          "items": {
            "type": "object",
            "required": ["id", "node_id", "name", "full_name", "private"],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier of the repository"
              },
              "node_id": { "type": "string" },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": { "type": "string" },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "additionalProperties": false
          }
        },
        "requester": { "$ref": "#/definitions/user" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "installation created event"
    },
    "installation$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "installation", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "installation": { "$ref": "#/definitions/installation" },
        "repositories": {
          "type": "array",
          "description": "An array of repository objects that the installation can access.",
          "items": {
            "type": "object",
            "required": ["id", "node_id", "name", "full_name", "private"],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier of the repository"
              },
              "node_id": { "type": "string" },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": { "type": "string" },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "additionalProperties": false
          }
        },
        "requester": { "type": "null" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "installation deleted event"
    },
    "installation$new_permissions_accepted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "installation", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["new_permissions_accepted"] },
        "installation": { "$ref": "#/definitions/installation" },
        "repositories": {
          "type": "array",
          "description": "An array of repository objects that the installation can access.",
          "items": {
            "type": "object",
            "required": ["id", "node_id", "name", "full_name", "private"],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier of the repository"
              },
              "node_id": { "type": "string" },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": { "type": "string" },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "additionalProperties": false
          }
        },
        "requester": { "type": "null" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "installation new_permissions_accepted event"
    },
    "installation$suspend": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "installation", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["suspend"] },
        "installation": {
          "allOf": [
            { "$ref": "#/definitions/installation" },
            {
              "type": "object",
              "required": ["suspended_by", "suspended_at"],
              "properties": {
                "suspended_by": { "$ref": "#/definitions/user" },
                "suspended_at": { "type": "string", "format": "date-time" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repositories": {
          "type": "array",
          "description": "An array of repository objects that the installation can access.",
          "items": {
            "type": "object",
            "required": ["id", "node_id", "name", "full_name", "private"],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier of the repository"
              },
              "node_id": { "type": "string" },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": { "type": "string" },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "additionalProperties": false
          }
        },
        "requester": { "type": "null" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "installation suspend event"
    },
    "installation$unsuspend": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "installation", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["unsuspend"] },
        "installation": {
          "allOf": [
            { "$ref": "#/definitions/installation" },
            {
              "type": "object",
              "required": ["suspended_by", "suspended_at"],
              "properties": {
                "suspended_by": { "type": "null" },
                "suspended_at": { "type": "null" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repositories": {
          "type": "array",
          "description": "An array of repository objects that the installation can access.",
          "items": {
            "type": "object",
            "required": ["id", "node_id", "name", "full_name", "private"],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier of the repository"
              },
              "node_id": { "type": "string" },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": { "type": "string" },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "additionalProperties": false
          }
        },
        "requester": { "type": "null" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "installation unsuspend event"
    },
    "installation_event": {
      "oneOf": [
        { "$ref": "#/definitions/installation$created" },
        { "$ref": "#/definitions/installation$deleted" },
        { "$ref": "#/definitions/installation$new_permissions_accepted" },
        { "$ref": "#/definitions/installation$suspend" },
        { "$ref": "#/definitions/installation$unsuspend" }
      ]
    },
    "installation_repositories$added": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "installation",
        "repository_selection",
        "repositories_added",
        "repositories_removed",
        "requester",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["added"] },
        "installation": { "$ref": "#/definitions/installation" },
        "repository_selection": {
          "type": "string",
          "enum": ["all", "selected"],
          "description": "Describe whether all repositories have been selected or there's a selection involved"
        },
        "repositories_added": {
          "type": "array",
          "description": "An array of repository objects, which were added to the installation.",
          "items": {
            "type": "object",
            "required": ["id", "node_id", "name", "full_name", "private"],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier of the repository"
              },
              "node_id": { "type": "string" },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": { "type": "string" },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "additionalProperties": false
          }
        },
        "repositories_removed": {
          "type": "array",
          "description": "An array of repository objects, which were removed from the installation.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier of the repository"
              },
              "node_id": { "type": "string" },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": { "type": "string" },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "additionalProperties": false
          },
          "maxItems": 0
        },
        "requester": {
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "installation_repositories added event"
    },
    "installation_repositories$removed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "installation",
        "repository_selection",
        "repositories_added",
        "repositories_removed",
        "requester",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["removed"] },
        "installation": { "$ref": "#/definitions/installation" },
        "repository_selection": {
          "type": "string",
          "enum": ["all", "selected"],
          "description": "Describe whether all repositories have been selected or there's a selection involved"
        },
        "repositories_added": {
          "type": "array",
          "description": "An array of repository objects, which were added to the installation.",
          "items": {
            "type": "object",
            "required": ["id", "node_id", "name", "full_name", "private"],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier of the repository"
              },
              "node_id": { "type": "string" },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": { "type": "string" },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "additionalProperties": false
          },
          "maxItems": 0
        },
        "repositories_removed": {
          "type": "array",
          "description": "An array of repository objects, which were removed from the installation.",
          "items": {
            "type": "object",
            "required": ["id", "node_id", "name", "full_name", "private"],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier of the repository"
              },
              "node_id": { "type": "string" },
              "name": {
                "type": "string",
                "description": "The name of the repository."
              },
              "full_name": { "type": "string" },
              "private": {
                "type": "boolean",
                "description": "Whether the repository is private or public."
              }
            },
            "additionalProperties": false
          }
        },
        "requester": {
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "installation_repositories removed event"
    },
    "installation_repositories_event": {
      "oneOf": [
        { "$ref": "#/definitions/installation_repositories$added" },
        { "$ref": "#/definitions/installation_repositories$removed" }
      ]
    },
    "installation_target$renamed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "target_type",
        "account",
        "changes",
        "installation"
      ],
      "properties": {
        "changes": {
          "type": "object",
          "properties": {
            "login": {
              "type": "object",
              "required": ["from"],
              "properties": { "from": { "type": "string" } },
              "additionalProperties": false
            },
            "slug": {
              "type": "object",
              "properties": { "from": { "type": "string" } },
              "required": ["from"],
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "action": { "type": "string", "enum": ["renamed"] },
        "account": {
          "type": "object",
          "required": ["id", "node_id", "avatar_url", "html_url"],
          "properties": {
            "avatar_url": { "type": "string", "format": "uri" },
            "created_at": { "type": "string", "format": "date-time" },
            "description": { "type": ["null"] },
            "events_url": { "type": "string", "format": "uri-template" },
            "followers": { "type": "integer" },
            "followers_url": { "type": "string", "format": "uri" },
            "following": { "type": "integer" },
            "following_url": { "type": "string", "format": "uri-template" },
            "gists_url": { "type": "string", "format": "uri-template" },
            "gravatar_id": { "type": "string" },
            "has_organization_projects": { "type": "boolean" },
            "has_repository_projects": { "type": "boolean" },
            "hooks_url": { "type": "string" },
            "html_url": { "type": "string", "format": "uri" },
            "id": { "type": "integer" },
            "is_verified": { "type": "boolean" },
            "issues_url": { "type": "string", "format": "uri-template" },
            "login": { "type": "string" },
            "members_url": { "type": "string", "format": "uri-template" },
            "name": { "type": "string" },
            "node_id": { "type": "string" },
            "organizations_url": { "type": "string", "format": "uri" },
            "public_gists": { "type": "integer" },
            "public_members_url": {
              "type": "string",
              "format": "uri-template"
            },
            "public_repos": { "type": "integer" },
            "received_events_url": { "type": "string", "format": "uri" },
            "repos_url": { "type": "string", "format": "uri" },
            "site_admin": { "type": "boolean" },
            "slug": { "type": "string" },
            "starred_url": { "type": "string", "format": "uri-template" },
            "subscriptions_url": { "type": "string", "format": "uri" },
            "type": {
              "type": "string",
              "enum": ["Bot", "User", "Organization"]
            },
            "updated_at": { "type": "string", "format": "date-time" },
            "url": { "type": "string", "format": "uri" },
            "website_url": { "type": ["null"] }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "target_type": { "type": "string" }
      },
      "additionalProperties": false,
      "title": "installation_target renamed event",
      "description": "Somebody renamed the user or organization account that a GitHub App is installed on."
    },
    "installation_target_event": {
      "oneOf": [{ "$ref": "#/definitions/installation_target$renamed" }]
    },
    "issue_comment$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "comment", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "issue": {
          "description": "The [issue](https://docs.github.com/en/rest/reference/issues) the comment belongs to.",
          "allOf": [
            { "$ref": "#/definitions/issue" },
            {
              "type": "object",
              "required": ["labels", "state", "locked", "assignee"],
              "properties": {
                "assignee": {
                  "oneOf": [
                    { "$ref": "#/definitions/user" },
                    { "type": "null" }
                  ]
                },
                "state": {
                  "type": "string",
                  "enum": ["open", "closed"],
                  "description": "State of the issue; either 'open' or 'closed'"
                },
                "locked": { "type": "boolean" },
                "labels": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/label" }
                }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "comment": { "$ref": "#/definitions/issue-comment" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issue_comment created event"
    },
    "issue_comment$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "comment", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "issue": {
          "description": "The [issue](https://docs.github.com/en/rest/reference/issues) the comment belongs to.",
          "allOf": [
            { "$ref": "#/definitions/issue" },
            {
              "type": "object",
              "required": ["labels", "state", "locked", "assignee"],
              "properties": {
                "assignee": {
                  "oneOf": [
                    { "$ref": "#/definitions/user" },
                    { "type": "null" }
                  ]
                },
                "state": {
                  "type": "string",
                  "enum": ["open", "closed"],
                  "description": "State of the issue; either 'open' or 'closed'"
                },
                "locked": { "type": "boolean" },
                "labels": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/label" }
                }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "comment": { "$ref": "#/definitions/issue-comment" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issue_comment deleted event"
    },
    "issue_comment$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "changes",
        "issue",
        "comment",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "changes": {
          "type": "object",
          "description": "The changes to the comment.",
          "properties": {
            "body": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "issue": {
          "description": "The [issue](https://docs.github.com/en/rest/reference/issues) the comment belongs to.",
          "allOf": [
            { "$ref": "#/definitions/issue" },
            {
              "type": "object",
              "required": ["labels", "state", "locked", "assignee"],
              "properties": {
                "assignee": {
                  "oneOf": [
                    { "$ref": "#/definitions/user" },
                    { "type": "null" }
                  ]
                },
                "state": {
                  "type": "string",
                  "enum": ["open", "closed"],
                  "description": "State of the issue; either 'open' or 'closed'"
                },
                "locked": { "type": "boolean" },
                "labels": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/label" }
                }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "comment": { "$ref": "#/definitions/issue-comment" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issue_comment edited event"
    },
    "issue_comment_event": {
      "oneOf": [
        { "$ref": "#/definitions/issue_comment$created" },
        { "$ref": "#/definitions/issue_comment$deleted" },
        { "$ref": "#/definitions/issue_comment$edited" }
      ]
    },
    "issues$assigned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "Activity related to an issue. The type of activity is specified in the action property.",
      "required": ["action", "issue", "repository", "sender"],
      "properties": {
        "action": {
          "type": "string",
          "enum": ["assigned"],
          "description": "The action that was performed."
        },
        "issue": { "$ref": "#/definitions/issue" },
        "assignee": {
          "description": "The optional user who was assigned or unassigned from the issue.",
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues assigned event"
    },
    "issues$closed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "repository", "sender"],
      "properties": {
        "action": {
          "type": "string",
          "enum": ["closed"],
          "description": "The action that was performed."
        },
        "issue": {
          "description": "The [issue](https://docs.github.com/en/rest/reference/issues) itself.",
          "allOf": [
            { "$ref": "#/definitions/issue" },
            {
              "type": "object",
              "required": ["state", "closed_at"],
              "properties": {
                "state": { "type": "string", "enum": ["closed"] },
                "closed_at": { "type": "string" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues closed event"
    },
    "issues$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "issue": { "$ref": "#/definitions/issue" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues deleted event"
    },
    "issues$demilestoned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "milestone", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["demilestoned"] },
        "issue": {
          "allOf": [
            { "$ref": "#/definitions/issue" },
            {
              "type": "object",
              "required": ["milestone"],
              "properties": { "milestone": { "type": "null" } },
              "tsAdditionalProperties": false
            }
          ]
        },
        "milestone": { "$ref": "#/definitions/milestone" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues demilestoned event"
    },
    "issues$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "issue", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "issue": { "$ref": "#/definitions/issue" },
        "label": { "$ref": "#/definitions/label" },
        "changes": {
          "type": "object",
          "description": "The changes to the issue.",
          "properties": {
            "body": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body."
                }
              },
              "additionalProperties": false
            },
            "title": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the title."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues edited event"
    },
    "issues$labeled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["labeled"] },
        "issue": { "$ref": "#/definitions/issue" },
        "label": {
          "$ref": "#/definitions/label",
          "description": "The label that was added to the issue."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues labeled event"
    },
    "issues$locked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["locked"] },
        "issue": {
          "allOf": [
            { "$ref": "#/definitions/issue" },
            {
              "type": "object",
              "required": ["locked", "active_lock_reason"],
              "properties": {
                "locked": { "type": "boolean", "enum": [true] },
                "active_lock_reason": {
                  "type": ["string", "null"],
                  "enum": ["resolved", "off-topic", "too heated", "spam", null]
                }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues locked event"
    },
    "issues$milestoned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "milestone", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["milestoned"] },
        "issue": {
          "allOf": [
            { "$ref": "#/definitions/issue" },
            {
              "type": "object",
              "required": ["milestone"],
              "properties": {
                "milestone": { "$ref": "#/definitions/milestone" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "milestone": { "$ref": "#/definitions/milestone" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues milestoned event"
    },
    "issues$opened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["opened"] },
        "changes": {
          "type": "object",
          "required": ["old_issue", "old_repository"],
          "properties": {
            "old_issue": { "$ref": "#/definitions/issue" },
            "old_repository": { "$ref": "#/definitions/repository" }
          },
          "additionalProperties": false
        },
        "issue": {
          "allOf": [
            { "$ref": "#/definitions/issue" },
            {
              "type": "object",
              "required": ["state", "closed_at"],
              "properties": {
                "state": { "type": "string", "enum": ["open"] },
                "closed_at": { "type": "null" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues opened event"
    },
    "issues$pinned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["pinned"] },
        "issue": { "$ref": "#/definitions/issue" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues pinned event"
    },
    "issues$reopened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["reopened"] },
        "issue": {
          "allOf": [
            { "$ref": "#/definitions/issue" },
            {
              "type": "object",
              "required": ["state"],
              "properties": { "state": { "type": "string", "enum": ["open"] } },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues reopened event"
    },
    "issues$transferred": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "issue", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["transferred"] },
        "changes": {
          "type": "object",
          "required": ["new_issue", "new_repository"],
          "properties": {
            "new_issue": { "$ref": "#/definitions/issue" },
            "new_repository": { "$ref": "#/definitions/repository" }
          },
          "additionalProperties": false
        },
        "issue": { "$ref": "#/definitions/issue" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues transferred event"
    },
    "issues$unassigned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "repository", "sender"],
      "properties": {
        "action": {
          "type": "string",
          "enum": ["unassigned"],
          "description": "The action that was performed."
        },
        "issue": { "$ref": "#/definitions/issue" },
        "assignee": {
          "description": "The optional user who was assigned or unassigned from the issue.",
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues unassigned event"
    },
    "issues$unlabeled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["unlabeled"] },
        "issue": { "$ref": "#/definitions/issue" },
        "label": {
          "$ref": "#/definitions/label",
          "description": "The label that was removed from the issue."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues unlabeled event"
    },
    "issues$unlocked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["unlocked"] },
        "issue": {
          "allOf": [
            { "$ref": "#/definitions/issue" },
            {
              "type": "object",
              "required": ["locked", "active_lock_reason"],
              "properties": {
                "locked": { "type": "boolean", "enum": [false] },
                "active_lock_reason": { "type": "null" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues unlocked event"
    },
    "issues$unpinned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "issue", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["unpinned"] },
        "issue": { "$ref": "#/definitions/issue" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "issues unpinned event"
    },
    "issues_event": {
      "oneOf": [
        { "$ref": "#/definitions/issues$assigned" },
        { "$ref": "#/definitions/issues$closed" },
        { "$ref": "#/definitions/issues$deleted" },
        { "$ref": "#/definitions/issues$demilestoned" },
        { "$ref": "#/definitions/issues$edited" },
        { "$ref": "#/definitions/issues$labeled" },
        { "$ref": "#/definitions/issues$locked" },
        { "$ref": "#/definitions/issues$milestoned" },
        { "$ref": "#/definitions/issues$opened" },
        { "$ref": "#/definitions/issues$pinned" },
        { "$ref": "#/definitions/issues$reopened" },
        { "$ref": "#/definitions/issues$transferred" },
        { "$ref": "#/definitions/issues$unassigned" },
        { "$ref": "#/definitions/issues$unlabeled" },
        { "$ref": "#/definitions/issues$unlocked" },
        { "$ref": "#/definitions/issues$unpinned" }
      ]
    },
    "label$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "label", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "label": {
          "$ref": "#/definitions/label",
          "description": "The label that was added."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "label created event"
    },
    "label$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "label", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "label": {
          "$ref": "#/definitions/label",
          "description": "The label that was removed."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "label deleted event"
    },
    "label$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "label", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "label": {
          "$ref": "#/definitions/label",
          "description": "The label that was edited."
        },
        "changes": {
          "type": "object",
          "description": "The changes to the label if the action was `edited`.",
          "properties": {
            "color": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the color if the action was `edited`."
                }
              },
              "additionalProperties": false
            },
            "name": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the name if the action was `edited`."
                }
              },
              "additionalProperties": false
            },
            "description": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the description if the action was `edited`."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "label edited event"
    },
    "label_event": {
      "oneOf": [
        { "$ref": "#/definitions/label$created" },
        { "$ref": "#/definitions/label$deleted" },
        { "$ref": "#/definitions/label$edited" }
      ]
    },
    "marketplace_purchase$cancelled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["cancelled"] },
        "effective_date": { "type": "string", "format": "date-time" },
        "sender": {
          "type": "object",
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "properties": {
            "login": { "type": "string" },
            "id": { "type": "integer" },
            "avatar_url": { "type": "string", "format": "uri" },
            "gravatar_id": { "type": "string" },
            "url": { "type": "string", "format": "uri" },
            "html_url": { "type": "string", "format": "uri" },
            "followers_url": { "type": "string", "format": "uri" },
            "following_url": { "type": "string", "format": "uri-template" },
            "gists_url": { "type": "string", "format": "uri-template" },
            "starred_url": { "type": "string", "format": "uri-template" },
            "subscriptions_url": { "type": "string", "format": "uri" },
            "organizations_url": { "type": "string", "format": "uri" },
            "repos_url": { "type": "string", "format": "uri" },
            "events_url": { "type": "string", "format": "uri-template" },
            "received_events_url": { "type": "string", "format": "uri" },
            "type": { "type": "string" },
            "site_admin": { "type": "boolean" },
            "email": { "type": "string" }
          },
          "additionalProperties": false
        },
        "marketplace_purchase": {
          "allOf": [
            { "$ref": "#/definitions/marketplace-purchase" },
            {
              "type": "object",
              "required": ["next_billing_date"],
              "properties": {
                "next_billing_date": { "type": "string", "format": "date-time" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/marketplace-purchase"
        }
      },
      "additionalProperties": false,
      "title": "marketplace_purchase cancelled event"
    },
    "marketplace_purchase$changed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["changed"] },
        "effective_date": { "type": "string", "format": "date-time" },
        "sender": {
          "type": "object",
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "properties": {
            "login": { "type": "string" },
            "id": { "type": "integer" },
            "avatar_url": { "type": "string", "format": "uri" },
            "gravatar_id": { "type": "string" },
            "url": { "type": "string", "format": "uri" },
            "html_url": { "type": "string", "format": "uri" },
            "followers_url": { "type": "string", "format": "uri" },
            "following_url": { "type": "string", "format": "uri-template" },
            "gists_url": { "type": "string", "format": "uri-template" },
            "starred_url": { "type": "string", "format": "uri-template" },
            "subscriptions_url": { "type": "string", "format": "uri" },
            "organizations_url": { "type": "string", "format": "uri" },
            "repos_url": { "type": "string", "format": "uri" },
            "events_url": { "type": "string", "format": "uri-template" },
            "received_events_url": { "type": "string", "format": "uri" },
            "type": { "type": "string" },
            "site_admin": { "type": "boolean" },
            "email": { "type": "string" }
          },
          "additionalProperties": false
        },
        "marketplace_purchase": {
          "allOf": [
            { "$ref": "#/definitions/marketplace-purchase" },
            {
              "type": "object",
              "required": ["next_billing_date"],
              "properties": {
                "next_billing_date": { "type": "string", "format": "date-time" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/marketplace-purchase"
        }
      },
      "additionalProperties": false,
      "title": "marketplace_purchase changed event"
    },
    "marketplace_purchase$pending_change": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["pending_change"] },
        "effective_date": { "type": "string", "format": "date-time" },
        "sender": {
          "type": "object",
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "properties": {
            "login": { "type": "string" },
            "id": { "type": "integer" },
            "avatar_url": { "type": "string", "format": "uri" },
            "gravatar_id": { "type": "string" },
            "url": { "type": "string", "format": "uri" },
            "html_url": { "type": "string", "format": "uri" },
            "followers_url": { "type": "string", "format": "uri" },
            "following_url": { "type": "string", "format": "uri-template" },
            "gists_url": { "type": "string", "format": "uri-template" },
            "starred_url": { "type": "string", "format": "uri-template" },
            "subscriptions_url": { "type": "string", "format": "uri" },
            "organizations_url": { "type": "string", "format": "uri" },
            "repos_url": { "type": "string", "format": "uri" },
            "events_url": { "type": "string", "format": "uri-template" },
            "received_events_url": { "type": "string", "format": "uri" },
            "type": { "type": "string" },
            "site_admin": { "type": "boolean" },
            "email": { "type": "string" }
          },
          "additionalProperties": false
        },
        "marketplace_purchase": {
          "allOf": [
            { "$ref": "#/definitions/marketplace-purchase" },
            {
              "type": "object",
              "required": ["next_billing_date"],
              "properties": {
                "next_billing_date": { "type": "string", "format": "date-time" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/marketplace-purchase"
        }
      },
      "additionalProperties": false,
      "title": "marketplace_purchase pending_change event"
    },
    "marketplace_purchase$pending_change_cancelled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["pending_change_cancelled"] },
        "effective_date": { "type": "string", "format": "date-time" },
        "sender": {
          "type": "object",
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "properties": {
            "login": { "type": "string" },
            "id": { "type": "integer" },
            "avatar_url": { "type": "string", "format": "uri" },
            "gravatar_id": { "type": "string" },
            "url": { "type": "string", "format": "uri" },
            "html_url": { "type": "string", "format": "uri" },
            "followers_url": { "type": "string", "format": "uri" },
            "following_url": { "type": "string", "format": "uri-template" },
            "gists_url": { "type": "string", "format": "uri-template" },
            "starred_url": { "type": "string", "format": "uri-template" },
            "subscriptions_url": { "type": "string", "format": "uri" },
            "organizations_url": { "type": "string", "format": "uri" },
            "repos_url": { "type": "string", "format": "uri" },
            "events_url": { "type": "string", "format": "uri-template" },
            "received_events_url": { "type": "string", "format": "uri" },
            "type": { "type": "string" },
            "site_admin": { "type": "boolean" },
            "email": { "type": "string" }
          },
          "additionalProperties": false
        },
        "marketplace_purchase": {
          "allOf": [
            { "$ref": "#/definitions/marketplace-purchase" },
            {
              "type": "object",
              "required": ["next_billing_date"],
              "properties": {
                "next_billing_date": { "type": "string", "format": "date-time" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/marketplace-purchase"
        }
      },
      "additionalProperties": false,
      "title": "marketplace_purchase pending_change_cancelled event"
    },
    "marketplace_purchase$purchased": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["purchased"] },
        "effective_date": { "type": "string", "format": "date-time" },
        "sender": {
          "type": "object",
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "properties": {
            "login": { "type": "string" },
            "id": { "type": "integer" },
            "avatar_url": { "type": "string", "format": "uri" },
            "gravatar_id": { "type": "string" },
            "url": { "type": "string", "format": "uri" },
            "html_url": { "type": "string", "format": "uri" },
            "followers_url": { "type": "string", "format": "uri" },
            "following_url": { "type": "string", "format": "uri-template" },
            "gists_url": { "type": "string", "format": "uri-template" },
            "starred_url": { "type": "string", "format": "uri-template" },
            "subscriptions_url": { "type": "string", "format": "uri" },
            "organizations_url": { "type": "string", "format": "uri" },
            "repos_url": { "type": "string", "format": "uri" },
            "events_url": { "type": "string", "format": "uri-template" },
            "received_events_url": { "type": "string", "format": "uri" },
            "type": { "type": "string" },
            "site_admin": { "type": "boolean" },
            "email": { "type": "string" }
          },
          "additionalProperties": false
        },
        "marketplace_purchase": {
          "allOf": [
            { "$ref": "#/definitions/marketplace-purchase" },
            {
              "type": "object",
              "required": ["next_billing_date"],
              "properties": {
                "next_billing_date": { "type": "string", "format": "date-time" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/marketplace-purchase"
        }
      },
      "additionalProperties": false,
      "title": "marketplace_purchase purchased event"
    },
    "marketplace_purchase_event": {
      "oneOf": [
        { "$ref": "#/definitions/marketplace_purchase$cancelled" },
        { "$ref": "#/definitions/marketplace_purchase$changed" },
        { "$ref": "#/definitions/marketplace_purchase$pending_change" },
        {
          "$ref": "#/definitions/marketplace_purchase$pending_change_cancelled"
        },
        { "$ref": "#/definitions/marketplace_purchase$purchased" }
      ]
    },
    "member$added": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "Activity related to repository collaborators. The type of activity is specified in the action property.",
      "required": ["action", "member", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["added"] },
        "changes": {
          "type": "object",
          "properties": {
            "permission": {
              "type": "object",
              "required": ["to"],
              "properties": {
                "to": { "type": "string", "enum": ["write", "admin"] }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "member": {
          "$ref": "#/definitions/user",
          "description": "The user that was added."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "member added event"
    },
    "member$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "member", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "member": {
          "$ref": "#/definitions/user",
          "description": "The user who's permissions are changed."
        },
        "changes": {
          "type": "object",
          "description": "The changes to the collaborator permissions",
          "required": ["old_permission"],
          "properties": {
            "old_permission": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous permissions of the collaborator if the action was edited."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "member edited event"
    },
    "member$removed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "member", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["removed"] },
        "member": {
          "$ref": "#/definitions/user",
          "description": "The user that was removed."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "member removed event"
    },
    "member_event": {
      "oneOf": [
        { "$ref": "#/definitions/member$added" },
        { "$ref": "#/definitions/member$edited" },
        { "$ref": "#/definitions/member$removed" }
      ]
    },
    "membership$added": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "scope",
        "member",
        "sender",
        "team",
        "organization"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["added"] },
        "scope": {
          "type": "string",
          "enum": ["team"],
          "description": "The scope of the membership. Currently, can only be `team`."
        },
        "member": {
          "$ref": "#/definitions/user",
          "description": "The [user](https://docs.github.com/en/rest/reference/users) that was added or removed."
        },
        "sender": { "$ref": "#/definitions/user" },
        "team": {
          "$ref": "#/definitions/team",
          "description": "The [team](https://docs.github.com/en/rest/reference/teams) for the membership."
        },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "membership added event"
    },
    "membership$removed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "scope",
        "member",
        "sender",
        "team",
        "organization"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["removed"] },
        "scope": {
          "type": "string",
          "enum": ["team", "organization"],
          "description": "The scope of the membership. Currently, can only be `team`."
        },
        "member": {
          "$ref": "#/definitions/user",
          "description": "The [user](https://docs.github.com/en/rest/reference/users) that was added or removed."
        },
        "sender": { "$ref": "#/definitions/user" },
        "team": {
          "description": "The [team](https://docs.github.com/en/rest/reference/teams) for the membership.",
          "oneOf": [
            { "$ref": "#/definitions/team" },
            {
              "type": "object",
              "required": ["id", "name"],
              "properties": {
                "id": { "type": "integer" },
                "name": { "type": "string" },
                "deleted": { "type": "boolean" }
              },
              "additionalProperties": false
            }
          ]
        },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "membership removed event"
    },
    "membership_event": {
      "oneOf": [
        { "$ref": "#/definitions/membership$added" },
        { "$ref": "#/definitions/membership$removed" }
      ]
    },
    "merge_group$checks_requested": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "required": ["action", "merge_group", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["checks_requested"] },
        "merge_group": {
          "type": "object",
          "description": "The merge group.",
          "required": [
            "head_sha",
            "head_ref",
            "base_ref",
            "base_sha",
            "head_commit"
          ],
          "properties": {
            "head_sha": {
              "type": "string",
              "description": "The SHA of the merge group."
            },
            "head_ref": {
              "type": "string",
              "description": "The full ref of the merge group."
            },
            "base_ref": {
              "type": "string",
              "description": "The full ref of the branch the merge group will be merged into."
            },
            "base_sha": {
              "type": "string",
              "description": "The SHA of the merge group's parent commit."
            },
            "head_commit": {
              "type": "object",
              "description": "An expanded representation of the `head_sha` commit.",
              "required": [
                "id",
                "tree_id",
                "message",
                "timestamp",
                "author",
                "committer"
              ],
              "properties": {
                "id": { "type": "string" },
                "tree_id": { "type": "string" },
                "message": { "type": "string" },
                "timestamp": { "type": "string", "format": "date-time" },
                "author": {
                  "type": "object",
                  "required": ["name", "email"],
                  "properties": {
                    "name": { "type": "string" },
                    "email": { "type": "string" }
                  },
                  "additionalProperties": false
                },
                "committer": {
                  "type": "object",
                  "required": ["name", "email"],
                  "properties": {
                    "name": { "type": "string" },
                    "email": { "type": "string" }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "merge group checks requested event"
    },
    "merge_group_event": {
      "oneOf": [{ "$ref": "#/definitions/merge_group$checks_requested" }]
    },
    "meta$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "hook_id", "hook", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "hook_id": {
          "type": "integer",
          "description": "The id of the modified webhook."
        },
        "hook": {
          "type": "object",
          "description": "The modified webhook. This will contain different keys based on the type of webhook it is: repository, organization, business, app, or GitHub Marketplace.",
          "required": [
            "type",
            "id",
            "name",
            "active",
            "events",
            "config",
            "updated_at",
            "created_at"
          ],
          "properties": {
            "type": { "type": "string" },
            "id": { "type": "integer" },
            "name": { "type": "string" },
            "active": { "type": "boolean" },
            "events": { "$ref": "#/definitions/webhook-events" },
            "config": {
              "type": "object",
              "required": ["content_type", "url", "insecure_ssl"],
              "description": "Configuration object of the webhook",
              "properties": {
                "content_type": {
                  "type": "string",
                  "enum": ["json", "form"],
                  "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`."
                },
                "secret": {
                  "type": "string",
                  "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers)."
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URL to which the payloads will be delivered."
                },
                "insecure_ssl": {
                  "type": "string",
                  "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`.",
                  "enum": ["0", "1"]
                }
              },
              "additionalProperties": false
            },
            "updated_at": { "type": "string", "format": "date-time" },
            "created_at": { "type": "string", "format": "date-time" }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "meta deleted event"
    },
    "meta_event": { "oneOf": [{ "$ref": "#/definitions/meta$deleted" }] },
    "milestone$closed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "milestone", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["closed"] },
        "milestone": {
          "allOf": [
            { "$ref": "#/definitions/milestone" },
            {
              "type": "object",
              "required": ["state", "closed_at"],
              "properties": {
                "state": { "type": "string", "enum": ["closed"] },
                "closed_at": { "type": "string" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "milestone closed event"
    },
    "milestone$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "milestone", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "milestone": {
          "allOf": [
            { "$ref": "#/definitions/milestone" },
            {
              "type": "object",
              "required": ["state", "closed_at"],
              "properties": {
                "state": { "type": "string", "enum": ["open"] },
                "closed_at": { "type": "null" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "milestone created event"
    },
    "milestone$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "milestone", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "milestone": { "$ref": "#/definitions/milestone" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "milestone deleted event"
    },
    "milestone$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "milestone", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "changes": {
          "type": "object",
          "description": "The changes to the milestone if the action was `edited`.",
          "properties": {
            "description": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the description if the action was `edited`."
                }
              },
              "additionalProperties": false
            },
            "due_on": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the due date if the action was `edited`."
                }
              },
              "additionalProperties": false
            },
            "title": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the title if the action was `edited`."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "milestone": { "$ref": "#/definitions/milestone" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "milestone edited event"
    },
    "milestone$opened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "milestone", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["opened"] },
        "milestone": {
          "allOf": [
            { "$ref": "#/definitions/milestone" },
            {
              "type": "object",
              "required": ["state", "closed_at"],
              "properties": {
                "state": { "type": "string", "enum": ["open"] },
                "closed_at": { "type": "null" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "milestone opened event"
    },
    "milestone_event": {
      "oneOf": [
        { "$ref": "#/definitions/milestone$closed" },
        { "$ref": "#/definitions/milestone$created" },
        { "$ref": "#/definitions/milestone$deleted" },
        { "$ref": "#/definitions/milestone$edited" },
        { "$ref": "#/definitions/milestone$opened" }
      ]
    },
    "org_block$blocked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "blocked_user", "organization", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["blocked"] },
        "blocked_user": {
          "$ref": "#/definitions/user",
          "description": "Information about the user that was blocked or unblocked."
        },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "org_block blocked event"
    },
    "org_block$unblocked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "blocked_user", "organization", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["unblocked"] },
        "blocked_user": {
          "$ref": "#/definitions/user",
          "description": "Information about the user that was blocked or unblocked."
        },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "org_block unblocked event"
    },
    "org_block_event": {
      "oneOf": [
        { "$ref": "#/definitions/org_block$blocked" },
        { "$ref": "#/definitions/org_block$unblocked" }
      ]
    },
    "organization$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "organization", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "membership": { "$ref": "#/definitions/membership" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "organization deleted event"
    },
    "organization$member_added": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "membership", "organization", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["member_added"] },
        "membership": { "$ref": "#/definitions/membership" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "organization member_added event"
    },
    "organization$member_invited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "invitation", "user", "organization", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["member_invited"] },
        "invitation": {
          "type": "object",
          "description": "The invitation for the user or email if the action is `member_invited`.",
          "required": [
            "id",
            "node_id",
            "login",
            "email",
            "role",
            "created_at",
            "failed_at",
            "failed_reason",
            "inviter",
            "team_count",
            "invitation_teams_url"
          ],
          "properties": {
            "id": { "type": "number" },
            "node_id": { "type": "string" },
            "login": { "type": "string" },
            "email": { "type": ["string", "null"] },
            "role": { "type": "string" },
            "created_at": { "type": "string", "format": "date-time" },
            "failed_at": {
              "oneOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ]
            },
            "failed_reason": { "type": ["string", "null"] },
            "inviter": { "$ref": "#/definitions/user" },
            "team_count": { "type": "number" },
            "invitation_teams_url": { "type": "string", "format": "uri" }
          },
          "additionalProperties": false
        },
        "user": { "$ref": "#/definitions/user" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "organization member_invited event"
    },
    "organization$member_removed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "membership", "organization", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["member_removed"] },
        "membership": { "$ref": "#/definitions/membership" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "organization member_removed event"
    },
    "organization$renamed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["changes", "action", "organization", "sender"],
      "properties": {
        "changes": {
          "type": "object",
          "required": ["login"],
          "properties": {
            "login": {
              "type": "object",
              "required": ["from"],
              "properties": { "from": { "type": "string" } },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "action": { "type": "string", "enum": ["renamed"] },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "organization renamed event"
    },
    "organization_event": {
      "oneOf": [
        { "$ref": "#/definitions/organization$deleted" },
        { "$ref": "#/definitions/organization$member_added" },
        { "$ref": "#/definitions/organization$member_invited" },
        { "$ref": "#/definitions/organization$member_removed" },
        { "$ref": "#/definitions/organization$renamed" }
      ]
    },
    "package$published": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "package", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["published"] },
        "package": {
          "type": "object",
          "description": "Information about the package.",
          "required": [
            "id",
            "name",
            "namespace",
            "description",
            "ecosystem",
            "package_type",
            "html_url",
            "created_at",
            "updated_at",
            "owner",
            "package_version",
            "registry"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique identifier of the package."
            },
            "name": {
              "type": "string",
              "description": "The name of the package."
            },
            "namespace": { "type": "string" },
            "description": { "type": ["string", "null"] },
            "ecosystem": { "type": "string" },
            "package_type": {
              "type": "string",
              "enum": [
                "npm",
                "maven",
                "rubygems",
                "docker",
                "nuget",
                "CONTAINER"
              ],
              "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry."
            },
            "html_url": { "type": "string", "format": "uri" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "owner": { "$ref": "#/definitions/user" },
            "package_version": {
              "description": "A version of a software package",
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "id",
                    "version",
                    "summary",
                    "name",
                    "description",
                    "html_url",
                    "metadata",
                    "package_files",
                    "installation_command"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the package version."
                    },
                    "version": { "type": "string" },
                    "summary": { "type": "string" },
                    "name": {
                      "type": "string",
                      "description": "The name of the package version."
                    },
                    "description": { "type": "string" },
                    "body": {
                      "oneOf": [
                        { "type": "string" },
                        {
                          "type": "object",
                          "required": [
                            "repository",
                            "info",
                            "attributes",
                            "_formatted"
                          ],
                          "properties": {
                            "repository": {
                              "type": "object",
                              "required": ["repository"],
                              "properties": {
                                "repository": {
                                  "$ref": "#/definitions/repository"
                                }
                              },
                              "additionalProperties": false
                            },
                            "info": {
                              "type": "object",
                              "required": [
                                "type",
                                "oid",
                                "mode",
                                "name",
                                "path",
                                "size",
                                "collection"
                              ],
                              "properties": {
                                "type": { "type": "string" },
                                "oid": { "type": "string" },
                                "mode": { "type": "integer" },
                                "name": { "type": "string" },
                                "path": { "type": "string" },
                                "size": { "type": ["integer", "null"] },
                                "collection": { "type": "boolean" }
                              },
                              "additionalProperties": false
                            },
                            "attributes": {
                              "type": "object",
                              "additionalProperties": false
                            },
                            "_formatted": { "type": "boolean" }
                          },
                          "additionalProperties": false
                        }
                      ]
                    },
                    "body_html": { "type": "string" },
                    "release": {
                      "type": "object",
                      "required": [
                        "url",
                        "html_url",
                        "id",
                        "tag_name",
                        "target_commitish",
                        "name",
                        "draft",
                        "author",
                        "prerelease",
                        "created_at",
                        "published_at"
                      ],
                      "properties": {
                        "url": { "type": "string", "format": "uri" },
                        "html_url": { "type": "string", "format": "uri" },
                        "id": { "type": "integer" },
                        "tag_name": { "type": "string" },
                        "target_commitish": { "type": "string" },
                        "name": { "type": "string" },
                        "draft": { "type": "boolean" },
                        "author": { "$ref": "#/definitions/user" },
                        "prerelease": { "type": "boolean" },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "published_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "additionalProperties": false
                    },
                    "manifest": { "type": "string" },
                    "html_url": { "type": "string", "format": "uri" },
                    "tag_name": { "type": "string" },
                    "target_commitish": { "type": "string" },
                    "target_oid": { "type": "string" },
                    "draft": { "type": "boolean" },
                    "prerelease": { "type": "boolean" },
                    "created_at": { "type": "string", "format": "date-time" },
                    "updated_at": { "type": "string", "format": "date-time" },
                    "metadata": {
                      "type": "array",
                      "items": {},
                      "description": "Package Version Metadata"
                    },
                    "container_metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "labels": { "type": ["object", "null"] },
                            "manifest": { "type": ["object", "null"] },
                            "tag": {
                              "type": "object",
                              "properties": {
                                "digest": { "type": "string" },
                                "name": { "type": "string" }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        { "type": "null" }
                      ]
                    },
                    "docker_metadata": { "type": "array", "items": {} },
                    "npm_metadata": {
                      "oneOf": [
                        { "$ref": "#/definitions/package-npm-metadata" },
                        { "type": "null" }
                      ]
                    },
                    "nuget_metadata": {
                      "oneOf": [
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/package-nuget-metadata"
                          }
                        },
                        { "type": "null" }
                      ]
                    },
                    "rubygems_metadata": { "type": "array", "items": {} },
                    "package_files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "download_url",
                          "id",
                          "name",
                          "sha256",
                          "sha1",
                          "md5",
                          "content_type",
                          "state",
                          "size",
                          "created_at",
                          "updated_at"
                        ],
                        "properties": {
                          "download_url": { "type": "string", "format": "uri" },
                          "id": { "type": "integer" },
                          "name": { "type": "string" },
                          "sha256": { "type": "string" },
                          "sha1": { "type": "string" },
                          "md5": { "type": "string" },
                          "content_type": { "type": "string" },
                          "state": { "type": "string" },
                          "size": { "type": "integer" },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "package_url": { "type": "string" },
                    "author": { "$ref": "#/definitions/user" },
                    "source_url": { "type": "string" },
                    "installation_command": { "type": "string" }
                  },
                  "additionalProperties": false
                },
                { "type": "null" }
              ]
            },
            "registry": {
              "type": "object",
              "required": ["about_url", "name", "type", "url", "vendor"],
              "properties": {
                "about_url": { "type": "string", "format": "uri" },
                "name": { "type": "string" },
                "type": { "type": "string" },
                "url": { "type": "string", "format": "uri" },
                "vendor": { "type": "string" }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "package published event"
    },
    "package$updated": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "package", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["updated"] },
        "package": {
          "type": "object",
          "description": "Information about the package.",
          "required": [
            "id",
            "name",
            "namespace",
            "description",
            "ecosystem",
            "package_type",
            "html_url",
            "created_at",
            "updated_at",
            "owner",
            "package_version",
            "registry"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique identifier of the package."
            },
            "name": {
              "type": "string",
              "description": "The name of the package."
            },
            "namespace": { "type": "string" },
            "description": { "type": ["string", "null"] },
            "ecosystem": { "type": "string" },
            "package_type": {
              "type": "string",
              "enum": [
                "npm",
                "maven",
                "rubygems",
                "docker",
                "nuget",
                "CONTAINER"
              ]
            },
            "html_url": { "type": "string", "format": "uri" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "owner": { "$ref": "#/definitions/user" },
            "package_version": {
              "description": "A version of a software package",
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "id",
                    "version",
                    "summary",
                    "name",
                    "description",
                    "html_url",
                    "metadata",
                    "package_files",
                    "installation_command"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the package version."
                    },
                    "version": { "type": "string" },
                    "summary": { "type": "string" },
                    "name": {
                      "type": "string",
                      "description": "The name of the package version."
                    },
                    "description": { "type": "string" },
                    "body": {
                      "oneOf": [
                        { "type": "string" },
                        {
                          "type": "object",
                          "required": [
                            "repository",
                            "info",
                            "attributes",
                            "_formatted"
                          ],
                          "properties": {
                            "repository": {
                              "type": "object",
                              "required": ["repository"],
                              "properties": {
                                "repository": {
                                  "$ref": "#/definitions/repository"
                                }
                              },
                              "additionalProperties": false
                            },
                            "info": {
                              "type": "object",
                              "required": [
                                "type",
                                "oid",
                                "mode",
                                "name",
                                "path",
                                "size",
                                "collection"
                              ],
                              "properties": {
                                "type": { "type": "string" },
                                "oid": { "type": "string" },
                                "mode": { "type": "integer" },
                                "name": { "type": "string" },
                                "path": { "type": "string" },
                                "size": { "type": ["integer", "null"] },
                                "collection": { "type": "boolean" }
                              },
                              "additionalProperties": false
                            },
                            "attributes": {
                              "type": "object",
                              "additionalProperties": false
                            },
                            "_formatted": { "type": "boolean" }
                          },
                          "additionalProperties": false
                        }
                      ]
                    },
                    "body_html": { "type": "string" },
                    "release": {
                      "type": "object",
                      "required": [
                        "url",
                        "html_url",
                        "id",
                        "tag_name",
                        "target_commitish",
                        "name",
                        "draft",
                        "author",
                        "prerelease",
                        "created_at",
                        "published_at"
                      ],
                      "properties": {
                        "url": { "type": "string", "format": "uri" },
                        "html_url": { "type": "string", "format": "uri" },
                        "id": { "type": "integer" },
                        "tag_name": { "type": "string" },
                        "target_commitish": { "type": "string" },
                        "name": { "type": "string" },
                        "draft": { "type": "boolean" },
                        "author": { "$ref": "#/definitions/user" },
                        "prerelease": { "type": "boolean" },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "published_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "additionalProperties": false
                    },
                    "manifest": { "type": "string" },
                    "html_url": { "type": "string", "format": "uri" },
                    "tag_name": { "type": "string" },
                    "target_commitish": { "type": "string" },
                    "target_oid": { "type": "string" },
                    "draft": { "type": "boolean" },
                    "prerelease": { "type": "boolean" },
                    "created_at": { "type": "string", "format": "date-time" },
                    "updated_at": { "type": "string", "format": "date-time" },
                    "metadata": {
                      "type": "array",
                      "items": {},
                      "description": "Package Version Metadata"
                    },
                    "container_metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "labels": { "type": ["object", "null"] },
                            "manifest": { "type": ["object", "null"] },
                            "tag": {
                              "type": "object",
                              "properties": {
                                "digest": { "type": "string" },
                                "name": { "type": "string" }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        { "type": "null" }
                      ]
                    },
                    "docker_metadata": { "type": "array", "items": {} },
                    "npm_metadata": {
                      "oneOf": [
                        { "$ref": "#/definitions/package-npm-metadata" },
                        { "type": "null" }
                      ]
                    },
                    "nuget_metadata": {
                      "oneOf": [
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/package-nuget-metadata"
                          }
                        },
                        { "type": "null" }
                      ]
                    },
                    "rubygems_metadata": { "type": "array", "items": {} },
                    "package_files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "download_url",
                          "id",
                          "name",
                          "sha256",
                          "sha1",
                          "md5",
                          "content_type",
                          "state",
                          "size",
                          "created_at",
                          "updated_at"
                        ],
                        "properties": {
                          "download_url": { "type": "string", "format": "uri" },
                          "id": { "type": "integer" },
                          "name": { "type": "string" },
                          "sha256": { "type": "string" },
                          "sha1": { "type": "string" },
                          "md5": { "type": "string" },
                          "content_type": { "type": "string" },
                          "state": { "type": "string" },
                          "size": { "type": "integer" },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "package_url": { "type": "string" },
                    "author": { "$ref": "#/definitions/user" },
                    "source_url": { "type": "string" },
                    "installation_command": { "type": "string" }
                  },
                  "additionalProperties": false
                },
                { "type": "null" }
              ]
            },
            "registry": {
              "type": "object",
              "required": ["about_url", "name", "type", "url", "vendor"],
              "properties": {
                "about_url": { "type": "string", "format": "uri" },
                "name": { "type": "string" },
                "type": { "type": "string" },
                "url": { "type": "string", "format": "uri" },
                "vendor": { "type": "string" }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "package updated event"
    },
    "package_event": {
      "oneOf": [
        { "$ref": "#/definitions/package$published" },
        { "$ref": "#/definitions/package$updated" }
      ]
    },
    "page_build$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "Page Build",
      "type": "object",
      "required": ["id", "build", "repository", "sender"],
      "properties": {
        "id": { "type": "integer" },
        "build": {
          "type": "object",
          "description": "The [List GitHub Pages builds](https://docs.github.com/en/rest/reference/repos#list-github-pages-builds) itself.",
          "required": [
            "url",
            "status",
            "error",
            "pusher",
            "commit",
            "duration",
            "created_at",
            "updated_at"
          ],
          "properties": {
            "url": { "type": "string", "format": "uri" },
            "status": { "type": "string" },
            "error": {
              "type": "object",
              "required": ["message"],
              "properties": { "message": { "type": ["string", "null"] } },
              "additionalProperties": false
            },
            "pusher": { "$ref": "#/definitions/user" },
            "commit": { "type": "string" },
            "duration": { "type": "integer" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "page_build event"
    },
    "ping$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["zen", "hook_id", "hook"],
      "properties": {
        "zen": { "type": "string" },
        "hook_id": {
          "type": "integer",
          "description": "The ID of the webhook that triggered the ping."
        },
        "hook": {
          "type": "object",
          "description": "The [webhook configuration](https://docs.github.com/en/rest/reference/repos#get-a-repository-webhook).",
          "required": [
            "type",
            "id",
            "name",
            "active",
            "events",
            "config",
            "updated_at",
            "created_at",
            "url",
            "ping_url",
            "deliveries_url"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["Repository", "Organization", "App"]
            },
            "id": { "type": "integer" },
            "name": { "type": "string" },
            "active": { "type": "boolean" },
            "app_id": {
              "type": "integer",
              "description": "When you register a new GitHub App, GitHub sends a ping event to the **webhook URL** you specified during registration. The event contains the `app_id`, which is required for [authenticating](https://docs.github.com/en/apps/building-integrations/setting-up-and-registering-github-apps/about-authentication-options-for-github-apps) an app."
            },
            "events": { "$ref": "#/definitions/webhook-events" },
            "config": {
              "type": "object",
              "required": ["content_type", "url", "insecure_ssl"],
              "description": "Configuration object of the webhook",
              "properties": {
                "content_type": {
                  "type": "string",
                  "enum": ["json", "form"],
                  "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`."
                },
                "secret": {
                  "type": "string",
                  "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers)."
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URL to which the payloads will be delivered."
                },
                "insecure_ssl": {
                  "type": "string",
                  "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`.",
                  "enum": ["0", "1"]
                }
              },
              "additionalProperties": false
            },
            "updated_at": { "type": "string", "format": "date-time" },
            "created_at": { "type": "string", "format": "date-time" },
            "url": { "type": "string", "format": "uri" },
            "test_url": { "type": "string", "format": "uri" },
            "ping_url": { "type": "string", "format": "uri" },
            "deliveries_url": { "type": "string", "format": "uri" },
            "last_response": {
              "type": "object",
              "required": ["code", "status", "message"],
              "properties": {
                "code": { "type": "null" },
                "status": { "type": "string" },
                "message": { "type": "null" }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "ping event"
    },
    "project$closed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "project", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["closed"] },
        "project": { "$ref": "#/definitions/project" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "project closed event"
    },
    "project$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "project", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "project": { "$ref": "#/definitions/project" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "project created event"
    },
    "project$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "project", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "project": { "$ref": "#/definitions/project" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "project deleted event"
    },
    "project$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "project", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "changes": {
          "type": "object",
          "description": "The changes to the project if the action was `edited`.",
          "properties": {
            "name": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The changes to the project if the action was `edited`."
                }
              },
              "additionalProperties": false
            },
            "body": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body if the action was `edited`."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "project": { "$ref": "#/definitions/project" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "project edited event"
    },
    "project$reopened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "project", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["reopened"] },
        "project": { "$ref": "#/definitions/project" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "project reopened event"
    },
    "project_event": {
      "oneOf": [
        { "$ref": "#/definitions/project$closed" },
        { "$ref": "#/definitions/project$created" },
        { "$ref": "#/definitions/project$deleted" },
        { "$ref": "#/definitions/project$edited" },
        { "$ref": "#/definitions/project$reopened" }
      ]
    },
    "project_card$converted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "project_card", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["converted"] },
        "changes": {
          "type": "object",
          "required": ["note"],
          "properties": {
            "note": {
              "type": "object",
              "required": ["from"],
              "properties": { "from": { "type": "string" } },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "project_card": { "$ref": "#/definitions/project-card" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "project_card converted event"
    },
    "project_card$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "project_card", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "project_card": { "$ref": "#/definitions/project-card" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "project_card created event"
    },
    "project_card$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "project_card", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "project_card": { "$ref": "#/definitions/project-card" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "project_card deleted event"
    },
    "project_card$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "project_card", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "changes": {
          "type": "object",
          "required": ["note"],
          "properties": {
            "note": {
              "type": "object",
              "required": ["from"],
              "properties": { "from": { "type": "string" } },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "project_card": { "$ref": "#/definitions/project-card" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "project_card edited event"
    },
    "project_card$moved": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "project_card", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["moved"] },
        "changes": {
          "type": "object",
          "required": ["column_id"],
          "properties": {
            "column_id": {
              "type": "object",
              "required": ["from"],
              "properties": { "from": { "type": "integer" } },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "project_card": {
          "allOf": [
            { "$ref": "#/definitions/project-card" },
            {
              "type": "object",
              "required": ["after_id"],
              "properties": { "after_id": { "type": ["number", "null"] } },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "project_card moved event"
    },
    "project_card_event": {
      "oneOf": [
        { "$ref": "#/definitions/project_card$converted" },
        { "$ref": "#/definitions/project_card$created" },
        { "$ref": "#/definitions/project_card$deleted" },
        { "$ref": "#/definitions/project_card$edited" },
        { "$ref": "#/definitions/project_card$moved" }
      ]
    },
    "project_column$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "project_column", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "project_column": { "$ref": "#/definitions/project-column" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "project_column created event"
    },
    "project_column$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "project_column", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "project_column": { "$ref": "#/definitions/project-column" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "project_column deleted event"
    },
    "project_column$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "project_column", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "changes": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "required": ["from"],
              "properties": { "from": { "type": "string" } },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "project_column": { "$ref": "#/definitions/project-column" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "project_column edited event"
    },
    "project_column$moved": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "project_column", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["moved"] },
        "project_column": { "$ref": "#/definitions/project-column" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "project_column moved event"
    },
    "project_column_event": {
      "oneOf": [
        { "$ref": "#/definitions/project_column$created" },
        { "$ref": "#/definitions/project_column$deleted" },
        { "$ref": "#/definitions/project_column$edited" },
        { "$ref": "#/definitions/project_column$moved" }
      ]
    },
    "projects_v2_item$archived": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["changes", "action", "projects_v2_item", "sender"],
      "properties": {
        "changes": {
          "type": "object",
          "required": ["archived_at"],
          "properties": {
            "archived_at": {
              "type": "object",
              "required": ["from", "to"],
              "properties": {
                "from": { "type": "null" },
                "to": { "type": "string", "format": "date-time" }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "action": { "type": "string", "enum": ["archived"] },
        "projects_v2_item": {
          "allOf": [
            { "$ref": "#/definitions/projects_v2_item" },
            {
              "type": "object",
              "required": ["archived_at"],
              "properties": {
                "archived_at": { "type": "string", "format": "date-time" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "projects_v2_item archived event"
    },
    "projects_v2_item$converted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["changes", "action", "projects_v2_item", "sender"],
      "properties": {
        "changes": {
          "type": "object",
          "required": ["content_type"],
          "properties": {
            "content_type": {
              "type": "object",
              "required": ["from", "to"],
              "properties": {
                "from": { "type": "string", "enum": ["DraftIssue"] },
                "to": { "type": "string", "enum": ["Issue"] }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "action": { "type": "string", "enum": ["converted"] },
        "projects_v2_item": {
          "allOf": [
            { "$ref": "#/definitions/projects_v2_item" },
            {
              "type": "object",
              "required": ["content_type"],
              "properties": {
                "content_type": { "type": "string", "enum": ["Issue"] }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "projects_v2_item converted event"
    },
    "projects_v2_item$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "projects_v2_item", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "projects_v2_item": {
          "allOf": [
            { "$ref": "#/definitions/projects_v2_item" },
            {
              "type": "object",
              "required": ["archived_at"],
              "properties": { "archived_at": { "type": "null" } },
              "tsAdditionalProperties": false
            }
          ]
        },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "projects_v2_item created event"
    },
    "projects_v2_item$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "projects_v2_item", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "projects_v2_item": { "$ref": "#/definitions/projects_v2_item" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "projects_v2_item deleted event"
    },
    "projects_v2_item$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["changes", "action", "projects_v2_item", "sender"],
      "properties": {
        "changes": {
          "type": "object",
          "required": ["field_value"],
          "properties": {
            "field_value": {
              "type": "object",
              "required": ["field_type", "field_node_id"],
              "properties": {
                "field_type": {
                  "type": "string",
                  "enum": [
                    "single_select",
                    "date",
                    "number",
                    "text",
                    "iteration"
                  ]
                },
                "field_node_id": { "type": "string" }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "action": { "type": "string", "enum": ["edited"] },
        "projects_v2_item": { "$ref": "#/definitions/projects_v2_item" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "projects_v2_item edited event"
    },
    "projects_v2_item$reordered": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["changes", "action", "projects_v2_item", "sender"],
      "properties": {
        "changes": {
          "type": "object",
          "required": ["previous_projects_v2_item_node_id"],
          "properties": {
            "previous_projects_v2_item_node_id": {
              "type": "object",
              "required": ["from", "to"],
              "properties": {
                "from": { "type": "string" },
                "to": { "type": ["string", "null"] }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "action": { "type": "string", "enum": ["reordered"] },
        "projects_v2_item": { "$ref": "#/definitions/projects_v2_item" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "projects_v2_item reordered event"
    },
    "projects_v2_item$restored": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["changes", "action", "projects_v2_item", "sender"],
      "properties": {
        "changes": {
          "type": "object",
          "required": ["archived_at"],
          "properties": {
            "archived_at": {
              "type": "object",
              "required": ["from", "to"],
              "properties": {
                "from": { "type": "string", "format": "date-time" },
                "to": { "type": "null" }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "action": { "type": "string", "enum": ["restored"] },
        "projects_v2_item": {
          "allOf": [
            { "$ref": "#/definitions/projects_v2_item" },
            {
              "type": "object",
              "required": ["archived_at"],
              "properties": { "archived_at": { "type": "null" } },
              "tsAdditionalProperties": false
            }
          ]
        },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "projects_v2_item restored event"
    },
    "projects_v2_item_event": {
      "oneOf": [
        { "$ref": "#/definitions/projects_v2_item$archived" },
        { "$ref": "#/definitions/projects_v2_item$converted" },
        { "$ref": "#/definitions/projects_v2_item$created" },
        { "$ref": "#/definitions/projects_v2_item$deleted" },
        { "$ref": "#/definitions/projects_v2_item$edited" },
        { "$ref": "#/definitions/projects_v2_item$reordered" },
        { "$ref": "#/definitions/projects_v2_item$restored" }
      ]
    },
    "public$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["repository", "sender"],
      "description": "When a private repository is made public.",
      "properties": {
        "repository": {
          "allOf": [
            { "$ref": "#/definitions/repository" },
            {
              "type": "object",
              "required": ["private"],
              "properties": {
                "private": { "type": "boolean", "enum": [false] }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "public event"
    },
    "pull_request$assigned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "number",
        "pull_request",
        "assignee",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["assigned"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": { "$ref": "#/definitions/pull-request" },
        "assignee": { "$ref": "#/definitions/user" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request assigned event"
    },
    "pull_request$auto_merge_disabled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "number",
        "pull_request",
        "reason",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["auto_merge_disabled"] },
        "number": { "type": "integer" },
        "pull_request": { "$ref": "#/definitions/pull-request" },
        "reason": { "type": "string" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request auto_merge_disabled event"
    },
    "pull_request$auto_merge_enabled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "number",
        "pull_request",
        "reason",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["auto_merge_enabled"] },
        "number": { "type": "integer" },
        "pull_request": { "$ref": "#/definitions/pull-request" },
        "reason": { "type": "string" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request auto_merge_enabled event"
    },
    "pull_request$closed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "number", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["closed"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": {
          "allOf": [
            { "$ref": "#/definitions/pull-request" },
            {
              "type": "object",
              "required": ["state", "closed_at", "merged"],
              "properties": {
                "state": {
                  "type": "string",
                  "enum": ["closed"],
                  "description": "State of this Pull Request. Either `open` or `closed`."
                },
                "closed_at": { "type": "string", "format": "date-time" },
                "merged": { "type": "boolean" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request closed event"
    },
    "pull_request$converted_to_draft": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "number", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["converted_to_draft"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": {
          "allOf": [
            { "$ref": "#/definitions/pull-request" },
            {
              "type": "object",
              "required": [
                "closed_at",
                "merged_at",
                "draft",
                "merged",
                "merged_by"
              ],
              "properties": {
                "closed_at": { "type": "null" },
                "merged_at": { "type": "null" },
                "draft": {
                  "type": "boolean",
                  "enum": [true],
                  "description": "Indicates whether or not the pull request is a draft."
                },
                "merged": { "type": "boolean", "enum": [false] },
                "merged_by": { "type": "null" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request converted_to_draft event"
    },
    "pull_request$demilestoned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "number",
        "pull_request",
        "milestone",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["demilestoned"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": {
          "allOf": [
            { "$ref": "#/definitions/pull-request" },
            {
              "type": "object",
              "required": ["milestone"],
              "properties": {
                "milestone": { "$ref": "#/definitions/milestone" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "milestone": { "$ref": "#/definitions/milestone" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "pull_request demilestoned event"
    },
    "pull_request$dequeued": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "number",
        "reason",
        "pull_request",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["dequeued"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "reason": {
          "type": "string",
          "description": "The reason the pull request was removed from a merge queue."
        },
        "pull_request": { "$ref": "#/definitions/pull-request" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request dequeued event"
    },
    "pull_request$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "changes",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "changes": {
          "type": "object",
          "description": "The changes to the comment if the action was `edited`.",
          "properties": {
            "body": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body if the action was `edited`."
                }
              },
              "additionalProperties": false
            },
            "title": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the title if the action was `edited`."
                }
              },
              "additionalProperties": false
            },
            "base": {
              "type": "object",
              "required": ["ref", "sha"],
              "properties": {
                "ref": {
                  "type": "object",
                  "required": ["from"],
                  "properties": { "from": { "type": "string" } },
                  "additionalProperties": false
                },
                "sha": {
                  "type": "object",
                  "required": ["from"],
                  "properties": { "from": { "type": "string" } },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "pull_request": { "$ref": "#/definitions/pull-request" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request edited event"
    },
    "pull_request$enqueued": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "number", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["enqueued"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": { "$ref": "#/definitions/pull-request" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request enqueued event"
    },
    "pull_request$labeled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "number",
        "pull_request",
        "label",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["labeled"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": { "$ref": "#/definitions/pull-request" },
        "label": { "$ref": "#/definitions/label" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request labeled event"
    },
    "pull_request$locked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "number", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["locked"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": { "$ref": "#/definitions/pull-request" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request locked event"
    },
    "pull_request$milestoned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "number",
        "pull_request",
        "milestone",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["milestoned"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": {
          "allOf": [
            { "$ref": "#/definitions/pull-request" },
            {
              "type": "object",
              "required": ["milestone"],
              "properties": {
                "milestone": { "$ref": "#/definitions/milestone" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "milestone": { "$ref": "#/definitions/milestone" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "pull_request milestoned event"
    },
    "pull_request$opened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "number", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["opened"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": {
          "allOf": [
            { "$ref": "#/definitions/pull-request" },
            {
              "type": "object",
              "required": [
                "state",
                "closed_at",
                "merged_at",
                "active_lock_reason",
                "merged_by"
              ],
              "properties": {
                "state": { "type": "string", "enum": ["open"] },
                "closed_at": { "type": "null" },
                "merged_at": { "type": "null" },
                "active_lock_reason": { "type": "null" },
                "merged_by": { "type": "null" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request opened event"
    },
    "pull_request$ready_for_review": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "number", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["ready_for_review"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": {
          "allOf": [
            { "$ref": "#/definitions/pull-request" },
            {
              "type": "object",
              "required": [
                "state",
                "closed_at",
                "merged_at",
                "draft",
                "merged",
                "merged_by"
              ],
              "properties": {
                "state": { "type": "string", "enum": ["open"] },
                "closed_at": { "type": "null" },
                "merged_at": { "type": "null" },
                "draft": {
                  "type": "boolean",
                  "enum": [false],
                  "description": "Indicates whether or not the pull request is a draft."
                },
                "merged": { "type": "boolean" },
                "merged_by": { "type": "null" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request ready_for_review event"
    },
    "pull_request$reopened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "number", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["reopened"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": {
          "allOf": [
            { "$ref": "#/definitions/pull-request" },
            {
              "type": "object",
              "required": [
                "state",
                "closed_at",
                "merged_at",
                "merged",
                "merged_by"
              ],
              "properties": {
                "state": { "type": "string", "enum": ["open"] },
                "closed_at": { "type": "null" },
                "merged_at": { "type": "null" },
                "merged": { "type": "boolean" },
                "merged_by": { "type": "null" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request reopened event"
    },
    "pull_request$review_request_removed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "action",
            "number",
            "pull_request",
            "requested_reviewer",
            "repository",
            "sender"
          ],
          "properties": {
            "action": { "type": "string", "enum": ["review_request_removed"] },
            "number": {
              "type": "integer",
              "description": "The pull request number."
            },
            "pull_request": { "$ref": "#/definitions/pull-request" },
            "requested_reviewer": { "$ref": "#/definitions/user" },
            "repository": { "$ref": "#/definitions/repository" },
            "installation": { "$ref": "#/definitions/installation-lite" },
            "organization": { "$ref": "#/definitions/organization" },
            "sender": { "$ref": "#/definitions/user" }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "number",
            "pull_request",
            "requested_team",
            "repository",
            "sender"
          ],
          "properties": {
            "action": { "type": "string", "enum": ["review_request_removed"] },
            "number": {
              "type": "integer",
              "description": "The pull request number."
            },
            "pull_request": { "$ref": "#/definitions/pull-request" },
            "requested_team": { "$ref": "#/definitions/team" },
            "repository": { "$ref": "#/definitions/repository" },
            "installation": { "$ref": "#/definitions/installation-lite" },
            "organization": { "$ref": "#/definitions/organization" },
            "sender": { "$ref": "#/definitions/user" }
          },
          "additionalProperties": false
        }
      ],
      "title": "pull_request review_request_removed event"
    },
    "pull_request$review_requested": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "action",
            "number",
            "pull_request",
            "requested_reviewer",
            "repository",
            "sender"
          ],
          "properties": {
            "action": { "type": "string", "enum": ["review_requested"] },
            "number": {
              "type": "integer",
              "description": "The pull request number."
            },
            "pull_request": { "$ref": "#/definitions/pull-request" },
            "requested_reviewer": { "$ref": "#/definitions/user" },
            "repository": { "$ref": "#/definitions/repository" },
            "installation": { "$ref": "#/definitions/installation-lite" },
            "organization": { "$ref": "#/definitions/organization" },
            "sender": { "$ref": "#/definitions/user" }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "action",
            "number",
            "pull_request",
            "requested_team",
            "repository",
            "sender"
          ],
          "properties": {
            "action": { "type": "string", "enum": ["review_requested"] },
            "number": {
              "type": "integer",
              "description": "The pull request number."
            },
            "pull_request": { "$ref": "#/definitions/pull-request" },
            "requested_team": { "$ref": "#/definitions/team" },
            "repository": { "$ref": "#/definitions/repository" },
            "installation": { "$ref": "#/definitions/installation-lite" },
            "organization": { "$ref": "#/definitions/organization" },
            "sender": { "$ref": "#/definitions/user" }
          },
          "additionalProperties": false
        }
      ],
      "title": "pull_request review_requested event"
    },
    "pull_request$synchronize": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "number",
        "before",
        "after",
        "pull_request",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["synchronize"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "before": { "type": "string" },
        "after": { "type": "string" },
        "pull_request": { "$ref": "#/definitions/pull-request" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request synchronize event"
    },
    "pull_request$unassigned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "number",
        "pull_request",
        "assignee",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["unassigned"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": { "$ref": "#/definitions/pull-request" },
        "assignee": { "$ref": "#/definitions/user" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request unassigned event"
    },
    "pull_request$unlabeled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "number",
        "pull_request",
        "label",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["unlabeled"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": { "$ref": "#/definitions/pull-request" },
        "label": { "$ref": "#/definitions/label" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request unlabeled event"
    },
    "pull_request$unlocked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "number", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["unlocked"] },
        "number": {
          "type": "integer",
          "description": "The pull request number."
        },
        "pull_request": { "$ref": "#/definitions/pull-request" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request unlocked event"
    },
    "pull_request_event": {
      "oneOf": [
        { "$ref": "#/definitions/pull_request$assigned" },
        { "$ref": "#/definitions/pull_request$auto_merge_disabled" },
        { "$ref": "#/definitions/pull_request$auto_merge_enabled" },
        { "$ref": "#/definitions/pull_request$closed" },
        { "$ref": "#/definitions/pull_request$converted_to_draft" },
        { "$ref": "#/definitions/pull_request$demilestoned" },
        { "$ref": "#/definitions/pull_request$dequeued" },
        { "$ref": "#/definitions/pull_request$edited" },
        { "$ref": "#/definitions/pull_request$enqueued" },
        { "$ref": "#/definitions/pull_request$labeled" },
        { "$ref": "#/definitions/pull_request$locked" },
        { "$ref": "#/definitions/pull_request$milestoned" },
        { "$ref": "#/definitions/pull_request$opened" },
        { "$ref": "#/definitions/pull_request$ready_for_review" },
        { "$ref": "#/definitions/pull_request$reopened" },
        { "$ref": "#/definitions/pull_request$review_request_removed" },
        { "$ref": "#/definitions/pull_request$review_requested" },
        { "$ref": "#/definitions/pull_request$synchronize" },
        { "$ref": "#/definitions/pull_request$unassigned" },
        { "$ref": "#/definitions/pull_request$unlabeled" },
        { "$ref": "#/definitions/pull_request$unlocked" }
      ]
    },
    "pull_request_review$dismissed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "review", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["dismissed"] },
        "review": {
          "allOf": [
            { "$ref": "#/definitions/pull-request-review" },
            {
              "type": "object",
              "required": ["state"],
              "properties": {
                "state": { "type": "string", "enum": ["dismissed"] }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "pull_request": { "$ref": "#/definitions/simple-pull-request" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request_review dismissed event"
    },
    "pull_request_review$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "changes",
        "review",
        "pull_request",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "changes": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body if the action was `edited`."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "review": { "$ref": "#/definitions/pull-request-review" },
        "pull_request": { "$ref": "#/definitions/simple-pull-request" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request_review edited event"
    },
    "pull_request_review$submitted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "review", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["submitted"] },
        "review": { "$ref": "#/definitions/pull-request-review" },
        "pull_request": { "$ref": "#/definitions/simple-pull-request" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request_review submitted event"
    },
    "pull_request_review_event": {
      "oneOf": [
        { "$ref": "#/definitions/pull_request_review$dismissed" },
        { "$ref": "#/definitions/pull_request_review$edited" },
        { "$ref": "#/definitions/pull_request_review$submitted" }
      ]
    },
    "pull_request_review_comment$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "comment", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "comment": { "$ref": "#/definitions/pull-request-review-comment" },
        "pull_request": {
          "type": "object",
          "required": [
            "url",
            "id",
            "node_id",
            "html_url",
            "diff_url",
            "patch_url",
            "issue_url",
            "number",
            "state",
            "locked",
            "title",
            "user",
            "body",
            "created_at",
            "updated_at",
            "closed_at",
            "merged_at",
            "merge_commit_sha",
            "assignee",
            "assignees",
            "requested_reviewers",
            "requested_teams",
            "labels",
            "milestone",
            "commits_url",
            "review_comments_url",
            "review_comment_url",
            "comments_url",
            "statuses_url",
            "head",
            "base",
            "_links",
            "author_association",
            "active_lock_reason"
          ],
          "properties": {
            "url": { "type": "string", "format": "uri" },
            "id": { "type": "integer" },
            "node_id": { "type": "string" },
            "html_url": { "type": "string", "format": "uri" },
            "diff_url": { "type": "string", "format": "uri" },
            "patch_url": { "type": "string", "format": "uri" },
            "issue_url": { "type": "string", "format": "uri" },
            "number": { "type": "integer" },
            "state": { "type": "string", "enum": ["open", "closed"] },
            "locked": { "type": "boolean" },
            "title": { "type": "string" },
            "user": { "$ref": "#/definitions/user" },
            "body": { "type": ["string", "null"] },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "closed_at": {
              "oneOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ]
            },
            "merged_at": {
              "oneOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ]
            },
            "merge_commit_sha": { "type": ["string", "null"] },
            "assignee": {
              "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
            },
            "assignees": {
              "type": "array",
              "items": { "$ref": "#/definitions/user" }
            },
            "requested_reviewers": {
              "type": "array",
              "items": {
                "oneOf": [
                  { "$ref": "#/definitions/user" },
                  { "$ref": "#/definitions/team" }
                ]
              }
            },
            "requested_teams": {
              "type": "array",
              "items": { "$ref": "#/definitions/team" }
            },
            "labels": {
              "type": "array",
              "items": { "$ref": "#/definitions/label" }
            },
            "milestone": {
              "oneOf": [
                { "$ref": "#/definitions/milestone" },
                { "type": "null" }
              ]
            },
            "draft": { "type": "boolean" },
            "commits_url": { "type": "string", "format": "uri" },
            "review_comments_url": { "type": "string", "format": "uri" },
            "review_comment_url": {
              "type": "string",
              "format": "uri-template"
            },
            "comments_url": { "type": "string", "format": "uri" },
            "statuses_url": { "type": "string", "format": "uri" },
            "head": {
              "type": "object",
              "required": ["label", "ref", "sha", "user", "repo"],
              "properties": {
                "label": { "type": "string" },
                "ref": { "type": "string" },
                "sha": { "type": "string" },
                "user": { "$ref": "#/definitions/user" },
                "repo": { "$ref": "#/definitions/repository" }
              },
              "additionalProperties": false
            },
            "base": {
              "type": "object",
              "required": ["label", "ref", "sha", "user", "repo"],
              "properties": {
                "label": { "type": "string" },
                "ref": { "type": "string" },
                "sha": { "type": "string" },
                "user": { "$ref": "#/definitions/user" },
                "repo": { "$ref": "#/definitions/repository" }
              },
              "additionalProperties": false
            },
            "_links": {
              "type": "object",
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "properties": {
                "self": { "$ref": "#/definitions/link" },
                "html": { "$ref": "#/definitions/link" },
                "issue": { "$ref": "#/definitions/link" },
                "comments": { "$ref": "#/definitions/link" },
                "review_comments": { "$ref": "#/definitions/link" },
                "review_comment": { "$ref": "#/definitions/link" },
                "commits": { "$ref": "#/definitions/link" },
                "statuses": { "$ref": "#/definitions/link" }
              },
              "additionalProperties": false
            },
            "auto_merge": {
              "oneOf": [
                { "$ref": "#/definitions/auto-merge" },
                { "type": "null" }
              ]
            },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "active_lock_reason": {
              "type": ["string", "null"],
              "enum": ["resolved", "off-topic", "too heated", "spam", null]
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request_review_comment created event"
    },
    "pull_request_review_comment$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "comment", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "comment": { "$ref": "#/definitions/pull-request-review-comment" },
        "pull_request": {
          "type": "object",
          "required": [
            "url",
            "id",
            "node_id",
            "html_url",
            "diff_url",
            "patch_url",
            "issue_url",
            "number",
            "state",
            "locked",
            "title",
            "user",
            "body",
            "created_at",
            "updated_at",
            "closed_at",
            "merged_at",
            "merge_commit_sha",
            "assignee",
            "assignees",
            "requested_reviewers",
            "requested_teams",
            "labels",
            "milestone",
            "commits_url",
            "review_comments_url",
            "review_comment_url",
            "comments_url",
            "statuses_url",
            "head",
            "base",
            "_links",
            "author_association",
            "active_lock_reason"
          ],
          "properties": {
            "url": { "type": "string", "format": "uri" },
            "id": { "type": "integer" },
            "node_id": { "type": "string" },
            "html_url": { "type": "string", "format": "uri" },
            "diff_url": { "type": "string", "format": "uri" },
            "patch_url": { "type": "string", "format": "uri" },
            "issue_url": { "type": "string", "format": "uri" },
            "number": { "type": "integer" },
            "state": { "type": "string", "enum": ["open", "closed"] },
            "locked": { "type": "boolean" },
            "title": { "type": "string" },
            "user": { "$ref": "#/definitions/user" },
            "body": { "type": ["string", "null"] },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "closed_at": {
              "oneOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ]
            },
            "merged_at": {
              "oneOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ]
            },
            "merge_commit_sha": { "type": ["string", "null"] },
            "assignee": {
              "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
            },
            "assignees": {
              "type": "array",
              "items": { "$ref": "#/definitions/user" }
            },
            "requested_reviewers": {
              "type": "array",
              "items": {
                "oneOf": [
                  { "$ref": "#/definitions/user" },
                  { "$ref": "#/definitions/team" }
                ]
              }
            },
            "requested_teams": {
              "type": "array",
              "items": { "$ref": "#/definitions/team" }
            },
            "labels": {
              "type": "array",
              "items": { "$ref": "#/definitions/label" }
            },
            "milestone": {
              "oneOf": [
                { "$ref": "#/definitions/milestone" },
                { "type": "null" }
              ]
            },
            "draft": { "type": "boolean" },
            "commits_url": { "type": "string", "format": "uri" },
            "review_comments_url": { "type": "string", "format": "uri" },
            "review_comment_url": {
              "type": "string",
              "format": "uri-template"
            },
            "comments_url": { "type": "string", "format": "uri" },
            "statuses_url": { "type": "string", "format": "uri" },
            "head": {
              "type": "object",
              "required": ["label", "ref", "sha", "user", "repo"],
              "properties": {
                "label": { "type": "string" },
                "ref": { "type": "string" },
                "sha": { "type": "string" },
                "user": { "$ref": "#/definitions/user" },
                "repo": { "$ref": "#/definitions/repository" }
              },
              "additionalProperties": false
            },
            "base": {
              "type": "object",
              "required": ["label", "ref", "sha", "user", "repo"],
              "properties": {
                "label": { "type": "string" },
                "ref": { "type": "string" },
                "sha": { "type": "string" },
                "user": { "$ref": "#/definitions/user" },
                "repo": { "$ref": "#/definitions/repository" }
              },
              "additionalProperties": false
            },
            "_links": {
              "type": "object",
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "properties": {
                "self": { "$ref": "#/definitions/link" },
                "html": { "$ref": "#/definitions/link" },
                "issue": { "$ref": "#/definitions/link" },
                "comments": { "$ref": "#/definitions/link" },
                "review_comments": { "$ref": "#/definitions/link" },
                "review_comment": { "$ref": "#/definitions/link" },
                "commits": { "$ref": "#/definitions/link" },
                "statuses": { "$ref": "#/definitions/link" }
              },
              "additionalProperties": false
            },
            "auto_merge": {
              "oneOf": [
                { "$ref": "#/definitions/auto-merge" },
                { "type": "null" }
              ]
            },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "active_lock_reason": {
              "type": ["string", "null"],
              "enum": ["resolved", "off-topic", "too heated", "spam", null]
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request_review_comment deleted event"
    },
    "pull_request_review_comment$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "changes",
        "comment",
        "pull_request",
        "repository",
        "sender"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "changes": {
          "type": "object",
          "description": "The changes to the comment.",
          "properties": {
            "body": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "comment": { "$ref": "#/definitions/pull-request-review-comment" },
        "pull_request": {
          "type": "object",
          "required": [
            "url",
            "id",
            "node_id",
            "html_url",
            "diff_url",
            "patch_url",
            "issue_url",
            "number",
            "state",
            "locked",
            "title",
            "user",
            "body",
            "created_at",
            "updated_at",
            "closed_at",
            "merged_at",
            "merge_commit_sha",
            "assignee",
            "assignees",
            "requested_reviewers",
            "requested_teams",
            "labels",
            "milestone",
            "commits_url",
            "review_comments_url",
            "review_comment_url",
            "comments_url",
            "statuses_url",
            "head",
            "base",
            "_links",
            "author_association",
            "active_lock_reason"
          ],
          "properties": {
            "url": { "type": "string", "format": "uri" },
            "id": { "type": "integer" },
            "node_id": { "type": "string" },
            "html_url": { "type": "string", "format": "uri" },
            "diff_url": { "type": "string", "format": "uri" },
            "patch_url": { "type": "string", "format": "uri" },
            "issue_url": { "type": "string", "format": "uri" },
            "number": { "type": "integer" },
            "state": { "type": "string", "enum": ["open", "closed"] },
            "locked": { "type": "boolean" },
            "title": { "type": "string" },
            "user": { "$ref": "#/definitions/user" },
            "body": { "type": ["string", "null"] },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "closed_at": {
              "oneOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ]
            },
            "merged_at": {
              "oneOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ]
            },
            "merge_commit_sha": { "type": ["string", "null"] },
            "assignee": {
              "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
            },
            "assignees": {
              "type": "array",
              "items": { "$ref": "#/definitions/user" }
            },
            "requested_reviewers": {
              "type": "array",
              "items": {
                "oneOf": [
                  { "$ref": "#/definitions/user" },
                  { "$ref": "#/definitions/team" }
                ]
              }
            },
            "requested_teams": {
              "type": "array",
              "items": { "$ref": "#/definitions/team" }
            },
            "labels": {
              "type": "array",
              "items": { "$ref": "#/definitions/label" }
            },
            "milestone": {
              "oneOf": [
                { "$ref": "#/definitions/milestone" },
                { "type": "null" }
              ]
            },
            "draft": { "type": "boolean" },
            "commits_url": { "type": "string", "format": "uri" },
            "review_comments_url": { "type": "string", "format": "uri" },
            "review_comment_url": {
              "type": "string",
              "format": "uri-template"
            },
            "comments_url": { "type": "string", "format": "uri" },
            "statuses_url": { "type": "string", "format": "uri" },
            "head": {
              "type": "object",
              "required": ["label", "ref", "sha", "user", "repo"],
              "properties": {
                "label": { "type": "string" },
                "ref": { "type": "string" },
                "sha": { "type": "string" },
                "user": { "$ref": "#/definitions/user" },
                "repo": { "$ref": "#/definitions/repository" }
              },
              "additionalProperties": false
            },
            "base": {
              "type": "object",
              "required": ["label", "ref", "sha", "user", "repo"],
              "properties": {
                "label": { "type": "string" },
                "ref": { "type": "string" },
                "sha": { "type": "string" },
                "user": { "$ref": "#/definitions/user" },
                "repo": { "$ref": "#/definitions/repository" }
              },
              "additionalProperties": false
            },
            "_links": {
              "type": "object",
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "properties": {
                "self": { "$ref": "#/definitions/link" },
                "html": { "$ref": "#/definitions/link" },
                "issue": { "$ref": "#/definitions/link" },
                "comments": { "$ref": "#/definitions/link" },
                "review_comments": { "$ref": "#/definitions/link" },
                "review_comment": { "$ref": "#/definitions/link" },
                "commits": { "$ref": "#/definitions/link" },
                "statuses": { "$ref": "#/definitions/link" }
              },
              "additionalProperties": false
            },
            "auto_merge": {
              "oneOf": [
                { "$ref": "#/definitions/auto-merge" },
                { "type": "null" }
              ]
            },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "active_lock_reason": {
              "type": ["string", "null"],
              "enum": ["resolved", "off-topic", "too heated", "spam", null]
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request_review_comment edited event"
    },
    "pull_request_review_comment_event": {
      "oneOf": [
        { "$ref": "#/definitions/pull_request_review_comment$created" },
        { "$ref": "#/definitions/pull_request_review_comment$deleted" },
        { "$ref": "#/definitions/pull_request_review_comment$edited" }
      ]
    },
    "pull_request_review_thread$resolved": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "thread", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["resolved"] },
        "thread": {
          "type": "object",
          "required": ["node_id", "comments"],
          "properties": {
            "node_id": { "type": "string" },
            "comments": {
              "type": "array",
              "items": { "$ref": "#/definitions/pull-request-review-comment" }
            }
          },
          "additionalProperties": false
        },
        "pull_request": { "$ref": "#/definitions/simple-pull-request" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request_review_thread resolved event"
    },
    "pull_request_review_thread$unresolved": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "thread", "pull_request", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["unresolved"] },
        "thread": {
          "type": "object",
          "required": ["node_id", "comments"],
          "properties": {
            "node_id": { "type": "string" },
            "comments": {
              "type": "array",
              "items": { "$ref": "#/definitions/pull-request-review-comment" }
            }
          },
          "additionalProperties": false
        },
        "pull_request": { "$ref": "#/definitions/simple-pull-request" },
        "repository": { "$ref": "#/definitions/repository" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "pull_request_review_thread unresolved event"
    },
    "pull_request_review_thread_event": {
      "oneOf": [
        { "$ref": "#/definitions/pull_request_review_thread$resolved" },
        { "$ref": "#/definitions/pull_request_review_thread$unresolved" }
      ]
    },
    "push$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "ref",
        "before",
        "after",
        "created",
        "deleted",
        "forced",
        "base_ref",
        "compare",
        "commits",
        "head_commit",
        "repository",
        "pusher",
        "sender"
      ],
      "properties": {
        "ref": {
          "type": "string",
          "description": "The full git ref that was pushed. Example: `refs/heads/main` or `refs/tags/v3.14.1`."
        },
        "before": {
          "type": "string",
          "description": "The SHA of the most recent commit on `ref` before the push."
        },
        "after": {
          "type": "string",
          "description": "The SHA of the most recent commit on `ref` after the push."
        },
        "created": {
          "type": "boolean",
          "description": "Whether this push created the `ref`."
        },
        "deleted": {
          "type": "boolean",
          "description": "Whether this push deleted the `ref`."
        },
        "forced": {
          "type": "boolean",
          "description": "Whether this push was a force push of the `ref`."
        },
        "base_ref": { "type": ["string", "null"] },
        "compare": {
          "type": "string",
          "description": "URL that shows the changes in this `ref` update, from the `before` commit to the `after` commit. For a newly created `ref` that is directly based on the default branch, this is the comparison between the head of the default branch and the `after` commit. Otherwise, this shows all commits until the `after` commit."
        },
        "commits": {
          "type": "array",
          "description": "An array of commit objects describing the pushed commits. (Pushed commits are all commits that are included in the `compare` between the `before` commit and the `after` commit.) The array includes a maximum of 20 commits. If necessary, you can use the [Commits API](https://docs.github.com/en/rest/reference/repos#commits) to fetch additional commits. This limit is applied to timeline events only and isn't applied to webhook deliveries.",
          "items": { "$ref": "#/definitions/commit" }
        },
        "head_commit": {
          "oneOf": [{ "$ref": "#/definitions/commit" }, { "type": "null" }],
          "description": "For pushes where `after` is or points to a commit object, an expanded representation of that commit. For pushes where `after` refers to an annotated tag object, an expanded representation of the commit pointed to by the annotated tag."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "pusher": { "$ref": "#/definitions/committer" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "push event"
    },
    "registry_package$published": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "registry_package", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["published"] },
        "registry_package": {
          "type": "object",
          "description": "Information about the package.",
          "required": [
            "id",
            "name",
            "namespace",
            "description",
            "ecosystem",
            "package_type",
            "html_url",
            "created_at",
            "updated_at",
            "owner",
            "package_version",
            "registry"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique identifier of the package."
            },
            "name": {
              "type": "string",
              "description": "The name of the package."
            },
            "namespace": { "type": "string" },
            "description": { "type": ["string", "null"] },
            "ecosystem": { "type": "string" },
            "package_type": {
              "type": "string",
              "enum": [
                "npm",
                "maven",
                "rubygems",
                "docker",
                "nuget",
                "CONTAINER"
              ],
              "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry."
            },
            "html_url": { "type": "string", "format": "uri" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": ["string", "null"], "format": "date-time" },
            "owner": { "$ref": "#/definitions/user" },
            "package_version": {
              "description": "A version of a software package",
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "id",
                    "version",
                    "summary",
                    "name",
                    "description",
                    "html_url",
                    "metadata",
                    "package_files",
                    "installation_command"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the package version."
                    },
                    "version": { "type": "string" },
                    "summary": { "type": "string" },
                    "name": {
                      "type": "string",
                      "description": "The name of the package version."
                    },
                    "description": { "type": "string" },
                    "body": {
                      "oneOf": [
                        { "type": "string" },
                        {
                          "type": "object",
                          "required": ["repository", "info"],
                          "properties": {
                            "repository": {
                              "type": "object",
                              "required": ["repository"],
                              "properties": {
                                "repository": {
                                  "$ref": "#/definitions/repository"
                                }
                              },
                              "additionalProperties": false
                            },
                            "info": {
                              "type": "object",
                              "required": [
                                "type",
                                "oid",
                                "mode",
                                "name",
                                "path",
                                "size",
                                "collection"
                              ],
                              "properties": {
                                "type": { "type": "string" },
                                "oid": { "type": "string" },
                                "mode": { "type": "integer" },
                                "name": { "type": "string" },
                                "path": { "type": "string" },
                                "size": { "type": ["integer", "null"] },
                                "collection": { "type": ["boolean", "null"] }
                              },
                              "additionalProperties": false
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {}
                            },
                            "_formatted": { "type": "boolean" }
                          },
                          "additionalProperties": false
                        }
                      ]
                    },
                    "body_html": { "type": "string" },
                    "release": {
                      "type": "object",
                      "required": [
                        "url",
                        "html_url",
                        "id",
                        "tag_name",
                        "target_commitish",
                        "name",
                        "draft",
                        "author",
                        "prerelease",
                        "created_at",
                        "published_at"
                      ],
                      "properties": {
                        "url": { "type": "string", "format": "uri" },
                        "html_url": { "type": "string", "format": "uri" },
                        "id": { "type": "integer" },
                        "tag_name": { "type": "string" },
                        "target_commitish": { "type": "string" },
                        "name": { "type": "string" },
                        "draft": { "type": "boolean" },
                        "author": { "$ref": "#/definitions/user" },
                        "prerelease": { "type": "boolean" },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "published_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "additionalProperties": false
                    },
                    "manifest": { "type": "string" },
                    "html_url": { "type": "string", "format": "uri" },
                    "tag_name": { "type": "string" },
                    "target_commitish": { "type": "string" },
                    "target_oid": { "type": "string" },
                    "draft": { "type": "boolean" },
                    "prerelease": { "type": "boolean" },
                    "created_at": { "type": "string", "format": "date-time" },
                    "updated_at": { "type": "string", "format": "date-time" },
                    "metadata": {
                      "type": "array",
                      "items": {},
                      "description": "Package Version Metadata"
                    },
                    "docker_metadata": { "type": "array", "items": {} },
                    "container_metadata": {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "description": { "type": "string" },
                                "source": { "type": "string", "format": "uri" },
                                "revision": { "type": "string" },
                                "image_url": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "licenses": { "type": "string" },
                                "all_labels": {
                                  "type": "object",
                                  "additionalProperties": { "type": "string" }
                                }
                              },
                              "additionalProperties": false
                            },
                            { "type": "null" }
                          ]
                        },
                        "manifest": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "digest": { "type": "string" },
                                "media_type": { "type": "string" },
                                "uri": { "type": "string" },
                                "size": { "type": "integer" },
                                "config": {
                                  "type": "object",
                                  "properties": {
                                    "digest": { "type": "string" },
                                    "media_type": { "type": "string" },
                                    "size": { "type": "integer" }
                                  },
                                  "additionalProperties": false
                                },
                                "layers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "digest": { "type": "string" },
                                      "media_type": { "type": "string" },
                                      "size": { "type": "integer" }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            { "type": "null" }
                          ]
                        },
                        "tag": {
                          "type": "object",
                          "properties": {
                            "digest": { "type": "string" },
                            "name": { "type": "string" }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "npm_metadata": {
                      "oneOf": [
                        { "$ref": "#/definitions/package-npm-metadata" },
                        { "type": "null" }
                      ]
                    },
                    "nuget_metadata": {
                      "oneOf": [
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/package-nuget-metadata"
                          }
                        },
                        { "type": "null" }
                      ]
                    },
                    "rubygems_metadata": { "type": "array", "items": {} },
                    "package_files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "download_url",
                          "id",
                          "name",
                          "sha256",
                          "sha1",
                          "md5",
                          "content_type",
                          "state",
                          "size",
                          "created_at",
                          "updated_at"
                        ],
                        "properties": {
                          "download_url": { "type": "string", "format": "uri" },
                          "id": { "type": "integer" },
                          "name": { "type": "string" },
                          "sha256": { "type": "string" },
                          "sha1": { "type": "string" },
                          "md5": { "type": "string" },
                          "content_type": { "type": "string" },
                          "state": { "type": "string" },
                          "size": { "type": "integer" },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "package_url": { "type": "string" },
                    "author": {
                      "type": "object",
                      "required": [
                        "login",
                        "id",
                        "node_id",
                        "avatar_url",
                        "gravatar_id",
                        "url",
                        "html_url",
                        "followers_url",
                        "following_url",
                        "gists_url",
                        "starred_url",
                        "subscriptions_url",
                        "organizations_url",
                        "repos_url",
                        "events_url",
                        "received_events_url",
                        "type",
                        "site_admin"
                      ],
                      "properties": {
                        "avatar_url": { "type": "string" },
                        "events_url": { "type": "string" },
                        "followers_url": { "type": "string" },
                        "following_url": { "type": "string" },
                        "gists_url": { "type": "string" },
                        "gravatar_id": { "type": "string" },
                        "html_url": { "type": "string" },
                        "id": { "type": "integer" },
                        "login": { "type": "string" },
                        "node_id": { "type": "string" },
                        "organizations_url": { "type": "string" },
                        "received_events_url": { "type": "string" },
                        "repos_url": { "type": "string" },
                        "site_admin": { "type": "boolean" },
                        "starred_url": { "type": "string" },
                        "subscriptions_url": { "type": "string" },
                        "type": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "additionalProperties": false
                    },
                    "source_url": { "type": "string" },
                    "installation_command": { "type": "string" }
                  },
                  "additionalProperties": false
                },
                { "type": "null" }
              ]
            },
            "registry": {
              "type": "object",
              "required": ["about_url", "name", "type", "url", "vendor"],
              "properties": {
                "about_url": { "type": "string", "format": "uri" },
                "name": { "type": "string" },
                "type": { "type": "string" },
                "url": { "type": "string", "format": "uri" },
                "vendor": { "type": "string" }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "registry_package published event"
    },
    "registry_package$updated": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "registry_package", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["updated"] },
        "registry_package": {
          "type": "object",
          "description": "Information about the package.",
          "required": [
            "id",
            "name",
            "namespace",
            "description",
            "ecosystem",
            "package_type",
            "html_url",
            "created_at",
            "updated_at",
            "owner",
            "package_version",
            "registry"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique identifier of the package."
            },
            "name": {
              "type": "string",
              "description": "The name of the package."
            },
            "namespace": { "type": "string" },
            "description": { "type": ["string", "null"] },
            "ecosystem": { "type": "string" },
            "package_type": {
              "type": "string",
              "enum": [
                "npm",
                "maven",
                "rubygems",
                "docker",
                "nuget",
                "CONTAINER"
              ],
              "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry."
            },
            "html_url": { "type": "string", "format": "uri" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": ["string", "null"], "format": "date-time" },
            "owner": { "$ref": "#/definitions/user" },
            "package_version": {
              "description": "A version of a software package",
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "id",
                    "version",
                    "summary",
                    "name",
                    "description",
                    "html_url",
                    "metadata",
                    "package_files",
                    "installation_command"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier of the package version."
                    },
                    "version": { "type": "string" },
                    "summary": { "type": "string" },
                    "name": {
                      "type": "string",
                      "description": "The name of the package version."
                    },
                    "description": { "type": "string" },
                    "body": {
                      "oneOf": [
                        { "type": "string" },
                        {
                          "type": "object",
                          "required": ["repository", "info"],
                          "properties": {
                            "repository": {
                              "type": "object",
                              "required": ["repository"],
                              "properties": {
                                "repository": {
                                  "$ref": "#/definitions/repository"
                                }
                              },
                              "additionalProperties": false
                            },
                            "info": {
                              "type": "object",
                              "required": [
                                "type",
                                "oid",
                                "mode",
                                "name",
                                "path",
                                "size",
                                "collection"
                              ],
                              "properties": {
                                "type": { "type": "string" },
                                "oid": { "type": "string" },
                                "mode": { "type": "integer" },
                                "name": { "type": "string" },
                                "path": { "type": "string" },
                                "size": { "type": ["integer", "null"] },
                                "collection": { "type": ["boolean", "null"] }
                              },
                              "additionalProperties": false
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {}
                            },
                            "_formatted": { "type": "boolean" }
                          },
                          "additionalProperties": false
                        }
                      ]
                    },
                    "body_html": { "type": "string" },
                    "release": {
                      "type": "object",
                      "required": [
                        "url",
                        "html_url",
                        "id",
                        "tag_name",
                        "target_commitish",
                        "name",
                        "draft",
                        "author",
                        "prerelease",
                        "created_at",
                        "published_at"
                      ],
                      "properties": {
                        "url": { "type": "string", "format": "uri" },
                        "html_url": { "type": "string", "format": "uri" },
                        "id": { "type": "integer" },
                        "tag_name": { "type": "string" },
                        "target_commitish": { "type": "string" },
                        "name": { "type": "string" },
                        "draft": { "type": "boolean" },
                        "author": { "$ref": "#/definitions/user" },
                        "prerelease": { "type": "boolean" },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "published_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "additionalProperties": false
                    },
                    "manifest": { "type": "string" },
                    "html_url": { "type": "string", "format": "uri" },
                    "tag_name": { "type": "string" },
                    "target_commitish": { "type": "string" },
                    "target_oid": { "type": "string" },
                    "draft": { "type": "boolean" },
                    "prerelease": { "type": "boolean" },
                    "created_at": { "type": "string", "format": "date-time" },
                    "updated_at": { "type": "string", "format": "date-time" },
                    "metadata": {
                      "type": "array",
                      "items": {},
                      "description": "Package Version Metadata"
                    },
                    "docker_metadata": { "type": "array", "items": {} },
                    "container_metadata": {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "description": { "type": "string" },
                                "source": { "type": "string", "format": "uri" },
                                "revision": { "type": "string" },
                                "image_url": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "licenses": { "type": "string" },
                                "all_labels": {
                                  "type": "object",
                                  "additionalProperties": { "type": "string" }
                                }
                              },
                              "additionalProperties": false
                            },
                            { "type": "null" }
                          ]
                        },
                        "manifest": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "digest": { "type": "string" },
                                "media_type": { "type": "string" },
                                "uri": { "type": "string" },
                                "size": { "type": "integer" },
                                "config": {
                                  "type": "object",
                                  "properties": {
                                    "digest": { "type": "string" },
                                    "media_type": { "type": "string" },
                                    "size": { "type": "integer" }
                                  },
                                  "additionalProperties": false
                                },
                                "layers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "digest": { "type": "string" },
                                      "media_type": { "type": "string" },
                                      "size": { "type": "integer" }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            { "type": "null" }
                          ]
                        },
                        "tag": {
                          "type": "object",
                          "properties": {
                            "digest": { "type": "string" },
                            "name": { "type": "string" }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "npm_metadata": {
                      "oneOf": [
                        { "$ref": "#/definitions/package-npm-metadata" },
                        { "type": "null" }
                      ]
                    },
                    "nuget_metadata": {
                      "oneOf": [
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/package-nuget-metadata"
                          }
                        },
                        { "type": "null" }
                      ]
                    },
                    "rubygems_metadata": { "type": "array", "items": {} },
                    "package_files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "download_url",
                          "id",
                          "name",
                          "sha256",
                          "sha1",
                          "md5",
                          "content_type",
                          "state",
                          "size",
                          "created_at",
                          "updated_at"
                        ],
                        "properties": {
                          "download_url": { "type": "string", "format": "uri" },
                          "id": { "type": "integer" },
                          "name": { "type": "string" },
                          "sha256": { "type": "string" },
                          "sha1": { "type": "string" },
                          "md5": { "type": "string" },
                          "content_type": { "type": "string" },
                          "state": { "type": "string" },
                          "size": { "type": "integer" },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "package_url": { "type": "string" },
                    "author": {
                      "type": "object",
                      "required": [
                        "login",
                        "id",
                        "node_id",
                        "avatar_url",
                        "gravatar_id",
                        "url",
                        "html_url",
                        "followers_url",
                        "following_url",
                        "gists_url",
                        "starred_url",
                        "subscriptions_url",
                        "organizations_url",
                        "repos_url",
                        "events_url",
                        "received_events_url",
                        "type",
                        "site_admin"
                      ],
                      "properties": {
                        "avatar_url": { "type": "string" },
                        "events_url": { "type": "string" },
                        "followers_url": { "type": "string" },
                        "following_url": { "type": "string" },
                        "gists_url": { "type": "string" },
                        "gravatar_id": { "type": "string" },
                        "html_url": { "type": "string" },
                        "id": { "type": "integer" },
                        "login": { "type": "string" },
                        "node_id": { "type": "string" },
                        "organizations_url": { "type": "string" },
                        "received_events_url": { "type": "string" },
                        "repos_url": { "type": "string" },
                        "site_admin": { "type": "boolean" },
                        "starred_url": { "type": "string" },
                        "subscriptions_url": { "type": "string" },
                        "type": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "additionalProperties": false
                    },
                    "source_url": { "type": "string" },
                    "installation_command": { "type": "string" }
                  },
                  "additionalProperties": false
                },
                { "type": "null" }
              ]
            },
            "registry": {
              "type": "object",
              "required": ["about_url", "name", "type", "url", "vendor"],
              "properties": {
                "about_url": { "type": "string", "format": "uri" },
                "name": { "type": "string" },
                "type": { "type": "string" },
                "url": { "type": "string", "format": "uri" },
                "vendor": { "type": "string" }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "registry_package updated event"
    },
    "registry_package_event": {
      "oneOf": [
        { "$ref": "#/definitions/registry_package$published" },
        { "$ref": "#/definitions/registry_package$updated" }
      ]
    },
    "release$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "release", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "release": { "$ref": "#/definitions/release" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "release created event"
    },
    "release$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "release", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "release": { "$ref": "#/definitions/release" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "release deleted event"
    },
    "release$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "release", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "changes": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the body if the action was `edited`."
                }
              },
              "additionalProperties": false
            },
            "name": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the name if the action was `edited`."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "release": { "$ref": "#/definitions/release" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "release edited event"
    },
    "release$prereleased": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "release", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["prereleased"] },
        "release": {
          "allOf": [
            { "$ref": "#/definitions/release" },
            {
              "type": "object",
              "required": ["prerelease"],
              "properties": {
                "prerelease": {
                  "type": "boolean",
                  "enum": [true],
                  "description": "Whether the release is identified as a prerelease or a full release."
                }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "release prereleased event"
    },
    "release$published": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "release", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["published"] },
        "release": {
          "allOf": [
            { "$ref": "#/definitions/release" },
            {
              "type": "object",
              "required": ["published_at"],
              "properties": {
                "published_at": { "type": "string", "format": "date-time" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "release published event"
    },
    "release$released": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "release", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["released"] },
        "release": { "$ref": "#/definitions/release" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "release released event"
    },
    "release$unpublished": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "release", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["unpublished"] },
        "release": {
          "allOf": [
            { "$ref": "#/definitions/release" },
            {
              "type": "object",
              "required": ["published_at"],
              "properties": { "published_at": { "type": "null" } },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "release unpublished event"
    },
    "release_event": {
      "oneOf": [
        { "$ref": "#/definitions/release$created" },
        { "$ref": "#/definitions/release$deleted" },
        { "$ref": "#/definitions/release$edited" },
        { "$ref": "#/definitions/release$prereleased" },
        { "$ref": "#/definitions/release$published" },
        { "$ref": "#/definitions/release$released" },
        { "$ref": "#/definitions/release$unpublished" }
      ]
    },
    "repository$archived": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["archived"] },
        "repository": {
          "allOf": [
            { "$ref": "#/definitions/repository" },
            {
              "type": "object",
              "required": ["archived"],
              "properties": {
                "archived": {
                  "type": "boolean",
                  "enum": [true],
                  "description": "Whether the repository is archived.",
                  "default": false
                }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository archived event"
    },
    "repository$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository created event"
    },
    "repository$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository deleted event"
    },
    "repository$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "changes": {
          "type": "object",
          "properties": {
            "description": {
              "type": "object",
              "required": ["from"],
              "properties": { "from": { "type": ["string", "null"] } },
              "additionalProperties": false
            },
            "default_branch": {
              "type": "object",
              "required": ["from"],
              "properties": { "from": { "type": "string" } },
              "additionalProperties": false
            },
            "homepage": {
              "type": "object",
              "required": ["from"],
              "properties": { "from": { "type": ["string", "null"] } },
              "additionalProperties": false
            },
            "topics": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": { "type": "array", "items": { "type": "string" } }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository edited event"
    },
    "repository$privatized": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["privatized"] },
        "repository": {
          "allOf": [
            { "$ref": "#/definitions/repository" },
            {
              "type": "object",
              "required": ["private"],
              "properties": {
                "private": {
                  "type": "boolean",
                  "enum": [true],
                  "description": "Whether the repository is private or public."
                }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository privatized event"
    },
    "repository$publicized": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["publicized"] },
        "repository": {
          "allOf": [
            { "$ref": "#/definitions/repository" },
            {
              "type": "object",
              "required": ["private"],
              "properties": {
                "private": {
                  "type": "boolean",
                  "enum": [false],
                  "description": "Whether the repository is private or public."
                }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository publicized event"
    },
    "repository$renamed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["renamed"] },
        "changes": {
          "type": "object",
          "required": ["repository"],
          "properties": {
            "repository": {
              "type": "object",
              "required": ["name"],
              "properties": {
                "name": {
                  "type": "object",
                  "required": ["from"],
                  "properties": { "from": { "type": "string" } },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository renamed event"
    },
    "repository$transferred": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["transferred"] },
        "changes": {
          "type": "object",
          "required": ["owner"],
          "properties": {
            "owner": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "object",
                  "properties": { "user": { "$ref": "#/definitions/user" } },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository transferred event"
    },
    "repository$unarchived": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["unarchived"] },
        "repository": {
          "allOf": [
            { "$ref": "#/definitions/repository" },
            {
              "type": "object",
              "required": ["archived"],
              "properties": {
                "archived": {
                  "type": "boolean",
                  "enum": [false],
                  "description": "Whether the repository is archived.",
                  "default": false
                }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository unarchived event"
    },
    "repository_event": {
      "oneOf": [
        { "$ref": "#/definitions/repository$archived" },
        { "$ref": "#/definitions/repository$created" },
        { "$ref": "#/definitions/repository$deleted" },
        { "$ref": "#/definitions/repository$edited" },
        { "$ref": "#/definitions/repository$privatized" },
        { "$ref": "#/definitions/repository$publicized" },
        { "$ref": "#/definitions/repository$renamed" },
        { "$ref": "#/definitions/repository$transferred" },
        { "$ref": "#/definitions/repository$unarchived" }
      ]
    },
    "repository_dispatch$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "branch",
        "client_payload",
        "repository",
        "sender",
        "installation"
      ],
      "properties": {
        "action": { "type": "string" },
        "branch": { "type": "string" },
        "client_payload": {
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository_dispatch event"
    },
    "repository_import$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["status", "repository", "sender"],
      "properties": {
        "status": {
          "type": "string",
          "enum": ["success", "cancelled", "failure"]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository_import event"
    },
    "repository_vulnerability_alert$create": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "alert", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["create"] },
        "alert": {
          "allOf": [
            { "$ref": "#/definitions/repository-vulnerability-alert-alert" },
            {
              "type": "object",
              "required": ["state"],
              "properties": { "state": { "type": "string", "enum": ["open"] } },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/github-org" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository_vulnerability_alert create event"
    },
    "repository_vulnerability_alert$dismiss": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "alert", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["dismiss"] },
        "alert": {
          "allOf": [
            { "$ref": "#/definitions/repository-vulnerability-alert-alert" },
            {
              "type": "object",
              "required": [
                "dismisser",
                "dismiss_reason",
                "dismissed_at",
                "state"
              ],
              "properties": {
                "dismisser": { "$ref": "#/definitions/user" },
                "dismiss_reason": { "type": "string" },
                "dismissed_at": { "type": "string" },
                "state": { "type": "string", "enum": ["dismissed"] }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/github-org" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository_vulnerability_alert dismiss event"
    },
    "repository_vulnerability_alert$reopen": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "alert", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["reopen"] },
        "alert": {
          "allOf": [
            { "$ref": "#/definitions/repository-vulnerability-alert-alert" },
            {
              "type": "object",
              "required": ["state"],
              "properties": { "state": { "type": "string", "enum": ["open"] } },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/github-org" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository_vulnerability_alert reopen event"
    },
    "repository_vulnerability_alert$resolve": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "alert", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["resolve"] },
        "alert": {
          "allOf": [
            { "$ref": "#/definitions/repository-vulnerability-alert-alert" },
            {
              "type": "object",
              "required": ["state", "fixed_at", "fix_reason", "fixed_in"],
              "properties": {
                "state": { "type": "string", "enum": ["fixed"] },
                "fixed_at": { "type": "string", "format": "date-time" },
                "fix_reason": { "type": "string" },
                "fixed_in": { "type": "string" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/github-org" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "repository_vulnerability_alert resolve event"
    },
    "repository_vulnerability_alert_event": {
      "oneOf": [
        { "$ref": "#/definitions/repository_vulnerability_alert$create" },
        { "$ref": "#/definitions/repository_vulnerability_alert$dismiss" },
        { "$ref": "#/definitions/repository_vulnerability_alert$reopen" },
        { "$ref": "#/definitions/repository_vulnerability_alert$resolve" }
      ]
    },
    "secret_scanning_alert$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "alert", "repository"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "alert": {
          "allOf": [
            { "$ref": "#/definitions/secret-scanning-alert" },
            {
              "type": "object",
              "required": ["resolution", "resolved_by", "resolved_at"],
              "properties": {
                "resolution": { "type": "null" },
                "resolved_by": { "type": "null" },
                "resolved_at": { "type": "null" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "secret_scanning_alert created event"
    },
    "secret_scanning_alert$reopened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "alert", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["reopened"] },
        "alert": {
          "type": "object",
          "description": "The secret scanning alert involved in the event.",
          "required": [
            "number",
            "secret_type",
            "resolution",
            "resolved_by",
            "resolved_at"
          ],
          "properties": {
            "number": { "type": "integer" },
            "secret_type": { "type": "string" },
            "resolution": { "type": "null" },
            "resolved_by": { "type": "null" },
            "resolved_at": { "type": "null" }
          },
          "additionalProperties": false
        },
        "repository": { "$ref": "#/definitions/repository" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "secret_scanning_alert reopened event"
    },
    "secret_scanning_alert$resolved": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "alert", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["resolved"] },
        "alert": {
          "allOf": [
            { "$ref": "#/definitions/secret-scanning-alert" },
            {
              "type": "object",
              "required": ["resolution", "resolved_by", "resolved_at"],
              "properties": {
                "resolution": {
                  "type": "string",
                  "enum": [
                    "false_positive",
                    "wont_fix",
                    "revoked",
                    "used_in_tests"
                  ]
                },
                "resolved_by": { "$ref": "#/definitions/user" },
                "resolved_at": { "type": "string", "format": "date-time" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "secret_scanning_alert resolved event"
    },
    "secret_scanning_alert$revoked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "alert", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["revoked"] },
        "alert": {
          "allOf": [
            { "$ref": "#/definitions/secret-scanning-alert" },
            {
              "type": "object",
              "required": ["resolution", "resolved_by", "resolved_at"],
              "properties": {
                "resolution": { "type": "string", "enum": ["revoked"] },
                "resolved_by": { "$ref": "#/definitions/user" },
                "resolved_at": { "type": "string", "format": "date-time" }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "repository": { "$ref": "#/definitions/repository" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "secret_scanning_alert revoked event"
    },
    "secret_scanning_alert_event": {
      "oneOf": [
        { "$ref": "#/definitions/secret_scanning_alert$created" },
        { "$ref": "#/definitions/secret_scanning_alert$reopened" },
        { "$ref": "#/definitions/secret_scanning_alert$resolved" },
        { "$ref": "#/definitions/secret_scanning_alert$revoked" }
      ]
    },
    "secret_scanning_alert_location$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "secret_scanning_alert_location created event",
      "type": "object",
      "required": ["action", "location", "alert", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "alert": { "$ref": "#/definitions/secret-scanning-alert" },
        "location": { "$ref": "#/definitions/secret-scanning-location" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false
    },
    "secret_scanning_alert_location_event": {
      "oneOf": [
        { "$ref": "#/definitions/secret_scanning_alert_location$created" }
      ]
    },
    "security_advisory$performed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "security_advisory"],
      "properties": {
        "action": { "type": "string", "enum": ["performed"] },
        "security_advisory": {
          "type": "object",
          "description": "The details of the security advisory, including summary, description, and severity.",
          "required": [
            "cvss",
            "cwes",
            "cve_id",
            "ghsa_id",
            "summary",
            "description",
            "severity",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at",
            "vulnerabilities"
          ],
          "properties": {
            "cvss": {
              "type": "object",
              "required": ["vector_string", "score"],
              "properties": {
                "vector_string": { "type": ["string", "null"] },
                "score": { "type": "number" }
              },
              "additionalProperties": false
            },
            "cwes": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["cwe_id", "name"],
                "properties": {
                  "cwe_id": { "type": "string" },
                  "name": { "type": "string" }
                },
                "additionalProperties": false
              }
            },
            "ghsa_id": { "type": "string" },
            "cve_id": { "type": ["string", "null"] },
            "summary": { "type": "string" },
            "description": { "type": "string" },
            "severity": { "type": "string" },
            "identifiers": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["value", "type"],
                "properties": {
                  "value": { "type": "string" },
                  "type": { "type": "string" }
                },
                "additionalProperties": false
              }
            },
            "references": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["url"],
                "properties": { "url": { "type": "string", "format": "uri" } },
                "additionalProperties": false
              }
            },
            "published_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "withdrawn_at": {
              "oneOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ]
            },
            "vulnerabilities": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "properties": {
                  "package": {
                    "type": "object",
                    "required": ["ecosystem", "name"],
                    "properties": {
                      "ecosystem": { "type": "string" },
                      "name": { "type": "string" }
                    },
                    "additionalProperties": false
                  },
                  "severity": { "type": "string" },
                  "vulnerable_version_range": { "type": "string" },
                  "first_patched_version": {
                    "type": ["object", "null"],
                    "required": ["identifier"],
                    "properties": { "identifier": { "type": "string" } },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "title": "security_advisory performed event"
    },
    "security_advisory$published": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "security_advisory"],
      "properties": {
        "action": { "type": "string", "enum": ["published"] },
        "security_advisory": {
          "type": "object",
          "description": "The details of the security advisory, including summary, description, and severity.",
          "required": [
            "cvss",
            "cwes",
            "cve_id",
            "ghsa_id",
            "summary",
            "description",
            "severity",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at",
            "vulnerabilities"
          ],
          "properties": {
            "cvss": {
              "type": "object",
              "required": ["vector_string", "score"],
              "properties": {
                "vector_string": { "type": ["string", "null"] },
                "score": { "type": "number" }
              },
              "additionalProperties": false
            },
            "cwes": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["cwe_id", "name"],
                "properties": {
                  "cwe_id": { "type": "string" },
                  "name": { "type": "string" }
                },
                "additionalProperties": false
              }
            },
            "ghsa_id": { "type": "string" },
            "cve_id": { "type": ["string", "null"] },
            "summary": { "type": "string" },
            "description": { "type": "string" },
            "severity": { "type": "string" },
            "identifiers": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["value", "type"],
                "properties": {
                  "value": { "type": "string" },
                  "type": { "type": "string" }
                },
                "additionalProperties": false
              }
            },
            "references": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["url"],
                "properties": { "url": { "type": "string", "format": "uri" } },
                "additionalProperties": false
              }
            },
            "published_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "withdrawn_at": {
              "oneOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ]
            },
            "vulnerabilities": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "properties": {
                  "package": {
                    "type": "object",
                    "required": ["ecosystem", "name"],
                    "properties": {
                      "ecosystem": { "type": "string" },
                      "name": { "type": "string" }
                    },
                    "additionalProperties": false
                  },
                  "severity": { "type": "string" },
                  "vulnerable_version_range": { "type": "string" },
                  "first_patched_version": {
                    "type": ["object", "null"],
                    "required": ["identifier"],
                    "properties": { "identifier": { "type": "string" } },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "title": "security_advisory published event"
    },
    "security_advisory$updated": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "security_advisory"],
      "properties": {
        "action": { "type": "string", "enum": ["updated"] },
        "security_advisory": {
          "type": "object",
          "description": "The details of the security advisory, including summary, description, and severity.",
          "required": [
            "cvss",
            "cwes",
            "cve_id",
            "ghsa_id",
            "summary",
            "description",
            "severity",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at",
            "vulnerabilities"
          ],
          "properties": {
            "cvss": {
              "type": "object",
              "required": ["vector_string", "score"],
              "properties": {
                "vector_string": { "type": ["string", "null"] },
                "score": { "type": "number" }
              },
              "additionalProperties": false
            },
            "cwes": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["cwe_id", "name"],
                "properties": {
                  "cwe_id": { "type": "string" },
                  "name": { "type": "string" }
                },
                "additionalProperties": false
              }
            },
            "ghsa_id": { "type": "string" },
            "cve_id": { "type": ["string", "null"] },
            "summary": { "type": "string" },
            "description": { "type": "string" },
            "severity": { "type": "string" },
            "identifiers": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["value", "type"],
                "properties": {
                  "value": { "type": "string" },
                  "type": { "type": "string" }
                },
                "additionalProperties": false
              }
            },
            "references": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["url"],
                "properties": { "url": { "type": "string", "format": "uri" } },
                "additionalProperties": false
              }
            },
            "published_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "withdrawn_at": {
              "oneOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ]
            },
            "vulnerabilities": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "properties": {
                  "package": {
                    "type": "object",
                    "required": ["ecosystem", "name"],
                    "properties": {
                      "ecosystem": { "type": "string" },
                      "name": { "type": "string" }
                    },
                    "additionalProperties": false
                  },
                  "severity": { "type": "string" },
                  "vulnerable_version_range": { "type": "string" },
                  "first_patched_version": {
                    "type": ["object", "null"],
                    "required": ["identifier"],
                    "properties": { "identifier": { "type": "string" } },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "title": "security_advisory updated event"
    },
    "security_advisory$withdrawn": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "security_advisory"],
      "properties": {
        "action": { "type": "string", "enum": ["withdrawn"] },
        "security_advisory": {
          "type": "object",
          "description": "The details of the security advisory, including summary, description, and severity.",
          "required": [
            "cvss",
            "cwes",
            "ghsa_id",
            "cve_id",
            "summary",
            "description",
            "severity",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at",
            "vulnerabilities"
          ],
          "properties": {
            "cvss": {
              "type": "object",
              "required": ["vector_string", "score"],
              "properties": {
                "vector_string": { "type": ["string", "null"] },
                "score": { "type": "number" }
              },
              "additionalProperties": false
            },
            "cwes": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["cwe_id", "name"],
                "properties": {
                  "cwe_id": { "type": "string" },
                  "name": { "type": "string" }
                },
                "additionalProperties": false
              }
            },
            "ghsa_id": { "type": "string" },
            "cve_id": { "type": ["string", "null"] },
            "summary": { "type": "string" },
            "description": { "type": "string" },
            "severity": { "type": "string" },
            "identifiers": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["value", "type"],
                "properties": {
                  "value": { "type": "string" },
                  "type": { "type": "string" }
                },
                "additionalProperties": false
              }
            },
            "references": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["url"],
                "properties": { "url": { "type": "string", "format": "uri" } },
                "additionalProperties": false
              }
            },
            "published_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "withdrawn_at": { "type": "string", "format": "date-time" },
            "vulnerabilities": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "properties": {
                  "package": {
                    "type": "object",
                    "required": ["ecosystem", "name"],
                    "properties": {
                      "ecosystem": { "type": "string" },
                      "name": { "type": "string" }
                    },
                    "additionalProperties": false
                  },
                  "severity": { "type": "string" },
                  "vulnerable_version_range": { "type": "string" },
                  "first_patched_version": {
                    "type": ["object", "null"],
                    "required": ["identifier"],
                    "properties": { "identifier": { "type": "string" } },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "title": "security_advisory withdrawn event"
    },
    "security_advisory_event": {
      "oneOf": [
        { "$ref": "#/definitions/security_advisory$performed" },
        { "$ref": "#/definitions/security_advisory$published" },
        { "$ref": "#/definitions/security_advisory$updated" },
        { "$ref": "#/definitions/security_advisory$withdrawn" }
      ]
    },
    "sponsorship$cancelled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "sponsorship", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["cancelled"] },
        "sponsorship": {
          "type": "object",
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "properties": {
            "node_id": { "type": "string" },
            "created_at": { "type": "string", "format": "date-time" },
            "sponsorable": { "$ref": "#/definitions/user" },
            "sponsor": { "$ref": "#/definitions/user" },
            "privacy_level": { "type": "string" },
            "tier": { "$ref": "#/definitions/sponsorship-tier" }
          },
          "additionalProperties": false
        },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "sponsorship cancelled event"
    },
    "sponsorship$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "sponsorship", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "sponsorship": {
          "type": "object",
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "properties": {
            "node_id": { "type": "string" },
            "created_at": { "type": "string", "format": "date-time" },
            "sponsorable": { "$ref": "#/definitions/user" },
            "sponsor": { "$ref": "#/definitions/user" },
            "privacy_level": { "type": "string" },
            "tier": { "$ref": "#/definitions/sponsorship-tier" }
          },
          "additionalProperties": false
        },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "sponsorship created event"
    },
    "sponsorship$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "sponsorship", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "sponsorship": {
          "type": "object",
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "properties": {
            "node_id": { "type": "string" },
            "created_at": { "type": "string", "format": "date-time" },
            "sponsorable": { "$ref": "#/definitions/user" },
            "sponsor": { "$ref": "#/definitions/user" },
            "privacy_level": { "type": "string" },
            "tier": { "$ref": "#/definitions/sponsorship-tier" }
          },
          "additionalProperties": false
        },
        "changes": {
          "type": "object",
          "properties": {
            "privacy_level": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The `edited` event types include the details about the change when someone edits a sponsorship to change the privacy."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "sponsorship edited event"
    },
    "sponsorship$pending_cancellation": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "sponsorship", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["pending_cancellation"] },
        "sponsorship": {
          "type": "object",
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "properties": {
            "node_id": { "type": "string" },
            "created_at": { "type": "string", "format": "date-time" },
            "sponsorable": { "$ref": "#/definitions/user" },
            "sponsor": { "$ref": "#/definitions/user" },
            "privacy_level": { "type": "string" },
            "tier": { "$ref": "#/definitions/sponsorship-tier" }
          },
          "additionalProperties": false
        },
        "effective_date": {
          "type": "string",
          "description": "The `pending_cancellation` and `pending_tier_change` event types will include the date the cancellation or tier change will take effect."
        },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "sponsorship pending_cancellation event"
    },
    "sponsorship$pending_tier_change": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "sponsorship", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["pending_tier_change"] },
        "sponsorship": {
          "type": "object",
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "properties": {
            "node_id": { "type": "string" },
            "created_at": { "type": "string", "format": "date-time" },
            "sponsorable": { "$ref": "#/definitions/user" },
            "sponsor": { "$ref": "#/definitions/user" },
            "privacy_level": { "type": "string" },
            "tier": { "$ref": "#/definitions/sponsorship-tier" }
          },
          "additionalProperties": false
        },
        "effective_date": {
          "type": "string",
          "description": "The `pending_cancellation` and `pending_tier_change` event types will include the date the cancellation or tier change will take effect."
        },
        "changes": {
          "type": "object",
          "required": ["tier"],
          "properties": {
            "tier": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": { "$ref": "#/definitions/sponsorship-tier" }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "sponsorship pending_tier_change event"
    },
    "sponsorship$tier_changed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "sponsorship", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["tier_changed"] },
        "sponsorship": {
          "type": "object",
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "properties": {
            "node_id": { "type": "string" },
            "created_at": { "type": "string", "format": "date-time" },
            "sponsorable": { "$ref": "#/definitions/user" },
            "sponsor": { "$ref": "#/definitions/user" },
            "privacy_level": { "type": "string" },
            "tier": { "$ref": "#/definitions/sponsorship-tier" }
          },
          "additionalProperties": false
        },
        "changes": {
          "type": "object",
          "required": ["tier"],
          "properties": {
            "tier": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": { "$ref": "#/definitions/sponsorship-tier" }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "sender": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "sponsorship tier_changed event"
    },
    "sponsorship_event": {
      "oneOf": [
        { "$ref": "#/definitions/sponsorship$cancelled" },
        { "$ref": "#/definitions/sponsorship$created" },
        { "$ref": "#/definitions/sponsorship$edited" },
        { "$ref": "#/definitions/sponsorship$pending_cancellation" },
        { "$ref": "#/definitions/sponsorship$pending_tier_change" },
        { "$ref": "#/definitions/sponsorship$tier_changed" }
      ]
    },
    "star$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "starred_at", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "starred_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time the star was created. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`. Will be `null` for the `deleted` action."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "star created event"
    },
    "star$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "starred_at", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "starred_at": {
          "type": "null",
          "description": "The time the star was created. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`. Will be `null` for the `deleted` action."
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "star deleted event"
    },
    "star_event": {
      "oneOf": [
        { "$ref": "#/definitions/star$created" },
        { "$ref": "#/definitions/star$deleted" }
      ]
    },
    "status$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "id",
        "sha",
        "name",
        "target_url",
        "context",
        "description",
        "state",
        "commit",
        "branches",
        "created_at",
        "updated_at",
        "repository",
        "sender"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier of the status."
        },
        "sha": { "type": "string", "description": "The Commit SHA." },
        "name": { "type": "string" },
        "avatar_url": { "type": ["string", "null"], "format": "uri" },
        "target_url": {
          "type": ["string", "null"],
          "description": "The optional link added to the status."
        },
        "context": { "type": "string" },
        "description": {
          "type": ["string", "null"],
          "description": "The optional human-readable description added to the status."
        },
        "state": {
          "type": "string",
          "enum": ["pending", "success", "failure", "error"],
          "description": "The new state. Can be `pending`, `success`, `failure`, or `error`."
        },
        "commit": {
          "type": "object",
          "required": [
            "sha",
            "node_id",
            "commit",
            "url",
            "html_url",
            "comments_url",
            "author",
            "committer",
            "parents"
          ],
          "properties": {
            "sha": { "type": "string" },
            "node_id": { "type": "string" },
            "commit": {
              "type": "object",
              "required": [
                "author",
                "committer",
                "message",
                "tree",
                "url",
                "comment_count",
                "verification"
              ],
              "properties": {
                "author": {
                  "allOf": [
                    { "$ref": "#/definitions/committer" },
                    {
                      "type": "object",
                      "required": ["date"],
                      "properties": { "date": { "type": "string" } },
                      "tsAdditionalProperties": false
                    }
                  ]
                },
                "committer": {
                  "allOf": [
                    { "$ref": "#/definitions/committer" },
                    {
                      "type": "object",
                      "required": ["date"],
                      "properties": { "date": { "type": "string" } },
                      "tsAdditionalProperties": false
                    }
                  ]
                },
                "message": { "type": "string" },
                "tree": {
                  "type": "object",
                  "required": ["sha", "url"],
                  "properties": {
                    "sha": { "type": "string" },
                    "url": { "type": "string", "format": "uri" }
                  },
                  "additionalProperties": false
                },
                "url": { "type": "string", "format": "uri" },
                "comment_count": { "type": "integer" },
                "verification": {
                  "type": "object",
                  "required": ["verified", "reason", "signature", "payload"],
                  "properties": {
                    "verified": { "type": "boolean" },
                    "reason": {
                      "type": "string",
                      "enum": [
                        "expired_key",
                        "not_signing_key",
                        "gpgverify_error",
                        "gpgverify_unavailable",
                        "unsigned",
                        "unknown_signature_type",
                        "no_user",
                        "unverified_email",
                        "bad_email",
                        "unknown_key",
                        "malformed_signature",
                        "invalid",
                        "valid"
                      ]
                    },
                    "signature": { "type": ["string", "null"] },
                    "payload": { "type": ["string", "null"] }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "url": { "type": "string", "format": "uri" },
            "html_url": { "type": "string", "format": "uri" },
            "comments_url": { "type": "string", "format": "uri" },
            "author": {
              "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
            },
            "committer": {
              "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
            },
            "parents": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["sha", "url", "html_url"],
                "properties": {
                  "sha": { "type": "string" },
                  "url": { "type": "string", "format": "uri" },
                  "html_url": { "type": "string", "format": "uri" }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "branches": {
          "type": "array",
          "description": "An array of branch objects containing the status' SHA. Each branch contains the given SHA, but the SHA may or may not be the head of the branch. The array includes a maximum of 10 branches.",
          "items": {
            "type": "object",
            "required": ["name", "commit", "protected"],
            "properties": {
              "name": { "type": "string" },
              "commit": {
                "type": "object",
                "required": ["sha", "url"],
                "properties": {
                  "sha": { "type": "string" },
                  "url": { "type": "string", "format": "uri" }
                },
                "additionalProperties": false
              },
              "protected": { "type": "boolean" }
            },
            "additionalProperties": false
          }
        },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "status event"
    },
    "team$added_to_repository": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "team", "organization", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["added_to_repository"] },
        "team": { "$ref": "#/definitions/team" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "team added_to_repository event"
    },
    "team$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "team", "organization", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["created"] },
        "team": { "$ref": "#/definitions/team" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "team created event"
    },
    "team$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "team", "organization", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["deleted"] },
        "team": { "$ref": "#/definitions/team" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "team deleted event"
    },
    "team$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "changes", "team", "organization", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["edited"] },
        "changes": {
          "type": "object",
          "description": "The changes to the team if the action was `edited`.",
          "required": [],
          "properties": {
            "description": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the description if the action was `edited`."
                }
              },
              "additionalProperties": false
            },
            "name": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the name if the action was `edited`."
                }
              },
              "additionalProperties": false
            },
            "privacy": {
              "type": "object",
              "required": ["from"],
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The previous version of the team's privacy if the action was `edited`."
                }
              },
              "additionalProperties": false
            },
            "repository": {
              "type": "object",
              "required": ["permissions"],
              "properties": {
                "permissions": {
                  "type": "object",
                  "required": ["from"],
                  "properties": {
                    "from": {
                      "type": "object",
                      "properties": {
                        "admin": {
                          "type": "boolean",
                          "description": "The previous version of the team member's `admin` permission on a repository, if the action was `edited`."
                        },
                        "pull": {
                          "type": "boolean",
                          "description": "The previous version of the team member's `pull` permission on a repository, if the action was `edited`."
                        },
                        "push": {
                          "type": "boolean",
                          "description": "The previous version of the team member's `push` permission on a repository, if the action was `edited`."
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "team": { "$ref": "#/definitions/team" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "team edited event"
    },
    "team$removed_from_repository": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "team", "organization", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["removed_from_repository"] },
        "team": { "$ref": "#/definitions/team" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "team removed_from_repository event"
    },
    "team_event": {
      "oneOf": [
        { "$ref": "#/definitions/team$added_to_repository" },
        { "$ref": "#/definitions/team$created" },
        { "$ref": "#/definitions/team$deleted" },
        { "$ref": "#/definitions/team$edited" },
        { "$ref": "#/definitions/team$removed_from_repository" }
      ]
    },
    "team_add$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["team", "repository", "organization", "sender"],
      "properties": {
        "team": { "$ref": "#/definitions/team" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "team_add event"
    },
    "watch$started": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "repository", "sender"],
      "properties": {
        "action": { "type": "string", "enum": ["started"] },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" }
      },
      "additionalProperties": false,
      "title": "watch started event"
    },
    "watch_event": { "oneOf": [{ "$ref": "#/definitions/watch$started" }] },
    "workflow_dispatch$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["inputs", "ref", "repository", "sender", "workflow"],
      "properties": {
        "inputs": {
          "description": "Inputs to the workflow. Each key represents the name of the input while it's value represents the value of that input.",
          "oneOf": [
            {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            },
            { "type": "null" }
          ]
        },
        "ref": {
          "description": "The branch ref from which the workflow was run.",
          "type": "string"
        },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "organization": { "$ref": "#/definitions/organization" },
        "workflow": {
          "description": "Relative path to the workflow file which contains the workflow.",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "title": "workflow_dispatch event"
    },
    "workflow_job$completed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "repository", "sender", "workflow_job"],
      "properties": {
        "action": { "type": "string", "enum": ["completed"] },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "deployment": { "$ref": "#/definitions/deployment" },
        "workflow_job": {
          "allOf": [
            { "$ref": "#/definitions/workflow-job" },
            {
              "type": "object",
              "required": ["conclusion"],
              "properties": {
                "conclusion": {
                  "type": "string",
                  "enum": ["success", "failure", "cancelled", "skipped"]
                }
              },
              "tsAdditionalProperties": false
            }
          ]
        }
      },
      "additionalProperties": false,
      "title": "workflow_job completed event"
    },
    "workflow_job$in_progress": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "repository", "sender", "workflow_job"],
      "properties": {
        "action": { "type": "string", "enum": ["in_progress"] },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "deployment": { "$ref": "#/definitions/deployment" },
        "workflow_job": {
          "allOf": [
            { "$ref": "#/definitions/workflow-job" },
            {
              "type": "object",
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["queued", "in_progress"]
                }
              },
              "tsAdditionalProperties": false
            }
          ]
        }
      },
      "additionalProperties": false,
      "title": "workflow_job in_progress event"
    },
    "workflow_job$queued": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "repository", "sender", "workflow_job"],
      "properties": {
        "action": { "type": "string", "enum": ["queued"] },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "deployment": { "$ref": "#/definitions/deployment" },
        "workflow_job": {
          "allOf": [
            { "$ref": "#/definitions/workflow-job" },
            {
              "type": "object",
              "required": ["status"],
              "properties": {
                "status": { "type": "string", "enum": ["queued", "waiting"] }
              },
              "tsAdditionalProperties": false
            }
          ]
        }
      },
      "additionalProperties": false,
      "title": "workflow_job queued event"
    },
    "workflow_job$waiting": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["action", "repository", "sender", "workflow_job"],
      "properties": {
        "action": { "type": "string", "enum": ["waiting"] },
        "organization": { "$ref": "#/definitions/organization" },
        "installation": { "$ref": "#/definitions/installation-lite" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "deployment": { "$ref": "#/definitions/deployment" },
        "workflow_job": {
          "allOf": [
            { "$ref": "#/definitions/workflow-job" },
            {
              "type": "object",
              "required": ["status"],
              "properties": {
                "status": { "type": "string", "enum": ["waiting"] }
              },
              "tsAdditionalProperties": false
            }
          ]
        }
      },
      "additionalProperties": false,
      "title": "workflow_job waiting event"
    },
    "workflow_job_event": {
      "oneOf": [
        { "$ref": "#/definitions/workflow_job$completed" },
        { "$ref": "#/definitions/workflow_job$in_progress" },
        { "$ref": "#/definitions/workflow_job$queued" },
        { "$ref": "#/definitions/workflow_job$waiting" }
      ]
    },
    "workflow_run$completed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "repository",
        "sender",
        "workflow",
        "workflow_run"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["completed"] },
        "organization": { "$ref": "#/definitions/organization" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "workflow": { "$ref": "#/definitions/workflow" },
        "workflow_run": {
          "allOf": [
            { "$ref": "#/definitions/workflow-run" },
            {
              "type": "object",
              "required": ["conclusion"],
              "properties": {
                "conclusion": {
                  "type": "string",
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale",
                    "skipped"
                  ]
                }
              },
              "tsAdditionalProperties": false
            }
          ]
        },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "workflow_run completed event"
    },
    "workflow_run$in_progress": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "repository",
        "sender",
        "workflow",
        "workflow_run"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["in_progress"] },
        "organization": { "$ref": "#/definitions/organization" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "workflow": { "$ref": "#/definitions/workflow" },
        "workflow_run": { "$ref": "#/definitions/workflow-run" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "workflow_run in_progress event"
    },
    "workflow_run$requested": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "action",
        "repository",
        "sender",
        "workflow",
        "workflow_run"
      ],
      "properties": {
        "action": { "type": "string", "enum": ["requested"] },
        "organization": { "$ref": "#/definitions/organization" },
        "repository": { "$ref": "#/definitions/repository" },
        "sender": { "$ref": "#/definitions/user" },
        "workflow": { "$ref": "#/definitions/workflow" },
        "workflow_run": { "$ref": "#/definitions/workflow-run" },
        "installation": { "$ref": "#/definitions/installation-lite" }
      },
      "additionalProperties": false,
      "title": "workflow_run requested event"
    },
    "workflow_run_event": {
      "oneOf": [
        { "$ref": "#/definitions/workflow_run$completed" },
        { "$ref": "#/definitions/workflow_run$in_progress" },
        { "$ref": "#/definitions/workflow_run$requested" }
      ]
    },
    "alert-instance": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": ["ref", "analysis_key", "environment", "state"],
      "type": "object",
      "properties": {
        "ref": {
          "type": "string",
          "description": "The full Git reference, formatted as `refs/heads/<branch name>`."
        },
        "analysis_key": {
          "type": "string",
          "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name."
        },
        "environment": {
          "type": "string",
          "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed."
        },
        "state": {
          "type": "string",
          "description": "State of a code scanning alert.",
          "enum": ["open", "dismissed", "fixed"]
        },
        "commit_sha": { "type": "string" },
        "message": {
          "type": "object",
          "properties": { "text": { "type": "string" } },
          "additionalProperties": false
        },
        "location": {
          "type": "object",
          "properties": {
            "path": { "type": "string" },
            "start_line": { "type": "integer" },
            "end_line": { "type": "integer" },
            "start_column": { "type": "integer" },
            "end_column": { "type": "integer" }
          },
          "additionalProperties": false
        },
        "classifications": { "type": "array", "items": { "type": "string" } }
      },
      "additionalProperties": false,
      "title": "Alert Instance"
    },
    "app": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.",
      "type": "object",
      "required": [
        "id",
        "node_id",
        "owner",
        "name",
        "description",
        "external_url",
        "html_url",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "description": "Unique identifier of the GitHub app",
          "type": "integer"
        },
        "slug": {
          "description": "The slug name of the GitHub app",
          "type": "string"
        },
        "node_id": { "type": "string" },
        "owner": { "$ref": "#/definitions/user" },
        "name": {
          "description": "The name of the GitHub app",
          "type": "string"
        },
        "description": { "type": ["string", "null"] },
        "external_url": { "type": "string", "format": "uri" },
        "html_url": { "type": "string", "format": "uri" },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "permissions": {
          "description": "The set of permissions for the GitHub app",
          "type": "object",
          "properties": {
            "actions": { "type": "string", "enum": ["read", "write"] },
            "administration": { "type": "string", "enum": ["read", "write"] },
            "blocking": { "type": "string", "enum": ["read", "write"] },
            "checks": { "type": "string", "enum": ["read", "write"] },
            "content_references": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "contents": { "type": "string", "enum": ["read", "write"] },
            "deployments": { "type": "string", "enum": ["read", "write"] },
            "discussions": { "type": "string", "enum": ["read", "write"] },
            "emails": { "type": "string", "enum": ["read", "write"] },
            "environments": { "type": "string", "enum": ["read", "write"] },
            "followers": { "type": "string", "enum": ["read", "write"] },
            "gpg_keys": { "type": "string", "enum": ["read", "write"] },
            "interaction_limits": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "issues": { "type": "string", "enum": ["read", "write"] },
            "keys": { "type": "string", "enum": ["read", "write"] },
            "members": { "type": "string", "enum": ["read", "write"] },
            "merge_queues": { "type": "string", "enum": ["read", "write"] },
            "metadata": { "type": "string", "enum": ["read", "write"] },
            "organization_administration": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "organization_hooks": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "organization_packages": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "organization_plan": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "organization_projects": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "organization_secrets": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "organization_self_hosted_runners": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "organization_user_blocking": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "packages": { "type": "string", "enum": ["read", "write"] },
            "pages": { "type": "string", "enum": ["read", "write"] },
            "plan": { "type": "string", "enum": ["read", "write"] },
            "pull_requests": { "type": "string", "enum": ["read", "write"] },
            "repository_hooks": { "type": "string", "enum": ["read", "write"] },
            "repository_projects": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "secret_scanning_alerts": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "secrets": { "type": "string", "enum": ["read", "write"] },
            "security_events": { "type": "string", "enum": ["read", "write"] },
            "security_scanning_alert": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "single_file": { "type": "string", "enum": ["read", "write"] },
            "starring": { "type": "string", "enum": ["read", "write"] },
            "statuses": { "type": "string", "enum": ["read", "write"] },
            "team_discussions": { "type": "string", "enum": ["read", "write"] },
            "vulnerability_alerts": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "watching": { "type": "string", "enum": ["read", "write"] },
            "workflows": { "type": "string", "enum": ["read", "write"] }
          },
          "additionalProperties": false
        },
        "events": {
          "description": "The list of events for the GitHub app",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "branch_protection_rule",
              "check_run",
              "check_suite",
              "code_scanning_alert",
              "commit_comment",
              "create",
              "delete",
              "dependabot_alert",
              "deployment",
              "deployment_protection_rule",
              "deployment_review",
              "deployment_status",
              "deploy_key",
              "discussion",
              "discussion_comment",
              "fork",
              "gollum",
              "issues",
              "issue_comment",
              "label",
              "member",
              "membership",
              "merge_group",
              "merge_queue_entry",
              "milestone",
              "organization",
              "org_block",
              "page_build",
              "project",
              "projects_v2_item",
              "project_card",
              "project_column",
              "public",
              "pull_request",
              "pull_request_review",
              "pull_request_review_comment",
              "pull_request_review_thread",
              "push",
              "registry_package",
              "release",
              "repository",
              "repository_dispatch",
              "repository_ruleset",
              "secret_scanning_alert",
              "secret_scanning_alert_location",
              "security_and_analysis",
              "star",
              "status",
              "team",
              "team_add",
              "watch",
              "workflow_dispatch",
              "workflow_job",
              "workflow_run"
            ]
          }
        }
      },
      "additionalProperties": false,
      "title": "App"
    },
    "author_association": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "string",
      "description": "How the author is associated with the repository.",
      "enum": [
        "COLLABORATOR",
        "CONTRIBUTOR",
        "FIRST_TIMER",
        "FIRST_TIME_CONTRIBUTOR",
        "MANNEQUIN",
        "MEMBER",
        "NONE",
        "OWNER"
      ],
      "title": "AuthorAssociation"
    },
    "auto-merge": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "enabled_by",
        "merge_method",
        "commit_title",
        "commit_message"
      ],
      "properties": {
        "enabled_by": {
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "merge_method": {
          "type": "string",
          "enum": ["merge", "squash", "rebase"],
          "description": "The merge method to use."
        },
        "commit_title": {
          "type": ["string", "null"],
          "description": "Title for the merge commit message."
        },
        "commit_message": {
          "type": ["string", "null"],
          "description": "Commit message for the merge commit."
        }
      },
      "additionalProperties": false,
      "title": "PullRequestAutoMerge",
      "description": "The status of auto merging a pull request."
    },
    "branch-protection-rule-array": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "array",
      "items": { "type": "string" },
      "title": "Branch Protection Rule Array"
    },
    "branch-protection-rule-boolean": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "boolean",
      "title": "Branch protection rule boolean"
    },
    "branch-protection-rule-enforcement-level": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "string",
      "enum": ["off", "non_admins", "everyone"],
      "title": "Branch protection rule enforcement level"
    },
    "branch-protection-rule-number": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "integer",
      "title": "Branch protection rule number"
    },
    "branch-protection-rule": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "The branch protection rule. Includes a `name` and all the [branch protection settings](https://docs.github.com/en/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#about-branch-protection-settings) applied to branches that match the name. Binary settings are boolean. Multi-level configurations are one of `off`, `non_admins`, or `everyone`. Actor and build lists are arrays of strings.",
      "required": [
        "id",
        "repository_id",
        "name",
        "created_at",
        "updated_at",
        "pull_request_reviews_enforcement_level",
        "required_approving_review_count",
        "dismiss_stale_reviews_on_push",
        "require_code_owner_review",
        "authorized_dismissal_actors_only",
        "ignore_approvals_from_contributors",
        "required_status_checks",
        "required_status_checks_enforcement_level",
        "strict_required_status_checks_policy",
        "signature_requirement_enforcement_level",
        "linear_history_requirement_enforcement_level",
        "admin_enforced",
        "allow_force_pushes_enforcement_level",
        "allow_deletions_enforcement_level",
        "merge_queue_enforcement_level",
        "required_deployments_enforcement_level",
        "required_conversation_resolution_level",
        "authorized_actors_only",
        "authorized_actor_names"
      ],
      "properties": {
        "id": { "type": "integer" },
        "repository_id": { "type": "integer" },
        "name": { "type": "string" },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "pull_request_reviews_enforcement_level": {
          "$ref": "#/definitions/branch-protection-rule-enforcement-level"
        },
        "required_approving_review_count": {
          "$ref": "#/definitions/branch-protection-rule-number"
        },
        "dismiss_stale_reviews_on_push": {
          "$ref": "#/definitions/branch-protection-rule-boolean"
        },
        "require_code_owner_review": {
          "$ref": "#/definitions/branch-protection-rule-boolean"
        },
        "authorized_dismissal_actors_only": {
          "$ref": "#/definitions/branch-protection-rule-boolean"
        },
        "ignore_approvals_from_contributors": {
          "$ref": "#/definitions/branch-protection-rule-boolean"
        },
        "require_last_push_approval": {
          "$ref": "#/definitions/branch-protection-rule-boolean"
        },
        "required_status_checks": {
          "$ref": "#/definitions/branch-protection-rule-array"
        },
        "required_status_checks_enforcement_level": {
          "$ref": "#/definitions/branch-protection-rule-enforcement-level"
        },
        "strict_required_status_checks_policy": {
          "$ref": "#/definitions/branch-protection-rule-boolean"
        },
        "signature_requirement_enforcement_level": {
          "$ref": "#/definitions/branch-protection-rule-enforcement-level"
        },
        "linear_history_requirement_enforcement_level": {
          "$ref": "#/definitions/branch-protection-rule-enforcement-level"
        },
        "admin_enforced": {
          "$ref": "#/definitions/branch-protection-rule-boolean"
        },
        "create_protected": {
          "$ref": "#/definitions/branch-protection-rule-boolean"
        },
        "allow_force_pushes_enforcement_level": {
          "$ref": "#/definitions/branch-protection-rule-enforcement-level"
        },
        "allow_deletions_enforcement_level": {
          "$ref": "#/definitions/branch-protection-rule-enforcement-level"
        },
        "merge_queue_enforcement_level": {
          "$ref": "#/definitions/branch-protection-rule-enforcement-level"
        },
        "required_deployments_enforcement_level": {
          "$ref": "#/definitions/branch-protection-rule-enforcement-level"
        },
        "required_conversation_resolution_level": {
          "$ref": "#/definitions/branch-protection-rule-enforcement-level"
        },
        "authorized_actors_only": {
          "$ref": "#/definitions/branch-protection-rule-boolean"
        },
        "authorized_actor_names": {
          "$ref": "#/definitions/branch-protection-rule-array"
        }
      },
      "additionalProperties": false,
      "title": "branch protection rule"
    },
    "check-run-deployment": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "url",
        "id",
        "node_id",
        "task",
        "original_environment",
        "environment",
        "description",
        "created_at",
        "updated_at",
        "statuses_url",
        "repository_url"
      ],
      "properties": {
        "url": { "type": "string", "format": "uri" },
        "id": { "type": "integer" },
        "node_id": { "type": "string" },
        "task": { "type": "string" },
        "original_environment": { "type": "string" },
        "environment": { "type": "string" },
        "description": { "type": ["string", "null"] },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "statuses_url": { "type": "string", "format": "uri" },
        "repository_url": { "type": "string", "format": "uri" }
      },
      "additionalProperties": false,
      "description": "A deployment to a repository environment. This will only be populated if the check run was created by a GitHub Actions workflow job that references an environment.",
      "title": "Check Run Deployment"
    },
    "check-run-pull-request": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["url", "id", "number", "head", "base"],
      "properties": {
        "url": { "type": "string", "format": "uri" },
        "id": { "type": "integer" },
        "number": { "type": "integer" },
        "head": {
          "type": "object",
          "required": ["ref", "sha", "repo"],
          "properties": {
            "ref": { "type": "string" },
            "sha": { "type": "string" },
            "repo": { "$ref": "#/definitions/repo-ref" }
          },
          "additionalProperties": false
        },
        "base": {
          "type": "object",
          "required": ["ref", "sha", "repo"],
          "properties": {
            "ref": { "type": "string" },
            "sha": { "type": "string" },
            "repo": { "$ref": "#/definitions/repo-ref" }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "title": "Check Run Pull Request"
    },
    "commit-simple": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "id",
        "tree_id",
        "message",
        "timestamp",
        "author",
        "committer"
      ],
      "properties": {
        "id": { "type": "string" },
        "tree_id": { "type": "string" },
        "message": { "type": "string" },
        "timestamp": { "type": "string" },
        "author": { "$ref": "#/definitions/committer" },
        "committer": { "$ref": "#/definitions/committer" }
      },
      "additionalProperties": false,
      "title": "SimpleCommit"
    },
    "commit": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "id",
        "tree_id",
        "distinct",
        "message",
        "timestamp",
        "url",
        "author",
        "committer",
        "added",
        "removed",
        "modified"
      ],
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "tree_id": { "type": "string" },
        "distinct": {
          "type": "boolean",
          "description": "Whether this commit is distinct from any that have been pushed before."
        },
        "message": { "type": "string", "description": "The commit message." },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The ISO 8601 timestamp of the commit."
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL that points to the commit API resource."
        },
        "author": { "$ref": "#/definitions/committer" },
        "committer": { "$ref": "#/definitions/committer" },
        "added": {
          "type": "array",
          "items": { "type": "string" },
          "description": "An array of files added in the commit. For extremely large commits where GitHub is unable to calculate this list in a timely manner, this may be empty even if files were added."
        },
        "modified": {
          "type": "array",
          "items": { "type": "string" },
          "description": "An array of files modified by the commit. For extremely large commits where GitHub is unable to calculate this list in a timely manner, this may be empty even if files were modified."
        },
        "removed": {
          "type": "array",
          "items": { "type": "string" },
          "description": "An array of files removed in the commit. For extremely large commits where GitHub is unable to calculate this list in a timely manner, this may be empty even if files were removed."
        }
      },
      "additionalProperties": false,
      "title": "Commit"
    },
    "committer": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "Metaproperties for Git author/committer information.",
      "required": ["email", "name"],
      "type": "object",
      "properties": {
        "name": { "type": "string", "description": "The git author's name." },
        "email": {
          "description": "The git author's email address.",
          "oneOf": [{ "type": "string" }, { "type": "null" }]
        },
        "date": { "type": "string", "format": "date-time" },
        "username": { "type": "string" }
      },
      "additionalProperties": false,
      "title": "Committer"
    },
    "dependabot-alert-package": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "Details for the vulnerable package.",
      "required": ["name", "ecosystem"],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique package name within its ecosystem."
        },
        "ecosystem": {
          "type": "string",
          "description": "The package's language or package management ecosystem."
        }
      },
      "additionalProperties": false,
      "title": "dependabot_alert package"
    },
    "dependabot-alert": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "A Dependabot alert.",
      "required": [
        "number",
        "state",
        "dependency",
        "security_advisory",
        "security_vulnerability",
        "url",
        "html_url",
        "created_at",
        "updated_at",
        "dismissed_at",
        "dismissed_by",
        "dismissed_reason",
        "dismissed_comment",
        "fixed_at"
      ],
      "properties": {
        "number": {
          "type": "integer",
          "description": "The security alert number."
        },
        "state": {
          "type": "string",
          "description": "The state of the Dependabot alert.",
          "enum": ["dismissed", "fixed", "open", "auto_dismissed"]
        },
        "dependency": {
          "type": "object",
          "description": "Details for the vulnerable dependency.",
          "required": ["package", "manifest_path", "scope"],
          "properties": {
            "package": { "$ref": "#/definitions/dependabot-alert-package" },
            "manifest_path": {
              "type": "string",
              "description": "The full path to the dependency manifest file, relative to the root of the repository."
            },
            "scope": {
              "type": ["string", "null"],
              "description": "The execution scope of the vulnerable dependency.",
              "enum": ["development", "runtime", null]
            }
          },
          "additionalProperties": false
        },
        "security_advisory": {
          "type": "object",
          "description": "Details for the GitHub Security Advisory.",
          "required": [
            "ghsa_id",
            "cve_id",
            "summary",
            "description",
            "vulnerabilities",
            "severity",
            "cvss",
            "cwes",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at"
          ],
          "properties": {
            "ghsa_id": {
              "type": "string",
              "description": "Details for the GitHub Security Advisory."
            },
            "cve_id": {
              "type": ["string", "null"],
              "description": "The unique CVE ID assigned to the advisory."
            },
            "summary": {
              "type": "string",
              "description": "A short, plain text summary of the advisory."
            },
            "description": {
              "type": "string",
              "description": "A long-form Markdown-supported description of the advisory."
            },
            "vulnerabilities": {
              "type": "array",
              "description": "Vulnerable version range information for the advisory.",
              "items": {
                "type": "object",
                "description": "Details pertaining to one vulnerable version range for the advisory.",
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "properties": {
                  "package": {
                    "$ref": "#/definitions/dependabot-alert-package"
                  },
                  "severity": {
                    "type": "string",
                    "description": "The severity of the vulnerability.",
                    "enum": ["low", "medium", "high", "critical"]
                  },
                  "vulnerable_version_range": {
                    "type": "string",
                    "description": "Conditions that identify vulnerable versions of this vulnerability's package."
                  },
                  "first_patched_version": {
                    "type": "object",
                    "description": "Details pertaining to the package version that patches this vulnerability.",
                    "required": ["identifier"],
                    "properties": {
                      "identifier": {
                        "type": "string",
                        "description": "The package version that patches this vulnerability."
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "severity": {
              "type": "string",
              "description": "The severity of the advisory.",
              "enum": ["low", "medium", "high", "critical"]
            },
            "cvss": { "$ref": "#/definitions/security-advisory-cvss" },
            "cwes": {
              "type": "array",
              "description": "Details for the advisory pertaining to Common Weakness Enumeration.",
              "items": { "$ref": "#/definitions/security-advisory-cwes" }
            },
            "identifiers": {
              "type": "array",
              "description": "Values that identify this advisory among security information sources.",
              "items": {
                "type": "object",
                "description": "An advisory identifier.",
                "required": ["type", "value"],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of advisory identifier.",
                    "enum": ["CVE", "GHSA"]
                  },
                  "value": {
                    "type": "string",
                    "description": "The value of the advisory identifer."
                  }
                },
                "additionalProperties": false
              }
            },
            "references": {
              "type": "array",
              "description": "Links to additional advisory information.",
              "items": {
                "type": "object",
                "required": ["url"],
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The URL of the reference.",
                    "format": "uri"
                  }
                },
                "additionalProperties": false
              }
            },
            "published_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time that the advisory was published in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time that the advisory was last modified in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
            },
            "withdrawn_at": {
              "type": ["string", "null"],
              "description": "The time that the advisory was withdrawn in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "format": "date-time"
            }
          },
          "additionalProperties": false
        },
        "security_vulnerability": {
          "type": "object",
          "description": "Details pertaining to one vulnerable version range for the advisory.",
          "required": [
            "package",
            "severity",
            "vulnerable_version_range",
            "first_patched_version"
          ],
          "properties": {
            "package": { "$ref": "#/definitions/dependabot-alert-package" },
            "severity": {
              "type": "string",
              "description": "The severity of the vulnerability.",
              "enum": ["low", "medium", "high", "critical"]
            },
            "vulnerable_version_range": {
              "type": "string",
              "description": "Conditions that identify vulnerable versions of this vulnerability's package."
            },
            "first_patched_version": {
              "type": "object",
              "description": "Details pertaining to the package version that patches this vulnerability.",
              "required": ["identifier"],
              "properties": {
                "identifier": {
                  "type": "string",
                  "description": "The package version that patches this vulnerability."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The REST API URL of the alert resource."
        },
        "html_url": {
          "type": "string",
          "format": "uri",
          "description": "The GitHub URL of the alert resource."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "dismissed_at": {
          "type": ["string", "null"],
          "format": "date-time",
          "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "auto_dismissed_at": {
          "type": ["string", "null"],
          "format": "date-time",
          "description": "The time that the alert was auto-dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "dismissed_by": {
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "dismissed_reason": {
          "type": ["string", "null"],
          "description": "The reason that the alert was dismissed.",
          "enum": [
            "fix_started",
            "inaccurate",
            "no_bandwidth",
            "not_used",
            "tolerable_risk",
            null
          ]
        },
        "dismissed_comment": {
          "type": ["string", "null"],
          "description": "An optional comment associated with the alert's dismissal."
        },
        "fixed_at": {
          "type": ["string", "null"],
          "format": "date-time",
          "description": "The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
        }
      },
      "additionalProperties": false,
      "title": "dependabot alert"
    },
    "deployment-workflow-run": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "id",
        "name",
        "node_id",
        "head_branch",
        "head_sha",
        "run_number",
        "event",
        "status",
        "conclusion",
        "workflow_id",
        "check_suite_id",
        "check_suite_node_id",
        "url",
        "html_url",
        "pull_requests",
        "created_at",
        "updated_at",
        "actor",
        "triggering_actor",
        "run_attempt",
        "run_started_at"
      ],
      "properties": {
        "id": { "type": "integer" },
        "name": { "type": "string" },
        "path": { "type": "string" },
        "display_title": { "type": "string" },
        "node_id": { "type": "string" },
        "head_branch": { "type": "string" },
        "head_sha": { "type": "string" },
        "run_number": { "type": "integer" },
        "event": { "type": "string" },
        "status": {
          "type": "string",
          "enum": ["requested", "in_progress", "completed", "queued"]
        },
        "conclusion": {
          "type": ["string", "null"],
          "enum": [
            "success",
            "failure",
            "neutral",
            "cancelled",
            "timed_out",
            "action_required",
            "stale",
            null
          ]
        },
        "workflow_id": { "type": "integer" },
        "check_suite_id": { "type": "integer" },
        "check_suite_node_id": { "type": "string" },
        "url": { "type": "string", "format": "uri" },
        "html_url": { "type": "string", "format": "uri" },
        "pull_requests": {
          "type": "array",
          "items": { "$ref": "#/definitions/check-run-pull-request" }
        },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "actor": { "$ref": "#/definitions/user" },
        "triggering_actor": { "$ref": "#/definitions/user" },
        "run_attempt": { "type": "integer" },
        "run_started_at": { "type": "string", "format": "date-time" },
        "referenced_workflows": {
          "type": "array",
          "items": { "$ref": "#/definitions/referenced-workflow" }
        }
      },
      "additionalProperties": false,
      "title": "Deployment Workflow Run"
    },
    "deployment": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "url",
        "id",
        "node_id",
        "sha",
        "ref",
        "task",
        "payload",
        "original_environment",
        "environment",
        "description",
        "creator",
        "created_at",
        "updated_at",
        "statuses_url",
        "repository_url"
      ],
      "type": "object",
      "properties": {
        "url": { "type": "string", "format": "uri" },
        "id": {
          "type": "integer",
          "description": "Unique identifier of the deployment"
        },
        "node_id": { "type": "string" },
        "sha": { "type": "string" },
        "ref": {
          "type": "string",
          "description": "The ref to deploy. This can be a branch, tag, or sha."
        },
        "task": {
          "type": "string",
          "description": "Parameter to specify a task to execute"
        },
        "payload": {
          "type": "object",
          "required": [],
          "additionalProperties": true
        },
        "original_environment": { "type": "string" },
        "environment": {
          "type": "string",
          "description": "Name of the target deployment environment."
        },
        "transient_environment": {
          "type": "boolean",
          "description": "Specifies if the given environment will no longer exist at some point in the future. Default: false."
        },
        "production_environment": {
          "type": "boolean",
          "description": "Specifies if the given environment is one that end-users directly interact with. Default: false."
        },
        "description": { "type": ["string", "null"] },
        "creator": { "$ref": "#/definitions/user" },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "statuses_url": { "type": "string", "format": "uri" },
        "repository_url": { "type": "string", "format": "uri" },
        "performed_via_github_app": {
          "oneOf": [{ "$ref": "#/definitions/app" }, { "type": "null" }]
        }
      },
      "additionalProperties": false,
      "description": "The [deployment](https://docs.github.com/en/rest/reference/deployments#list-deployments).",
      "title": "Deployment"
    },
    "discussion": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "repository_url",
        "category",
        "answer_html_url",
        "answer_chosen_at",
        "answer_chosen_by",
        "html_url",
        "id",
        "node_id",
        "number",
        "title",
        "user",
        "state",
        "locked",
        "comments",
        "created_at",
        "updated_at",
        "author_association",
        "active_lock_reason",
        "body"
      ],
      "type": "object",
      "properties": {
        "repository_url": { "type": "string" },
        "category": {
          "type": "object",
          "required": [
            "id",
            "repository_id",
            "emoji",
            "name",
            "description",
            "created_at",
            "updated_at",
            "slug",
            "is_answerable"
          ],
          "properties": {
            "id": { "type": "integer" },
            "repository_id": { "type": "integer" },
            "emoji": { "type": "string" },
            "name": { "type": "string" },
            "description": { "type": "string" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "slug": { "type": "string" },
            "is_answerable": { "type": "boolean" }
          },
          "additionalProperties": false
        },
        "answer_html_url": { "type": ["string", "null"] },
        "answer_chosen_at": {
          "oneOf": [
            { "type": "string", "format": "date-time" },
            { "type": "null" }
          ]
        },
        "answer_chosen_by": {
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "html_url": { "type": "string" },
        "id": { "type": "integer" },
        "node_id": { "type": "string" },
        "number": { "type": "integer" },
        "title": {
          "type": "string",
          "description": "The discussion post's title."
        },
        "user": { "$ref": "#/definitions/user" },
        "state": { "type": "string", "enum": ["open", "locked", "converting"] },
        "locked": { "type": "boolean" },
        "comments": { "type": "integer" },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "author_association": { "$ref": "#/definitions/author_association" },
        "active_lock_reason": { "type": ["string", "null"] },
        "body": {
          "type": "string",
          "description": "The discussion post's body text."
        },
        "reactions": { "$ref": "#/definitions/reactions" }
      },
      "additionalProperties": false,
      "title": "Discussion"
    },
    "github-org": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "login",
        "id",
        "node_id",
        "avatar_url",
        "gravatar_id",
        "url",
        "html_url",
        "followers_url",
        "following_url",
        "gists_url",
        "starred_url",
        "subscriptions_url",
        "organizations_url",
        "repos_url",
        "events_url",
        "received_events_url",
        "type",
        "site_admin"
      ],
      "properties": {
        "login": { "type": "string", "const": "github" },
        "id": { "type": "integer", "const": 9919 },
        "node_id": {
          "type": "string",
          "const": "MDEyOk9yZ2FuaXphdGlvbjk5MTk="
        },
        "name": { "type": "string", "const": "GitHub" },
        "email": { "type": "null" },
        "avatar_url": {
          "type": "string",
          "format": "uri",
          "const": "https://avatars.githubusercontent.com/u/9919?v=4"
        },
        "gravatar_id": { "type": "string", "const": "" },
        "url": {
          "type": "string",
          "format": "uri",
          "const": "https://api.github.com/users/github"
        },
        "html_url": {
          "type": "string",
          "format": "uri",
          "const": "https://github.com/github"
        },
        "followers_url": {
          "type": "string",
          "format": "uri",
          "const": "https://api.github.com/users/github/followers"
        },
        "following_url": {
          "type": "string",
          "format": "uri-template",
          "const": "https://api.github.com/users/github/following{/other_user}"
        },
        "gists_url": {
          "type": "string",
          "format": "uri-template",
          "const": "https://api.github.com/users/github/gists{/gist_id}"
        },
        "starred_url": {
          "type": "string",
          "format": "uri-template",
          "const": "https://api.github.com/users/github/starred{/owner}{/repo}"
        },
        "subscriptions_url": {
          "type": "string",
          "format": "uri",
          "const": "https://api.github.com/users/github/subscriptions"
        },
        "organizations_url": {
          "type": "string",
          "format": "uri",
          "const": "https://api.github.com/users/github/orgs"
        },
        "repos_url": {
          "type": "string",
          "format": "uri",
          "const": "https://api.github.com/users/github/repos"
        },
        "events_url": {
          "type": "string",
          "format": "uri-template",
          "const": "https://api.github.com/users/github/events{/privacy}"
        },
        "received_events_url": {
          "type": "string",
          "format": "uri",
          "const": "https://api.github.com/users/github/received_events"
        },
        "type": { "type": "string", "const": "Organization" },
        "site_admin": { "type": "boolean", "const": false }
      },
      "additionalProperties": false,
      "title": "GitHub Org"
    },
    "installation-lite": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "Installation",
      "type": "object",
      "required": ["id", "node_id"],
      "properties": {
        "id": {
          "type": "integer",
          "description": "The ID of the installation."
        },
        "node_id": { "type": "string" }
      },
      "additionalProperties": false,
      "title": "InstallationLite"
    },
    "installation": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "The GitHub App installation.",
      "required": [
        "id",
        "account",
        "repository_selection",
        "access_tokens_url",
        "repositories_url",
        "html_url",
        "app_id",
        "target_id",
        "target_type",
        "permissions",
        "events",
        "created_at",
        "updated_at",
        "single_file_name",
        "suspended_at",
        "suspended_by"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The ID of the installation."
        },
        "account": { "$ref": "#/definitions/user" },
        "repository_selection": {
          "type": "string",
          "enum": ["all", "selected"],
          "description": "Describe whether all repositories have been selected or there's a selection involved"
        },
        "access_tokens_url": { "type": "string", "format": "uri" },
        "repositories_url": { "type": "string", "format": "uri" },
        "html_url": { "type": "string", "format": "uri" },
        "app_id": { "type": "integer" },
        "app_slug": { "type": "string" },
        "target_id": {
          "type": "integer",
          "description": "The ID of the user or organization this token is being scoped to."
        },
        "target_type": { "type": "string", "enum": ["User", "Organization"] },
        "permissions": {
          "type": "object",
          "required": [],
          "properties": {
            "actions": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token for GitHub Actions workflows, workflow runs, and artifacts."
            },
            "administration": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token for repository creation, deletion, settings, teams, and collaborators creation."
            },
            "blocking": { "type": "string", "enum": ["read", "write"] },
            "checks": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token for checks on code."
            },
            "content_references": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "contents": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token for repository contents, commits, branches, downloads, releases, and merges."
            },
            "deployments": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token for deployments and deployment statuses."
            },
            "discussions": { "type": "string", "enum": ["read", "write"] },
            "emails": { "type": "string", "enum": ["read", "write"] },
            "environments": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token for managing repository environments."
            },
            "issues": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token for issues and related comments, assignees, labels, and milestones."
            },
            "members": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token for organization teams and members."
            },
            "merge_queues": { "type": "string", "enum": ["read", "write"] },
            "metadata": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to search repositories, list collaborators, and access repository metadata."
            },
            "organization_administration": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to manage access to an organization."
            },
            "organization_events": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "organization_hooks": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to manage the post-receive hooks for an organization."
            },
            "organization_packages": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token for organization packages published to GitHub Packages."
            },
            "organization_plan": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token for viewing an organization's plan."
            },
            "organization_projects": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to manage organization projects and projects beta (where available)."
            },
            "organization_secrets": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to manage organization secrets."
            },
            "organization_self_hosted_runners": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to view and manage GitHub Actions self-hosted runners available to an organization."
            },
            "organization_user_blocking": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to view and manage users blocked by the organization."
            },
            "packages": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token for packages published to GitHub Packages."
            },
            "pages": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds."
            },
            "pull_requests": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token for pull requests and related comments, assignees, labels, milestones, and merges."
            },
            "repository_hooks": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to manage the post-receive hooks for a repository."
            },
            "repository_projects": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to manage repository projects, columns, and cards."
            },
            "secret_scanning_alerts": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to view and manage secret scanning alerts."
            },
            "secrets": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to manage repository secrets."
            },
            "security_events": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to view and manage security events like code scanning alerts."
            },
            "security_scanning_alert": {
              "type": "string",
              "enum": ["read", "write"]
            },
            "single_file": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to manage just a single file."
            },
            "statuses": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token for commit statuses."
            },
            "team_discussions": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to manage team discussions and related comments."
            },
            "vulnerability_alerts": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to manage Dependabot alerts."
            },
            "workflows": {
              "type": "string",
              "enum": ["read", "write"],
              "description": "The level of permission granted to the access token to update GitHub Actions workflow files."
            }
          },
          "additionalProperties": false
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "branch_protection_rule",
              "check_run",
              "check_suite",
              "code_scanning_alert",
              "commit_comment",
              "create",
              "delete",
              "deployment",
              "deployment_review",
              "deployment_status",
              "deploy_key",
              "discussion",
              "discussion_comment",
              "fork",
              "gollum",
              "issues",
              "issue_comment",
              "label",
              "member",
              "membership",
              "merge_group",
              "merge_queue_entry",
              "milestone",
              "organization",
              "org_block",
              "page_build",
              "project",
              "projects_v2_item",
              "project_card",
              "project_column",
              "public",
              "pull_request",
              "pull_request_review",
              "pull_request_review_comment",
              "pull_request_review_thread",
              "push",
              "registry_package",
              "release",
              "repository",
              "repository_dispatch",
              "secret_scanning_alert",
              "secret_scanning_alert_location",
              "security_and_analysis",
              "star",
              "status",
              "team",
              "team_add",
              "watch",
              "workflow_dispatch",
              "workflow_job",
              "workflow_run"
            ]
          }
        },
        "created_at": {
          "oneOf": [
            { "type": "string", "format": "date-time" },
            { "type": "integer" }
          ]
        },
        "updated_at": {
          "oneOf": [
            { "type": "string", "format": "date-time" },
            { "type": "integer" }
          ]
        },
        "single_file_name": { "type": ["string", "null"] },
        "has_multiple_single_files": { "type": "boolean" },
        "single_file_paths": { "type": "array", "items": { "type": "string" } },
        "suspended_by": {
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "suspended_at": { "type": ["string", "null"], "format": "date-time" }
      },
      "additionalProperties": false,
      "title": "Installation"
    },
    "issue-comment": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "url",
        "html_url",
        "issue_url",
        "id",
        "node_id",
        "user",
        "created_at",
        "updated_at",
        "author_association",
        "performed_via_github_app",
        "body",
        "reactions"
      ],
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL for the issue comment"
        },
        "html_url": { "type": "string", "format": "uri" },
        "issue_url": { "type": "string", "format": "uri" },
        "id": {
          "type": "integer",
          "description": "Unique identifier of the issue comment"
        },
        "node_id": { "type": "string" },
        "user": { "$ref": "#/definitions/user" },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "author_association": { "$ref": "#/definitions/author_association" },
        "body": {
          "type": "string",
          "description": "Contents of the issue comment"
        },
        "reactions": { "$ref": "#/definitions/reactions" },
        "performed_via_github_app": {
          "oneOf": [{ "$ref": "#/definitions/app" }, { "type": "null" }]
        }
      },
      "additionalProperties": false,
      "description": "The [comment](https://docs.github.com/en/rest/reference/issues#comments) itself.",
      "title": "issue comment"
    },
    "issue": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "The [issue](https://docs.github.com/en/rest/reference/issues) itself.",
      "required": [
        "url",
        "repository_url",
        "labels_url",
        "comments_url",
        "events_url",
        "html_url",
        "id",
        "node_id",
        "number",
        "title",
        "user",
        "assignees",
        "milestone",
        "comments",
        "created_at",
        "updated_at",
        "closed_at",
        "author_association",
        "active_lock_reason",
        "body",
        "reactions"
      ],
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL for the issue"
        },
        "repository_url": { "type": "string", "format": "uri" },
        "labels_url": { "type": "string", "format": "uri-template" },
        "comments_url": { "type": "string", "format": "uri" },
        "events_url": { "type": "string", "format": "uri" },
        "html_url": { "type": "string", "format": "uri" },
        "id": { "type": "integer" },
        "node_id": { "type": "string" },
        "number": {
          "type": "integer",
          "description": "Number uniquely identifying the issue within its repository"
        },
        "title": { "type": "string", "description": "Title of the issue" },
        "user": { "$ref": "#/definitions/user" },
        "labels": {
          "type": "array",
          "items": { "$ref": "#/definitions/label" }
        },
        "state": {
          "type": "string",
          "enum": ["open", "closed"],
          "description": "State of the issue; either 'open' or 'closed'"
        },
        "locked": { "type": "boolean" },
        "assignee": {
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "assignees": {
          "type": "array",
          "items": { "$ref": "#/definitions/user" }
        },
        "milestone": {
          "oneOf": [{ "$ref": "#/definitions/milestone" }, { "type": "null" }]
        },
        "comments": { "type": "integer" },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "closed_at": { "type": ["string", "null"], "format": "date-time" },
        "author_association": { "$ref": "#/definitions/author_association" },
        "active_lock_reason": {
          "type": ["string", "null"],
          "enum": ["resolved", "off-topic", "too heated", "spam", null]
        },
        "draft": { "type": "boolean" },
        "performed_via_github_app": {
          "oneOf": [{ "$ref": "#/definitions/app" }, { "type": "null" }]
        },
        "pull_request": {
          "type": "object",
          "properties": {
            "url": { "type": "string", "format": "uri" },
            "html_url": { "type": "string", "format": "uri" },
            "diff_url": { "type": "string", "format": "uri" },
            "patch_url": { "type": "string", "format": "uri" },
            "merged_at": { "type": ["string", "null"], "format": "date-time" }
          },
          "additionalProperties": false
        },
        "body": {
          "type": ["string", "null"],
          "description": "Contents of the issue"
        },
        "reactions": { "$ref": "#/definitions/reactions" },
        "timeline_url": { "type": "string", "format": "uri" },
        "state_reason": {
          "type": ["string", "null"],
          "description": "The reason for the current state"
        }
      },
      "additionalProperties": false,
      "title": "Issue"
    },
    "label": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "id",
        "node_id",
        "url",
        "name",
        "color",
        "default",
        "description"
      ],
      "properties": {
        "id": { "type": "integer" },
        "node_id": { "type": "string" },
        "url": {
          "description": "URL for the label",
          "type": "string",
          "format": "uri"
        },
        "name": { "description": "The name of the label.", "type": "string" },
        "description": { "type": ["string", "null"] },
        "color": {
          "description": "6-character hex code, without the leading #, identifying the color",
          "type": "string"
        },
        "default": { "type": "boolean" }
      },
      "additionalProperties": false,
      "title": "Label"
    },
    "license": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["key", "name", "spdx_id", "url", "node_id"],
      "properties": {
        "key": { "type": "string" },
        "name": { "type": "string" },
        "spdx_id": { "type": "string" },
        "url": { "type": ["string", "null"], "format": "uri" },
        "node_id": { "type": "string" }
      },
      "additionalProperties": false,
      "title": "License"
    },
    "link": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": ["href"],
      "type": "object",
      "properties": { "href": { "type": "string", "format": "uri-template" } },
      "additionalProperties": false,
      "title": "Link"
    },
    "marketplace-purchase": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "account",
        "billing_cycle",
        "unit_count",
        "on_free_trial",
        "free_trial_ends_on",
        "plan"
      ],
      "type": "object",
      "properties": {
        "account": {
          "type": "object",
          "required": [
            "type",
            "id",
            "node_id",
            "login",
            "organization_billing_email"
          ],
          "properties": {
            "type": { "type": "string" },
            "id": { "type": "integer" },
            "node_id": { "type": "string" },
            "login": { "type": "string" },
            "organization_billing_email": { "type": "string" }
          },
          "additionalProperties": false
        },
        "billing_cycle": { "type": "string" },
        "unit_count": { "type": "integer" },
        "on_free_trial": { "type": "boolean" },
        "free_trial_ends_on": {
          "oneOf": [
            { "type": "string", "format": "date-time" },
            { "type": "null" }
          ]
        },
        "next_billing_date": { "type": "string" },
        "plan": {
          "type": "object",
          "required": [
            "id",
            "name",
            "description",
            "monthly_price_in_cents",
            "yearly_price_in_cents",
            "price_model",
            "has_free_trial",
            "unit_name",
            "bullets"
          ],
          "properties": {
            "id": { "type": "integer" },
            "name": { "type": "string" },
            "description": { "type": "string" },
            "monthly_price_in_cents": { "type": "integer" },
            "yearly_price_in_cents": { "type": "integer" },
            "price_model": { "type": "string" },
            "has_free_trial": { "type": "boolean" },
            "unit_name": { "type": ["string", "null"] },
            "bullets": { "type": "array", "items": { "type": "string" } }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "title": "Marketplace Purchase"
    },
    "membership": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": ["url", "state", "role", "organization_url", "user"],
      "type": "object",
      "description": "The membership between the user and the organization. Not present when the action is `member_invited`.",
      "properties": {
        "url": { "type": "string", "format": "uri" },
        "state": {
          "type": "string",
          "description": "The state of the user's membership in the team."
        },
        "role": {
          "type": "string",
          "description": "The role of the user in the team."
        },
        "organization_url": { "type": "string", "format": "uri" },
        "user": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "Membership"
    },
    "milestone": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "A collection of related issues and pull requests.",
      "required": [
        "url",
        "html_url",
        "labels_url",
        "id",
        "node_id",
        "number",
        "title",
        "description",
        "creator",
        "open_issues",
        "closed_issues",
        "state",
        "created_at",
        "updated_at",
        "due_on",
        "closed_at"
      ],
      "type": "object",
      "properties": {
        "url": { "type": "string", "format": "uri" },
        "html_url": { "type": "string", "format": "uri" },
        "labels_url": { "type": "string", "format": "uri" },
        "id": { "type": "integer" },
        "node_id": { "type": "string" },
        "number": {
          "type": "integer",
          "description": "The number of the milestone."
        },
        "title": {
          "type": "string",
          "description": "The title of the milestone."
        },
        "description": { "type": ["string", "null"] },
        "creator": { "$ref": "#/definitions/user" },
        "open_issues": { "type": "integer" },
        "closed_issues": { "type": "integer" },
        "state": {
          "type": "string",
          "enum": ["open", "closed"],
          "description": "The state of the milestone."
        },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "due_on": { "type": ["string", "null"], "format": "date-time" },
        "closed_at": { "type": ["string", "null"], "format": "date-time" }
      },
      "additionalProperties": false,
      "title": "Milestone"
    },
    "organization": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "login",
        "id",
        "node_id",
        "url",
        "repos_url",
        "events_url",
        "hooks_url",
        "issues_url",
        "members_url",
        "public_members_url",
        "avatar_url",
        "description"
      ],
      "properties": {
        "login": { "type": "string" },
        "id": { "type": "integer" },
        "node_id": { "type": "string" },
        "url": { "type": "string", "format": "uri" },
        "html_url": { "type": "string", "format": "uri" },
        "repos_url": { "type": "string", "format": "uri" },
        "events_url": { "type": "string", "format": "uri" },
        "hooks_url": { "type": "string", "format": "uri" },
        "issues_url": { "type": "string", "format": "uri" },
        "members_url": { "type": "string", "format": "uri-template" },
        "public_members_url": { "type": "string", "format": "uri-template" },
        "avatar_url": { "type": "string", "format": "uri" },
        "description": { "type": ["string", "null"] }
      },
      "additionalProperties": false,
      "title": "Organization"
    },
    "package-npm-metadata": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "version": { "type": "string" },
        "npm_user": { "type": "string" },
        "author": {
          "oneOf": [
            { "type": "object", "additionalProperties": { "type": "string" } },
            { "type": "null" }
          ]
        },
        "bugs": {
          "oneOf": [
            { "type": "object", "additionalProperties": { "type": "string" } },
            { "type": "null" }
          ]
        },
        "dependencies": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "dev_dependencies": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "peer_dependencies": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "optional_dependencies": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "description": { "type": "string" },
        "dist": {
          "oneOf": [
            { "type": "object", "additionalProperties": { "type": "string" } },
            { "type": "null" }
          ]
        },
        "git_head": { "type": "string" },
        "homepage": { "type": "string" },
        "license": { "type": "string" },
        "main": { "type": "string" },
        "repository": {
          "oneOf": [
            { "type": "object", "additionalProperties": { "type": "string" } },
            { "type": "null" }
          ]
        },
        "scripts": { "type": "object" },
        "id": { "type": "string" },
        "node_version": { "type": "string" },
        "npm_version": { "type": "string" },
        "has_shrinkwrap": { "type": "boolean" },
        "maintainers": { "type": "array", "items": { "type": "object" } },
        "contributors": { "type": "array", "items": { "type": "object" } },
        "engines": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "keywords": { "type": "array", "items": { "type": "string" } },
        "files": { "type": "array", "items": { "type": "string" } },
        "bin": { "type": "object" },
        "man": { "type": "object" },
        "directories": {
          "oneOf": [
            { "type": "object", "additionalProperties": { "type": "string" } },
            { "type": "null" }
          ]
        },
        "os": { "type": "array", "items": { "type": "string" } },
        "cpu": { "type": "array", "items": { "type": "string" } },
        "readme": { "type": "string" },
        "installation_command": { "type": "string" },
        "release_id": { "type": "integer" },
        "commit_oid": { "type": "string" },
        "published_via_actions": { "type": "boolean" },
        "deleted_by_id": { "type": "integer" }
      },
      "additionalProperties": false,
      "title": "Package NPM Metadata"
    },
    "package-nuget-metadata": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [],
      "properties": {
        "id": { "oneOf": [{ "type": "string" }, { "type": "integer" }] },
        "name": { "type": "string" },
        "value": {
          "oneOf": [
            { "type": "boolean" },
            { "type": "string" },
            { "type": "integer" },
            {
              "type": "object",
              "properties": {
                "url": { "type": "string" },
                "branch": { "type": "string" },
                "commit": { "type": "string" },
                "type": { "type": "string" }
              },
              "additionalProperties": false
            }
          ]
        }
      },
      "additionalProperties": false,
      "title": "Package Nuget Metadata"
    },
    "project-card": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "url",
        "project_url",
        "column_url",
        "column_id",
        "id",
        "node_id",
        "note",
        "archived",
        "creator",
        "created_at",
        "updated_at"
      ],
      "type": "object",
      "properties": {
        "url": { "type": "string", "format": "uri" },
        "project_url": { "type": "string", "format": "uri" },
        "column_url": { "type": "string", "format": "uri" },
        "column_id": { "type": "integer" },
        "id": { "type": "integer", "description": "The project card's ID" },
        "node_id": { "type": "string" },
        "note": { "type": ["string", "null"] },
        "archived": {
          "type": "boolean",
          "description": "Whether or not the card is archived"
        },
        "creator": { "$ref": "#/definitions/user" },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "content_url": { "type": "string", "format": "uri" },
        "after_id": {
          "oneOf": [
            { "type": "string" },
            { "type": "number" },
            { "type": "null" }
          ]
        }
      },
      "additionalProperties": false,
      "title": "Project Card"
    },
    "project-column": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "url",
        "project_url",
        "cards_url",
        "id",
        "node_id",
        "name",
        "created_at",
        "updated_at"
      ],
      "type": "object",
      "properties": {
        "url": { "type": "string", "format": "uri" },
        "project_url": { "type": "string", "format": "uri" },
        "cards_url": { "type": "string", "format": "uri" },
        "id": {
          "type": "integer",
          "description": "The unique identifier of the project column"
        },
        "node_id": { "type": "string" },
        "name": {
          "type": "string",
          "description": "Name of the project column"
        },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" }
      },
      "additionalProperties": false,
      "title": "Project Column"
    },
    "project": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "owner_url",
        "url",
        "html_url",
        "columns_url",
        "id",
        "node_id",
        "name",
        "body",
        "number",
        "state",
        "creator",
        "created_at",
        "updated_at"
      ],
      "type": "object",
      "properties": {
        "owner_url": { "type": "string", "format": "uri" },
        "url": { "type": "string", "format": "uri" },
        "html_url": { "type": "string", "format": "uri" },
        "columns_url": { "type": "string", "format": "uri" },
        "id": { "type": "integer" },
        "node_id": { "type": "string" },
        "name": { "type": "string", "description": "Name of the project" },
        "body": {
          "type": ["string", "null"],
          "description": "Body of the project"
        },
        "number": { "type": "integer" },
        "state": {
          "type": "string",
          "enum": ["open", "closed"],
          "description": "State of the project; either 'open' or 'closed'"
        },
        "creator": { "$ref": "#/definitions/user" },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" }
      },
      "additionalProperties": false,
      "title": "Project"
    },
    "projects_v2_item": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "The project item itself. To find more information about the project item, you can use `node_id` (the node ID of the project item) and `project_node_id` (the node ID of the project) to query information in the GraphQL API. For more information, see \"[Using the API to manage projects](https://docs.github.com/en/issues/trying-out-the-new-projects-experience/using-the-api-to-manage-projects).\"",
      "type": "object",
      "required": [
        "id",
        "node_id",
        "project_node_id",
        "content_node_id",
        "content_type",
        "creator",
        "created_at",
        "updated_at",
        "archived_at"
      ],
      "properties": {
        "id": { "type": "number" },
        "node_id": { "type": "string" },
        "project_node_id": { "type": "string" },
        "content_node_id": { "type": "string" },
        "content_type": {
          "type": "string",
          "enum": ["DraftIssue", "Issue", "PullRequest"]
        },
        "creator": { "$ref": "#/definitions/user" },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "archived_at": { "type": ["string", "null"], "format": "date-time" }
      },
      "additionalProperties": false,
      "title": "Projects v2 Item"
    },
    "pull-request-review-comment": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "url",
        "pull_request_review_id",
        "id",
        "node_id",
        "diff_hunk",
        "path",
        "position",
        "original_position",
        "commit_id",
        "original_commit_id",
        "user",
        "body",
        "created_at",
        "updated_at",
        "html_url",
        "pull_request_url",
        "author_association",
        "_links",
        "start_line",
        "original_start_line",
        "original_line",
        "line",
        "start_side",
        "side",
        "reactions"
      ],
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "URL for the pull request review comment",
          "format": "uri"
        },
        "pull_request_review_id": {
          "type": "integer",
          "description": "The ID of the pull request review to which the comment belongs."
        },
        "id": {
          "type": "integer",
          "description": "The ID of the pull request review comment."
        },
        "node_id": {
          "type": "string",
          "description": "The node ID of the pull request review comment."
        },
        "diff_hunk": {
          "type": "string",
          "description": "The diff of the line that the comment refers to."
        },
        "path": {
          "type": "string",
          "description": "The relative path of the file to which the comment applies."
        },
        "position": {
          "type": ["integer", "null"],
          "description": "The line index in the diff to which the comment applies."
        },
        "original_position": {
          "type": "integer",
          "description": "The index of the original line in the diff to which the comment applies."
        },
        "commit_id": {
          "type": "string",
          "description": "The SHA of the commit to which the comment applies."
        },
        "original_commit_id": {
          "type": "string",
          "description": "The SHA of the original commit to which the comment applies."
        },
        "user": { "$ref": "#/definitions/user" },
        "body": { "type": "string", "description": "The text of the comment." },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "html_url": {
          "type": "string",
          "format": "uri",
          "description": "HTML URL for the pull request review comment."
        },
        "pull_request_url": {
          "type": "string",
          "format": "uri",
          "description": "URL for the pull request that the review comment belongs to."
        },
        "author_association": { "$ref": "#/definitions/author_association" },
        "_links": {
          "type": "object",
          "required": ["self", "html", "pull_request"],
          "properties": {
            "self": { "$ref": "#/definitions/link" },
            "html": { "$ref": "#/definitions/link" },
            "pull_request": { "$ref": "#/definitions/link" }
          },
          "additionalProperties": false
        },
        "reactions": { "$ref": "#/definitions/reactions" },
        "start_line": {
          "type": ["integer", "null"],
          "description": "The first line of the range for a multi-line comment."
        },
        "original_start_line": {
          "type": ["integer", "null"],
          "description": "The first line of the range for a multi-line comment."
        },
        "start_side": {
          "type": ["string", "null"],
          "enum": ["LEFT", "RIGHT", null],
          "default": "RIGHT",
          "description": "The side of the first line of the range for a multi-line comment."
        },
        "line": {
          "type": ["integer", "null"],
          "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment"
        },
        "original_line": {
          "type": "integer",
          "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment"
        },
        "side": {
          "type": "string",
          "enum": ["LEFT", "RIGHT"],
          "description": "The side of the first line of the range for a multi-line comment."
        },
        "in_reply_to_id": {
          "type": "integer",
          "description": "The comment ID to reply to."
        },
        "subject_type": {
          "description": "The level at which the comment is targeted, can be a diff line or a file.",
          "type": "string",
          "enum": ["line", "file"]
        }
      },
      "additionalProperties": false,
      "description": "The [comment](https://docs.github.com/en/rest/reference/pulls#comments) itself.",
      "title": "Pull Request Review Comment"
    },
    "pull-request-review": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "The review that was affected.",
      "required": [
        "id",
        "node_id",
        "user",
        "body",
        "commit_id",
        "submitted_at",
        "state",
        "html_url",
        "pull_request_url",
        "author_association",
        "_links"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier of the review"
        },
        "node_id": { "type": "string" },
        "user": { "$ref": "#/definitions/user" },
        "body": {
          "type": ["string", "null"],
          "description": "The text of the review."
        },
        "commit_id": {
          "type": "string",
          "description": "A commit SHA for the review."
        },
        "submitted_at": { "type": ["string", "null"], "format": "date-time" },
        "state": {
          "type": "string",
          "enum": ["commented", "changes_requested", "approved", "dismissed"]
        },
        "html_url": { "type": "string", "format": "uri" },
        "pull_request_url": { "type": "string", "format": "uri" },
        "author_association": { "$ref": "#/definitions/author_association" },
        "_links": {
          "type": "object",
          "required": ["html", "pull_request"],
          "properties": {
            "html": { "$ref": "#/definitions/link" },
            "pull_request": { "$ref": "#/definitions/link" }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "title": "Pull Request Review"
    },
    "pull-request": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "url",
        "id",
        "node_id",
        "html_url",
        "diff_url",
        "patch_url",
        "issue_url",
        "number",
        "state",
        "locked",
        "title",
        "user",
        "body",
        "created_at",
        "updated_at",
        "closed_at",
        "merged_at",
        "merge_commit_sha",
        "assignee",
        "assignees",
        "requested_reviewers",
        "requested_teams",
        "labels",
        "milestone",
        "commits_url",
        "review_comments_url",
        "review_comment_url",
        "comments_url",
        "statuses_url",
        "head",
        "base",
        "_links",
        "author_association",
        "auto_merge",
        "active_lock_reason",
        "draft",
        "merged",
        "mergeable",
        "rebaseable",
        "mergeable_state",
        "merged_by",
        "comments",
        "review_comments",
        "maintainer_can_modify",
        "commits",
        "additions",
        "deletions",
        "changed_files"
      ],
      "type": "object",
      "properties": {
        "url": { "type": "string", "format": "uri" },
        "id": { "type": "integer" },
        "node_id": { "type": "string" },
        "html_url": { "type": "string", "format": "uri" },
        "diff_url": { "type": "string", "format": "uri" },
        "patch_url": { "type": "string", "format": "uri" },
        "issue_url": { "type": "string", "format": "uri" },
        "number": {
          "type": "integer",
          "description": "Number uniquely identifying the pull request within its repository."
        },
        "state": {
          "type": "string",
          "enum": ["open", "closed"],
          "description": "State of this Pull Request. Either `open` or `closed`."
        },
        "locked": { "type": "boolean" },
        "title": {
          "type": "string",
          "description": "The title of the pull request."
        },
        "user": { "$ref": "#/definitions/user" },
        "body": { "type": ["string", "null"] },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "closed_at": { "type": ["string", "null"], "format": "date-time" },
        "merged_at": { "type": ["string", "null"], "format": "date-time" },
        "merge_commit_sha": { "type": ["string", "null"] },
        "assignee": {
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "assignees": {
          "type": "array",
          "items": { "$ref": "#/definitions/user" }
        },
        "requested_reviewers": {
          "type": "array",
          "items": {
            "oneOf": [
              { "$ref": "#/definitions/user" },
              { "$ref": "#/definitions/team" }
            ]
          }
        },
        "requested_teams": {
          "type": "array",
          "items": { "$ref": "#/definitions/team" }
        },
        "labels": {
          "type": "array",
          "items": { "$ref": "#/definitions/label" }
        },
        "milestone": {
          "oneOf": [{ "$ref": "#/definitions/milestone" }, { "type": "null" }]
        },
        "commits_url": { "type": "string", "format": "uri" },
        "review_comments_url": { "type": "string", "format": "uri" },
        "review_comment_url": { "type": "string", "format": "uri-template" },
        "comments_url": { "type": "string", "format": "uri" },
        "statuses_url": { "type": "string", "format": "uri" },
        "head": {
          "type": "object",
          "required": ["label", "ref", "sha", "user", "repo"],
          "properties": {
            "label": { "type": "string" },
            "ref": { "type": "string" },
            "sha": { "type": "string" },
            "user": { "$ref": "#/definitions/user" },
            "repo": {
              "oneOf": [
                { "$ref": "#/definitions/repository" },
                { "type": "null" }
              ]
            }
          },
          "additionalProperties": false
        },
        "base": {
          "type": "object",
          "required": ["label", "ref", "sha", "user", "repo"],
          "properties": {
            "label": { "type": "string" },
            "ref": { "type": "string" },
            "sha": { "type": "string" },
            "user": { "$ref": "#/definitions/user" },
            "repo": { "$ref": "#/definitions/repository" }
          },
          "additionalProperties": false
        },
        "_links": {
          "type": "object",
          "required": [
            "self",
            "html",
            "issue",
            "comments",
            "review_comments",
            "review_comment",
            "commits",
            "statuses"
          ],
          "properties": {
            "self": { "$ref": "#/definitions/link" },
            "html": { "$ref": "#/definitions/link" },
            "issue": { "$ref": "#/definitions/link" },
            "comments": { "$ref": "#/definitions/link" },
            "review_comments": { "$ref": "#/definitions/link" },
            "review_comment": { "$ref": "#/definitions/link" },
            "commits": { "$ref": "#/definitions/link" },
            "statuses": { "$ref": "#/definitions/link" }
          },
          "additionalProperties": false
        },
        "author_association": { "$ref": "#/definitions/author_association" },
        "auto_merge": {
          "oneOf": [{ "$ref": "#/definitions/auto-merge" }, { "type": "null" }]
        },
        "active_lock_reason": {
          "type": ["string", "null"],
          "enum": ["resolved", "off-topic", "too heated", "spam", null]
        },
        "draft": {
          "type": "boolean",
          "description": "Indicates whether or not the pull request is a draft."
        },
        "merged": { "type": ["boolean", "null"] },
        "mergeable": { "type": ["boolean", "null"] },
        "rebaseable": { "type": ["boolean", "null"] },
        "mergeable_state": { "type": "string" },
        "merged_by": {
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "comments": { "type": "integer" },
        "review_comments": { "type": "integer" },
        "maintainer_can_modify": {
          "type": "boolean",
          "description": "Indicates whether maintainers can modify the pull request."
        },
        "commits": { "type": "integer" },
        "additions": { "type": "integer" },
        "deletions": { "type": "integer" },
        "changed_files": { "type": "integer" }
      },
      "additionalProperties": false,
      "title": "Pull Request"
    },
    "reactions": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "url",
        "total_count",
        "+1",
        "-1",
        "laugh",
        "confused",
        "heart",
        "hooray",
        "eyes",
        "rocket"
      ],
      "properties": {
        "url": { "type": "string", "format": "uri" },
        "total_count": { "type": "integer" },
        "+1": { "type": "integer" },
        "-1": { "type": "integer" },
        "laugh": { "type": "integer" },
        "hooray": { "type": "integer" },
        "confused": { "type": "integer" },
        "heart": { "type": "integer" },
        "rocket": { "type": "integer" },
        "eyes": { "type": "integer" }
      },
      "title": "Reactions",
      "additionalProperties": false
    },
    "referenced-workflow": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "Referenced workflow",
      "description": "A workflow referenced/reused by the initial caller workflow",
      "type": "object",
      "properties": {
        "path": { "type": "string" },
        "sha": { "type": "string" },
        "ref": { "type": "string" }
      },
      "required": ["path", "sha"],
      "additionalProperties": false
    },
    "release-asset": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "Data related to a release.",
      "type": "object",
      "required": [
        "url",
        "browser_download_url",
        "id",
        "node_id",
        "name",
        "label",
        "state",
        "content_type",
        "size",
        "download_count",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "url": { "type": "string", "format": "uri" },
        "browser_download_url": { "type": "string", "format": "uri" },
        "id": { "type": "integer" },
        "node_id": { "type": "string" },
        "name": {
          "description": "The file name of the asset.",
          "type": "string"
        },
        "label": { "type": ["string", "null"] },
        "state": {
          "description": "State of the release asset.",
          "type": "string",
          "enum": ["uploaded"]
        },
        "content_type": { "type": "string" },
        "size": { "type": "integer" },
        "download_count": { "type": "integer" },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "uploader": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "Release Asset"
    },
    "release": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "url",
        "assets_url",
        "upload_url",
        "html_url",
        "id",
        "node_id",
        "tag_name",
        "target_commitish",
        "name",
        "draft",
        "author",
        "prerelease",
        "created_at",
        "published_at",
        "assets",
        "tarball_url",
        "zipball_url",
        "body"
      ],
      "type": "object",
      "properties": {
        "url": { "type": "string", "format": "uri" },
        "assets_url": { "type": "string", "format": "uri" },
        "upload_url": { "type": "string", "format": "uri-template" },
        "html_url": { "type": "string", "format": "uri" },
        "id": { "type": "integer" },
        "node_id": { "type": "string" },
        "tag_name": { "type": "string", "description": "The name of the tag." },
        "target_commitish": {
          "type": "string",
          "description": "Specifies the commitish value that determines where the Git tag is created from."
        },
        "name": { "type": "string" },
        "draft": {
          "type": "boolean",
          "description": "Wether the release is a draft or published"
        },
        "author": { "$ref": "#/definitions/user" },
        "prerelease": {
          "type": "boolean",
          "description": "Whether the release is identified as a prerelease or a full release."
        },
        "created_at": { "type": ["string", "null"], "format": "date-time" },
        "published_at": { "type": ["string", "null"], "format": "date-time" },
        "assets": {
          "type": "array",
          "items": { "$ref": "#/definitions/release-asset" }
        },
        "tarball_url": { "type": ["string", "null"], "format": "uri" },
        "zipball_url": { "type": ["string", "null"], "format": "uri" },
        "body": { "type": "string" },
        "mentions_count": { "type": "integer" },
        "reactions": { "$ref": "#/definitions/reactions" },
        "discussion_url": { "type": "string", "format": "uri" }
      },
      "additionalProperties": false,
      "description": "The [release](https://docs.github.com/en/rest/reference/repos/#get-a-release) object.",
      "title": "Release"
    },
    "repo-ref": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": ["id", "url", "name"],
      "properties": {
        "id": { "type": "integer" },
        "url": { "type": "string", "format": "uri" },
        "name": { "type": "string" }
      },
      "additionalProperties": false,
      "title": "Repo Ref"
    },
    "repository-lite": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "archive_url",
        "assignees_url",
        "blobs_url",
        "branches_url",
        "collaborators_url",
        "comments_url",
        "commits_url",
        "compare_url",
        "contents_url",
        "contributors_url",
        "deployments_url",
        "description",
        "downloads_url",
        "events_url",
        "fork",
        "forks_url",
        "full_name",
        "git_commits_url",
        "git_refs_url",
        "git_tags_url",
        "hooks_url",
        "html_url",
        "id",
        "issue_comment_url",
        "issue_events_url",
        "issues_url",
        "keys_url",
        "labels_url",
        "languages_url",
        "merges_url",
        "milestones_url",
        "name",
        "node_id",
        "notifications_url",
        "owner",
        "private",
        "pulls_url",
        "releases_url",
        "stargazers_url",
        "statuses_url",
        "subscribers_url",
        "subscription_url",
        "tags_url",
        "teams_url",
        "trees_url",
        "url"
      ],
      "type": "object",
      "properties": {
        "archive_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to download the repository as an archive."
        },
        "assignees_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to list the available assignees for issues in the repository."
        },
        "blobs_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
        },
        "branches_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about branches in the repository."
        },
        "collaborators_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about collaborators of the repository."
        },
        "comments_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about comments on the repository."
        },
        "commits_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about commits on the repository."
        },
        "compare_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to compare two commits or refs."
        },
        "contents_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get the contents of the repository."
        },
        "contributors_url": {
          "type": "string",
          "format": "uri",
          "description": "A template for the API URL to list the contributors to the repository."
        },
        "deployments_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the deployments of the repository."
        },
        "description": {
          "type": ["string", "null"],
          "description": "The repository description."
        },
        "downloads_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the downloads on the repository."
        },
        "events_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the events of the repository."
        },
        "fork": {
          "type": "boolean",
          "description": "Whether the repository is a fork."
        },
        "forks_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the forks of the repository."
        },
        "full_name": {
          "type": "string",
          "description": "The full, globally unique, name of the repository."
        },
        "git_commits_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about Git commits of the repository."
        },
        "git_refs_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about Git refs of the repository."
        },
        "git_tags_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about Git tags of the repository."
        },
        "hooks_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the hooks on the repository."
        },
        "html_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to view the repository on GitHub.com."
        },
        "id": {
          "type": "integer",
          "description": "Unique identifier of the repository"
        },
        "issue_comment_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about issue comments on the repository."
        },
        "issue_events_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about issue events on the repository."
        },
        "issues_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about issues on the repository."
        },
        "keys_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about deploy keys on the repository."
        },
        "labels_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about labels of the repository."
        },
        "languages_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to get information about the languages of the repository."
        },
        "merges_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to merge branches in the repository."
        },
        "milestones_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about milestones of the repository."
        },
        "name": {
          "type": "string",
          "description": "The name of the repository."
        },
        "node_id": {
          "type": "string",
          "description": "The GraphQL identifier of the repository."
        },
        "notifications_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about notifications on the repository."
        },
        "owner": { "$ref": "#/definitions/user" },
        "private": {
          "type": "boolean",
          "description": "Whether the repository is private or public."
        },
        "pulls_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about pull requests on the repository."
        },
        "releases_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about releases on the repository."
        },
        "stargazers_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the stargazers on the repository."
        },
        "statuses_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about statuses of a commit."
        },
        "subscribers_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the subscribers on the repository."
        },
        "subscription_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to subscribe to notifications for this repository."
        },
        "tags_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to get information about tags on the repository."
        },
        "teams_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the teams on the repository."
        },
        "trees_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to get more information about the repository from the GitHub API."
        }
      },
      "additionalProperties": false,
      "title": "Repository Lite"
    },
    "repository-vulnerability-alert-alert": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "id",
        "number",
        "node_id",
        "state",
        "affected_range",
        "affected_package_name",
        "ghsa_id",
        "severity",
        "external_reference",
        "external_identifier",
        "created_at"
      ],
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "number": { "type": "integer" },
        "node_id": { "type": "string" },
        "state": { "type": "string", "enum": ["open", "dismissed", "fixed"] },
        "affected_range": { "type": "string" },
        "affected_package_name": { "type": "string" },
        "dismisser": { "$ref": "#/definitions/user" },
        "dismiss_reason": { "type": "string" },
        "dismissed_at": { "type": "string", "format": "date-time" },
        "severity": { "type": "string" },
        "ghsa_id": { "type": "string" },
        "external_reference": { "type": "string", "format": "uri" },
        "external_identifier": { "type": "string" },
        "fixed_in": { "type": "string" },
        "fixed_at": { "type": "string", "format": "date-time" },
        "fix_reason": { "type": "string" },
        "created_at": { "type": "string", "format": "date-time" }
      },
      "additionalProperties": false,
      "description": "The security alert of the vulnerable dependency.",
      "title": "Repository Vulnerability Alert Alert"
    },
    "repository": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "A git repository",
      "type": "object",
      "required": [
        "id",
        "node_id",
        "name",
        "full_name",
        "private",
        "owner",
        "html_url",
        "description",
        "fork",
        "url",
        "forks_url",
        "keys_url",
        "collaborators_url",
        "teams_url",
        "hooks_url",
        "issue_events_url",
        "events_url",
        "assignees_url",
        "branches_url",
        "tags_url",
        "blobs_url",
        "git_tags_url",
        "git_refs_url",
        "trees_url",
        "statuses_url",
        "languages_url",
        "stargazers_url",
        "contributors_url",
        "subscribers_url",
        "subscription_url",
        "commits_url",
        "git_commits_url",
        "comments_url",
        "issue_comment_url",
        "contents_url",
        "compare_url",
        "merges_url",
        "archive_url",
        "downloads_url",
        "issues_url",
        "pulls_url",
        "milestones_url",
        "notifications_url",
        "labels_url",
        "releases_url",
        "deployments_url",
        "created_at",
        "updated_at",
        "pushed_at",
        "git_url",
        "ssh_url",
        "clone_url",
        "svn_url",
        "homepage",
        "size",
        "stargazers_count",
        "watchers_count",
        "language",
        "has_issues",
        "has_projects",
        "has_downloads",
        "has_wiki",
        "has_pages",
        "forks_count",
        "mirror_url",
        "archived",
        "open_issues_count",
        "license",
        "forks",
        "open_issues",
        "watchers",
        "default_branch",
        "is_template",
        "web_commit_signoff_required",
        "topics",
        "visibility"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier of the repository"
        },
        "node_id": {
          "type": "string",
          "description": "The GraphQL identifier of the repository."
        },
        "name": {
          "type": "string",
          "description": "The name of the repository."
        },
        "full_name": {
          "type": "string",
          "description": "The full, globally unique, name of the repository."
        },
        "private": {
          "type": "boolean",
          "description": "Whether the repository is private or public."
        },
        "owner": { "$ref": "#/definitions/user" },
        "html_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to view the repository on GitHub.com."
        },
        "description": {
          "type": ["string", "null"],
          "description": "The repository description."
        },
        "fork": {
          "type": "boolean",
          "description": "Whether the repository is a fork."
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to get more information about the repository from the GitHub API."
        },
        "forks_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the forks of the repository."
        },
        "keys_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about deploy keys on the repository."
        },
        "collaborators_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about collaborators of the repository."
        },
        "teams_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the teams on the repository."
        },
        "hooks_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the hooks on the repository."
        },
        "issue_events_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about issue events on the repository."
        },
        "events_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the events of the repository."
        },
        "assignees_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to list the available assignees for issues in the repository."
        },
        "branches_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about branches in the repository."
        },
        "tags_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to get information about tags on the repository."
        },
        "blobs_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
        },
        "git_tags_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about Git tags of the repository."
        },
        "git_refs_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about Git refs of the repository."
        },
        "trees_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
        },
        "statuses_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about statuses of a commit."
        },
        "languages_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to get information about the languages of the repository."
        },
        "stargazers_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the stargazers on the repository."
        },
        "contributors_url": {
          "type": "string",
          "format": "uri",
          "description": "A template for the API URL to list the contributors to the repository."
        },
        "subscribers_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the subscribers on the repository."
        },
        "subscription_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to subscribe to notifications for this repository."
        },
        "commits_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about commits on the repository."
        },
        "git_commits_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about Git commits of the repository."
        },
        "comments_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about comments on the repository."
        },
        "issue_comment_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about issue comments on the repository."
        },
        "contents_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get the contents of the repository."
        },
        "compare_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to compare two commits or refs."
        },
        "merges_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to merge branches in the repository."
        },
        "archive_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to download the repository as an archive."
        },
        "downloads_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the downloads on the repository."
        },
        "issues_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about issues on the repository."
        },
        "pulls_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about pull requests on the repository."
        },
        "milestones_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about milestones of the repository."
        },
        "notifications_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about notifications on the repository."
        },
        "labels_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about labels of the repository."
        },
        "releases_url": {
          "type": "string",
          "format": "uri-template",
          "description": "A template for the API URL to get information about releases on the repository."
        },
        "deployments_url": {
          "type": "string",
          "format": "uri",
          "description": "The API URL to list the deployments of the repository."
        },
        "created_at": {
          "oneOf": [
            { "type": "integer" },
            { "type": "string", "format": "date-time" }
          ]
        },
        "updated_at": { "type": "string", "format": "date-time" },
        "pushed_at": {
          "oneOf": [
            { "type": "integer" },
            { "type": "string", "format": "date-time" },
            { "type": "null" }
          ]
        },
        "git_url": { "type": "string", "format": "uri" },
        "ssh_url": { "type": "string" },
        "clone_url": { "type": "string", "format": "uri" },
        "svn_url": { "type": "string", "format": "uri" },
        "homepage": { "type": ["string", "null"] },
        "size": { "type": "integer" },
        "stargazers_count": { "type": "integer" },
        "watchers_count": { "type": "integer" },
        "language": { "type": ["string", "null"] },
        "has_issues": {
          "type": "boolean",
          "description": "Whether issues are enabled.",
          "default": true
        },
        "has_projects": {
          "type": "boolean",
          "description": "Whether projects are enabled.",
          "default": true
        },
        "has_downloads": {
          "type": "boolean",
          "description": "Whether downloads are enabled.",
          "default": true
        },
        "has_wiki": {
          "type": "boolean",
          "description": "Whether the wiki is enabled.",
          "default": true
        },
        "has_pages": { "type": "boolean" },
        "has_discussions": {
          "type": "boolean",
          "description": "Whether discussions are enabled.",
          "default": true
        },
        "forks_count": { "type": "integer" },
        "mirror_url": { "type": ["string", "null"], "format": "uri" },
        "archived": {
          "type": "boolean",
          "description": "Whether the repository is archived.",
          "default": false
        },
        "disabled": {
          "type": "boolean",
          "description": "Returns whether or not this repository is disabled."
        },
        "open_issues_count": { "type": "integer" },
        "license": {
          "oneOf": [{ "$ref": "#/definitions/license" }, { "type": "null" }]
        },
        "forks": { "type": "integer" },
        "open_issues": { "type": "integer" },
        "watchers": { "type": "integer" },
        "stargazers": { "type": "integer" },
        "default_branch": {
          "type": "string",
          "description": "The default branch of the repository."
        },
        "allow_squash_merge": {
          "type": "boolean",
          "description": "Whether to allow squash merges for pull requests.",
          "default": true
        },
        "allow_merge_commit": {
          "type": "boolean",
          "description": "Whether to allow merge commits for pull requests.",
          "default": true
        },
        "allow_rebase_merge": {
          "type": "boolean",
          "description": "Whether to allow rebase merges for pull requests.",
          "default": true
        },
        "allow_auto_merge": {
          "type": "boolean",
          "description": "Whether to allow auto-merge for pull requests.",
          "default": false
        },
        "allow_forking": {
          "type": "boolean",
          "description": "Whether to allow private forks"
        },
        "allow_update_branch": { "type": "boolean" },
        "use_squash_pr_title_as_default": { "type": "boolean" },
        "squash_merge_commit_message": { "type": "string" },
        "squash_merge_commit_title": { "type": "string" },
        "merge_commit_message": { "type": "string" },
        "merge_commit_title": { "type": "string" },
        "is_template": { "type": "boolean" },
        "web_commit_signoff_required": { "type": "boolean" },
        "topics": { "type": "array", "items": { "type": "string" } },
        "visibility": {
          "type": "string",
          "enum": ["public", "private", "internal"]
        },
        "delete_branch_on_merge": {
          "type": "boolean",
          "description": "Whether to delete head branches when pull requests are merged",
          "default": false
        },
        "master_branch": { "type": "string" },
        "permissions": {
          "type": "object",
          "required": ["pull", "push", "admin"],
          "properties": {
            "pull": { "type": "boolean" },
            "push": { "type": "boolean" },
            "admin": { "type": "boolean" },
            "maintain": { "type": "boolean" },
            "triage": { "type": "boolean" }
          },
          "additionalProperties": false
        },
        "public": { "type": "boolean" },
        "organization": { "type": "string" }
      },
      "additionalProperties": false,
      "title": "Repository"
    },
    "secret-scanning-alert": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "number",
        "created_at",
        "updated_at",
        "secret_type",
        "resolution",
        "resolved_at",
        "resolved_by",
        "url",
        "html_url",
        "state"
      ],
      "properties": {
        "number": {
          "type": "integer",
          "description": "The security alert number.",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "oneOf": [
            {
              "type": "string",
              "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "format": "date-time",
              "readOnly": true
            },
            { "type": "null" }
          ]
        },
        "url": {
          "type": "string",
          "description": "The REST API URL of the alert resource.",
          "format": "uri",
          "readOnly": true
        },
        "html_url": {
          "type": "string",
          "description": "The GitHub URL of the alert resource.",
          "format": "uri",
          "readOnly": true
        },
        "locations_url": {
          "type": "string",
          "format": "uri",
          "description": "The REST API URL of the code locations for this alert."
        },
        "state": { "type": "string", "enum": ["open", "resolved"] },
        "resolution": {
          "type": ["string", "null"],
          "description": "**Required when the `state` is `resolved`.** The reason for resolving the alert.",
          "enum": [
            "false_positive",
            "wont_fix",
            "revoked",
            "used_in_tests",
            null
          ]
        },
        "resolved_at": {
          "type": ["string", "null"],
          "format": "date-time",
          "description": "The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "resolved_by": {
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "resolution_comment": {
          "type": ["string", "null"],
          "description": "An optional comment to resolve an alert."
        },
        "secret_type": {
          "type": "string",
          "description": "The type of secret that secret scanning detected."
        },
        "secret_type_display_name": {
          "type": "string",
          "description": "User-friendly name for the detected secret, matching the `secret_type`.\nFor a list of built-in patterns, see \"[Secret scanning patterns](https://docs.github.com/code-security/secret-scanning/secret-scanning-patterns#supported-secrets-for-advanced-security).\""
        },
        "secret": {
          "type": "string",
          "description": "The secret that was detected."
        },
        "push_protection_bypassed": {
          "type": ["boolean", "null"],
          "description": "Whether push protection was bypassed for the detected secret."
        },
        "push_protection_bypassed_by": {
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "push_protection_bypassed_at": {
          "type": ["string", "null"],
          "format": "date-time",
          "description": "The time that push protection was bypassed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
        }
      },
      "additionalProperties": false,
      "title": "Secret scanning alert"
    },
    "secret-scanning-location": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "oneOf": [
        {
          "type": "object",
          "required": ["type", "details"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["commit"],
              "description": "The location type. Because secrets may be found in different types of resources (ie. code, comments, issues), this field identifies the type of resource where the secret was found."
            },
            "details": {
              "description": "Represents a 'commit' secret scanning location type. This location type shows that a secret was detected inside a commit to a repository.",
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The file path in the repository",
                  "examples": ["/example/secrets.txt"]
                },
                "start_line": {
                  "type": "number",
                  "description": "Line number at which the secret starts in the file"
                },
                "end_line": {
                  "type": "number",
                  "description": "Line number at which the secret ends in the file"
                },
                "start_column": {
                  "type": "number",
                  "description": "The column at which the secret starts within the start line when the file is interpreted as 8BIT ASCII"
                },
                "end_column": {
                  "type": "number",
                  "description": "The column at which the secret ends within the end line when the file is interpreted as 8BIT ASCII"
                },
                "blob_sha": {
                  "type": "string",
                  "description": "SHA-1 hash ID of the associated blob",
                  "examples": ["af5626b4a114abcb82d63db7c8082c3c4756e51b"]
                },
                "blob_url": {
                  "type": "string",
                  "description": "The API URL to get the associated blob resource"
                },
                "commit_sha": {
                  "type": "string",
                  "description": "SHA-1 hash ID of the associated commit",
                  "examples": ["af5626b4a114abcb82d63db7c8082c3c4756e51b"]
                },
                "commit_url": {
                  "type": "string",
                  "description": "The API URL to get the associated commit resource"
                }
              },
              "required": [
                "path",
                "start_line",
                "end_line",
                "start_column",
                "end_column",
                "blob_sha",
                "blob_url",
                "commit_sha",
                "commit_url"
              ],
              "additionalProperties": false,
              "title": "Secret Scanning Location Commit"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": ["type", "details"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["issue_title"],
              "description": "The location type. Because secrets may be found in different types of resources (ie. code, comments, issues), this field identifies the type of resource where the secret was found."
            },
            "details": {
              "description": "Represents an 'issue_title' secret scanning location type. This location type shows that a secret was detected in the title of an issue.",
              "type": "object",
              "required": ["issue_title_url"],
              "properties": {
                "issue_title_url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The API URL to get the issue where the secret was detected.",
                  "examples": [
                    "https://api.github.com/repos/octocat/Hello-World/issues/1347"
                  ]
                }
              },
              "additionalProperties": false,
              "title": "Secret Scanning Location Issue Title"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": ["type", "details"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["issue_body"],
              "description": "The location type. Because secrets may be found in different types of resources (ie. code, comments, issues), this field identifies the type of resource where the secret was found."
            },
            "details": {
              "description": "Represents an 'issue_body' secret scanning location type. This location type shows that a secret was detected in the body of an issue.",
              "type": "object",
              "required": ["issue_body_url"],
              "properties": {
                "issue_body_url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The API URL to get the issue where the secret was detected.",
                  "examples": [
                    "https://api.github.com/repos/octocat/Hello-World/issues/1347"
                  ]
                }
              },
              "additionalProperties": false,
              "title": "Secret Scanning Location Issue Body"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": ["type", "details"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["issue_comment"],
              "description": "The location type. Because secrets may be found in different types of resources (ie. code, comments, issues), this field identifies the type of resource where the secret was found."
            },
            "details": {
              "description": "Represents an 'issue_comment' secret scanning location type. This location type shows that a secret was detected in a comment on an issue.",
              "type": "object",
              "required": ["issue_comment_url"],
              "properties": {
                "issue_comment_url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The API URL to get the issue comment where the secret was detected.",
                  "examples": [
                    "https://api.github.com/repos/octocat/Hello-World/issues/comments/1081119451"
                  ]
                }
              },
              "additionalProperties": false,
              "title": "Secret Scanning Location Issue Comment"
            }
          },
          "additionalProperties": false
        }
      ],
      "title": "Secret Scanning Location",
      "additionalProperties": false
    },
    "security-advisory-cvss": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "Details for the advisory pertaining to the Common Vulnerability Scoring System.",
      "required": ["score", "vector_string"],
      "properties": {
        "score": {
          "type": "number",
          "description": "The overall CVSS score of the advisory.",
          "minimum": 0,
          "maximum": 10
        },
        "vector_string": {
          "type": ["string", "null"],
          "description": "The full CVSS vector string for the advisory."
        }
      },
      "additionalProperties": false,
      "title": "security_advisory cvss"
    },
    "security-advisory-cwes": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "description": "A CWE weakness assigned to the advisory.",
      "required": ["cwe_id", "name"],
      "properties": {
        "cwe_id": { "type": "string", "description": "The unique CWE ID." },
        "name": {
          "type": "string",
          "description": "The short, plain text name of the CWE."
        }
      },
      "additionalProperties": false,
      "title": "security_advisory cwes"
    },
    "simple-pull-request": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "url",
        "id",
        "node_id",
        "html_url",
        "diff_url",
        "patch_url",
        "issue_url",
        "number",
        "state",
        "locked",
        "title",
        "user",
        "body",
        "created_at",
        "updated_at",
        "closed_at",
        "merged_at",
        "merge_commit_sha",
        "assignee",
        "assignees",
        "requested_reviewers",
        "requested_teams",
        "labels",
        "milestone",
        "draft",
        "commits_url",
        "review_comments_url",
        "review_comment_url",
        "comments_url",
        "statuses_url",
        "head",
        "base",
        "_links",
        "author_association",
        "auto_merge",
        "active_lock_reason"
      ],
      "type": "object",
      "properties": {
        "url": { "type": "string", "format": "uri" },
        "id": { "type": "integer" },
        "node_id": { "type": "string" },
        "html_url": { "type": "string", "format": "uri" },
        "diff_url": { "type": "string", "format": "uri" },
        "patch_url": { "type": "string", "format": "uri" },
        "issue_url": { "type": "string", "format": "uri" },
        "number": { "type": "integer" },
        "state": { "type": "string", "enum": ["open", "closed"] },
        "locked": { "type": "boolean" },
        "title": { "type": "string" },
        "user": { "$ref": "#/definitions/user" },
        "body": { "type": ["string", "null"] },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "closed_at": {
          "oneOf": [
            { "type": "string", "format": "date-time" },
            { "type": "null" }
          ]
        },
        "merged_at": {
          "oneOf": [
            { "type": "string", "format": "date-time" },
            { "type": "null" }
          ]
        },
        "merge_commit_sha": { "type": ["string", "null"] },
        "assignee": {
          "oneOf": [{ "$ref": "#/definitions/user" }, { "type": "null" }]
        },
        "assignees": {
          "type": "array",
          "items": { "$ref": "#/definitions/user" }
        },
        "requested_reviewers": {
          "type": "array",
          "items": {
            "oneOf": [
              { "$ref": "#/definitions/user" },
              { "$ref": "#/definitions/team" }
            ]
          }
        },
        "requested_teams": {
          "type": "array",
          "items": { "$ref": "#/definitions/team" }
        },
        "labels": {
          "type": "array",
          "items": { "$ref": "#/definitions/label" }
        },
        "milestone": {
          "oneOf": [{ "$ref": "#/definitions/milestone" }, { "type": "null" }]
        },
        "draft": { "type": "boolean" },
        "commits_url": { "type": "string", "format": "uri" },
        "review_comments_url": { "type": "string", "format": "uri" },
        "review_comment_url": { "type": "string", "format": "uri-template" },
        "comments_url": { "type": "string", "format": "uri" },
        "statuses_url": { "type": "string", "format": "uri" },
        "head": {
          "type": "object",
          "required": ["label", "ref", "sha", "user", "repo"],
          "properties": {
            "label": { "type": "string" },
            "ref": { "type": "string" },
            "sha": { "type": "string" },
            "user": { "$ref": "#/definitions/user" },
            "repo": { "$ref": "#/definitions/repository" }
          },
          "additionalProperties": false
        },
        "base": {
          "type": "object",
          "required": ["label", "ref", "sha", "user", "repo"],
          "properties": {
            "label": { "type": "string" },
            "ref": { "type": "string" },
            "sha": { "type": "string" },
            "user": { "$ref": "#/definitions/user" },
            "repo": { "$ref": "#/definitions/repository" }
          },
          "additionalProperties": false
        },
        "_links": {
          "type": "object",
          "required": [
            "self",
            "html",
            "issue",
            "comments",
            "review_comments",
            "review_comment",
            "commits",
            "statuses"
          ],
          "properties": {
            "self": { "$ref": "#/definitions/link" },
            "html": { "$ref": "#/definitions/link" },
            "issue": { "$ref": "#/definitions/link" },
            "comments": { "$ref": "#/definitions/link" },
            "review_comments": { "$ref": "#/definitions/link" },
            "review_comment": { "$ref": "#/definitions/link" },
            "commits": { "$ref": "#/definitions/link" },
            "statuses": { "$ref": "#/definitions/link" }
          },
          "additionalProperties": false
        },
        "author_association": { "$ref": "#/definitions/author_association" },
        "auto_merge": {
          "oneOf": [{ "$ref": "#/definitions/auto-merge" }, { "type": "null" }]
        },
        "active_lock_reason": {
          "type": ["string", "null"],
          "enum": ["resolved", "off-topic", "too heated", "spam", null]
        }
      },
      "additionalProperties": false,
      "title": "Simple Pull Request"
    },
    "sponsorship-tier": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "The `tier_changed` and `pending_tier_change` will include the original tier before the change or pending change. For more information, see the pending tier change payload.",
      "required": [
        "node_id",
        "created_at",
        "description",
        "monthly_price_in_cents",
        "monthly_price_in_dollars",
        "name",
        "is_one_time",
        "is_custom_ammount"
      ],
      "type": "object",
      "properties": {
        "node_id": { "type": "string" },
        "created_at": { "type": "string", "format": "date-time" },
        "description": { "type": "string" },
        "monthly_price_in_cents": { "type": "integer" },
        "monthly_price_in_dollars": { "type": "integer" },
        "name": { "type": "string" },
        "is_one_time": { "type": "boolean" },
        "is_custom_ammount": { "type": "boolean" }
      },
      "additionalProperties": false,
      "title": "Sponsorship Tier"
    },
    "team": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "Groups of organization members that gives permissions on specified repositories.",
      "type": "object",
      "required": [
        "name",
        "id",
        "node_id",
        "slug",
        "description",
        "privacy",
        "url",
        "html_url",
        "members_url",
        "repositories_url",
        "permission"
      ],
      "properties": {
        "name": { "type": "string", "description": "Name of the team" },
        "id": {
          "type": "integer",
          "description": "Unique identifier of the team"
        },
        "node_id": { "type": "string" },
        "slug": { "type": "string" },
        "description": {
          "type": ["string", "null"],
          "description": "Description of the team"
        },
        "privacy": { "type": "string", "enum": ["open", "closed", "secret"] },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL for the team"
        },
        "html_url": { "type": "string", "format": "uri" },
        "members_url": { "type": "string", "format": "uri-template" },
        "repositories_url": { "type": "string", "format": "uri" },
        "permission": {
          "type": "string",
          "description": "Permission that the team will have for its repositories"
        },
        "parent": {
          "type": ["object", "null"],
          "required": [
            "name",
            "id",
            "node_id",
            "slug",
            "description",
            "privacy",
            "url",
            "html_url",
            "members_url",
            "repositories_url",
            "permission"
          ],
          "properties": {
            "name": { "type": "string", "description": "Name of the team" },
            "id": {
              "type": "integer",
              "description": "Unique identifier of the team"
            },
            "node_id": { "type": "string" },
            "slug": { "type": "string" },
            "description": {
              "type": ["string", "null"],
              "description": "Description of the team"
            },
            "privacy": {
              "type": "string",
              "enum": ["open", "closed", "secret"]
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "URL for the team"
            },
            "html_url": { "type": "string", "format": "uri" },
            "members_url": { "type": "string", "format": "uri-template" },
            "repositories_url": { "type": "string", "format": "uri" },
            "permission": {
              "type": "string",
              "description": "Permission that the team will have for its repositories"
            },
            "notification_setting": {
              "type": "string",
              "enum": ["notifications_enabled", "notifications_disabled"],
              "description": "Whether team members will receive notifications when their team is @mentioned"
            }
          },
          "additionalProperties": false
        },
        "notification_setting": {
          "type": "string",
          "enum": ["notifications_enabled", "notifications_disabled"],
          "description": "Whether team members will receive notifications when their team is @mentioned"
        }
      },
      "additionalProperties": false,
      "title": "Team"
    },
    "user": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "required": [
        "login",
        "id",
        "node_id",
        "avatar_url",
        "gravatar_id",
        "url",
        "html_url",
        "followers_url",
        "following_url",
        "gists_url",
        "starred_url",
        "subscriptions_url",
        "organizations_url",
        "repos_url",
        "events_url",
        "received_events_url",
        "type",
        "site_admin"
      ],
      "properties": {
        "login": { "type": "string" },
        "id": { "type": "integer" },
        "node_id": { "type": "string" },
        "name": { "type": "string" },
        "email": { "type": ["string", "null"] },
        "avatar_url": { "type": "string", "format": "uri" },
        "gravatar_id": { "type": "string" },
        "url": { "type": "string", "format": "uri" },
        "html_url": { "type": "string", "format": "uri" },
        "followers_url": { "type": "string", "format": "uri" },
        "following_url": { "type": "string", "format": "uri-template" },
        "gists_url": { "type": "string", "format": "uri-template" },
        "starred_url": { "type": "string", "format": "uri-template" },
        "subscriptions_url": { "type": "string", "format": "uri" },
        "organizations_url": { "type": "string", "format": "uri" },
        "repos_url": { "type": "string", "format": "uri" },
        "events_url": { "type": "string", "format": "uri-template" },
        "received_events_url": { "type": "string", "format": "uri" },
        "type": { "type": "string", "enum": ["Bot", "User", "Organization"] },
        "site_admin": { "type": "boolean" }
      },
      "additionalProperties": false,
      "title": "User"
    },
    "webhook-events": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "branch_protection_rule",
              "check_run",
              "check_suite",
              "code_scanning_alert",
              "commit_comment",
              "create",
              "delete",
              "deployment",
              "deployment_status",
              "deploy_key",
              "discussion",
              "discussion_comment",
              "fork",
              "gollum",
              "issues",
              "issue_comment",
              "label",
              "member",
              "membership",
              "meta",
              "milestone",
              "organization",
              "org_block",
              "package",
              "page_build",
              "project",
              "projects_v2_item",
              "project_card",
              "project_column",
              "public",
              "pull_request",
              "pull_request_review",
              "pull_request_review_comment",
              "pull_request_review_thread",
              "push",
              "registry_package",
              "release",
              "repository",
              "repository_import",
              "repository_vulnerability_alert",
              "secret_scanning_alert",
              "secret_scanning_alert_location",
              "security_and_analysis",
              "star",
              "status",
              "team",
              "team_add",
              "watch",
              "workflow_job",
              "workflow_run"
            ]
          }
        },
        {
          "type": "array",
          "items": { "type": "string", "const": "*" },
          "maxItems": 1,
          "minItems": 1
        }
      ],
      "title": "Webhook Events"
    },
    "workflow-job": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "id",
        "run_id",
        "run_url",
        "run_attempt",
        "node_id",
        "head_sha",
        "url",
        "html_url",
        "status",
        "conclusion",
        "started_at",
        "completed_at",
        "created_at",
        "name",
        "steps",
        "check_run_url",
        "labels",
        "runner_id",
        "runner_name",
        "runner_group_id",
        "runner_group_name",
        "workflow_name",
        "head_branch"
      ],
      "description": "The workflow job. Many `workflow_job` keys, such as `head_sha`, `conclusion`, and `started_at` are the same as those in a [`check_run`](#check_run) object.",
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "run_id": { "type": "number" },
        "run_attempt": { "type": "integer" },
        "run_url": { "type": "string", "format": "uri" },
        "head_sha": { "type": "string" },
        "node_id": { "type": "string" },
        "name": { "type": "string" },
        "check_run_url": { "type": "string", "format": "uri" },
        "html_url": { "type": "string", "format": "uri" },
        "url": { "type": "string", "format": "uri" },
        "status": {
          "type": "string",
          "enum": ["queued", "in_progress", "completed", "waiting"],
          "description": "The current status of the job. Can be `queued`, `in_progress`, or `completed`."
        },
        "steps": {
          "type": "array",
          "items": { "$ref": "#/definitions/workflow-step" }
        },
        "conclusion": {
          "type": ["string", "null"],
          "enum": ["success", "failure", "cancelled", "skipped", null]
        },
        "labels": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Custom labels for the job. Specified by the [`\"runs-on\"` attribute](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on) in the workflow YAML."
        },
        "runner_id": {
          "type": ["integer", "null"],
          "description": "The ID of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
        },
        "runner_name": {
          "type": ["string", "null"],
          "description": "The name of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
        },
        "runner_group_id": {
          "type": ["integer", "null"],
          "description": "The ID of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
        },
        "runner_group_name": {
          "type": ["string", "null"],
          "description": "The name of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`."
        },
        "started_at": { "type": "string", "format": "date-time" },
        "completed_at": {
          "oneOf": [
            { "type": "string", "format": "date-time" },
            { "type": "null" }
          ]
        },
        "workflow_name": {
          "type": ["string", "null"],
          "description": "The name of the workflow."
        },
        "head_branch": {
          "type": ["string", "null"],
          "description": "The name of the current branch."
        },
        "created_at": { "type": "string", "format": "date-time" }
      },
      "additionalProperties": false,
      "title": "Workflow Job"
    },
    "workflow-run": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "artifacts_url",
        "cancel_url",
        "check_suite_url",
        "check_suite_id",
        "check_suite_node_id",
        "conclusion",
        "created_at",
        "event",
        "head_branch",
        "head_commit",
        "head_repository",
        "head_sha",
        "html_url",
        "id",
        "jobs_url",
        "logs_url",
        "node_id",
        "name",
        "pull_requests",
        "repository",
        "rerun_url",
        "run_number",
        "status",
        "updated_at",
        "url",
        "workflow_id",
        "workflow_url",
        "run_attempt",
        "run_started_at",
        "previous_attempt_url",
        "actor",
        "triggering_actor",
        "path",
        "display_title"
      ],
      "type": "object",
      "properties": {
        "artifacts_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to the artifacts for the workflow run."
        },
        "cancel_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to cancel the workflow run."
        },
        "check_suite_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to the associated check suite."
        },
        "check_suite_id": {
          "type": "integer",
          "description": "The ID of the associated check suite."
        },
        "check_suite_node_id": {
          "type": "string",
          "description": "The node ID of the associated check suite."
        },
        "conclusion": {
          "type": ["string", "null"],
          "enum": [
            "success",
            "failure",
            "neutral",
            "cancelled",
            "timed_out",
            "action_required",
            "stale",
            "skipped",
            null
          ]
        },
        "created_at": { "type": "string", "format": "date-time" },
        "event": { "type": "string" },
        "head_branch": { "type": "string" },
        "head_commit": { "$ref": "#/definitions/commit-simple" },
        "head_repository": { "$ref": "#/definitions/repository-lite" },
        "head_sha": {
          "type": "string",
          "description": "The SHA of the head commit that points to the version of the workflow being run."
        },
        "path": {
          "type": "string",
          "description": "The full path of the workflow"
        },
        "display_title": { "type": "string" },
        "html_url": { "type": "string", "format": "uri" },
        "id": {
          "type": "integer",
          "description": "The ID of the workflow run."
        },
        "jobs_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to the jobs for the workflow run."
        },
        "logs_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to download the logs for the workflow run."
        },
        "node_id": { "type": "string" },
        "name": {
          "type": "string",
          "description": "The name of the workflow run."
        },
        "pull_requests": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["url", "id", "number", "head", "base"],
            "properties": {
              "url": { "type": "string", "format": "uri" },
              "id": { "type": "number" },
              "number": { "type": "number" },
              "head": {
                "type": "object",
                "required": ["ref", "sha", "repo"],
                "properties": {
                  "ref": { "type": "string" },
                  "sha": { "type": "string" },
                  "repo": { "$ref": "#/definitions/repo-ref" }
                },
                "additionalProperties": false
              },
              "base": {
                "type": "object",
                "required": ["ref", "sha", "repo"],
                "properties": {
                  "ref": { "type": "string" },
                  "sha": { "type": "string" },
                  "repo": { "$ref": "#/definitions/repo-ref" }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "repository": { "$ref": "#/definitions/repository-lite" },
        "rerun_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to rerun the workflow run."
        },
        "run_number": {
          "type": "integer",
          "description": "The auto incrementing run number for the workflow run."
        },
        "status": {
          "type": "string",
          "enum": ["requested", "in_progress", "completed", "queued", "waiting"]
        },
        "updated_at": { "type": "string", "format": "date-time" },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to the workflow run."
        },
        "workflow_id": {
          "type": "integer",
          "description": "The ID of the parent workflow."
        },
        "workflow_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to the workflow."
        },
        "run_attempt": {
          "type": "integer",
          "description": "Attempt number of the run, 1 for first attempt and higher if the workflow was re-run."
        },
        "referenced_workflows": {
          "type": "array",
          "items": { "$ref": "#/definitions/referenced-workflow" }
        },
        "run_started_at": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the latest run. Resets on re-run."
        },
        "previous_attempt_url": {
          "description": "The URL to the previous attempted run of this workflow, if one exists.",
          "oneOf": [{ "type": "string", "format": "uri" }, { "type": "null" }]
        },
        "actor": { "$ref": "#/definitions/user" },
        "triggering_actor": { "$ref": "#/definitions/user" }
      },
      "additionalProperties": false,
      "title": "Workflow Run"
    },
    "workflow-step-completed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "name",
        "status",
        "conclusion",
        "number",
        "started_at",
        "completed_at"
      ],
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "status": { "type": "string", "enum": ["completed"] },
        "conclusion": {
          "type": "string",
          "enum": ["failure", "skipped", "success"]
        },
        "number": { "type": "integer" },
        "started_at": { "type": "string", "format": "date-time" },
        "completed_at": { "type": "string", "format": "date-time" }
      },
      "additionalProperties": false,
      "title": "Workflow Step (Completed)"
    },
    "workflow-step-in_progress": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "name",
        "status",
        "conclusion",
        "number",
        "started_at",
        "completed_at"
      ],
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "status": { "type": "string", "enum": ["in_progress"] },
        "conclusion": { "type": "null" },
        "number": { "type": "integer" },
        "started_at": { "type": "string", "format": "date-time" },
        "completed_at": { "type": "null" }
      },
      "additionalProperties": false,
      "title": "Workflow Step (In Progress)"
    },
    "workflow-step-queued": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "name",
        "status",
        "conclusion",
        "number",
        "started_at",
        "completed_at"
      ],
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "status": { "type": "string", "enum": ["queued"] },
        "conclusion": { "type": "null" },
        "number": { "type": "integer" },
        "started_at": { "type": "null" },
        "completed_at": { "type": "null" }
      },
      "additionalProperties": false,
      "title": "Workflow Step (Queued)"
    },
    "workflow-step": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "type": "object",
      "oneOf": [
        { "$ref": "#/definitions/workflow-step-in_progress" },
        { "$ref": "#/definitions/workflow-step-queued" },
        { "$ref": "#/definitions/workflow-step-completed" }
      ],
      "title": "Workflow Step"
    },
    "workflow": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "required": [
        "badge_url",
        "created_at",
        "html_url",
        "id",
        "name",
        "node_id",
        "path",
        "state",
        "updated_at",
        "url"
      ],
      "type": "object",
      "properties": {
        "badge_url": { "type": "string", "format": "uri" },
        "created_at": { "type": "string", "format": "date-time" },
        "html_url": { "type": "string", "format": "uri" },
        "id": { "type": "integer" },
        "name": { "type": "string" },
        "node_id": { "type": "string" },
        "path": { "type": "string" },
        "state": { "type": "string" },
        "updated_at": { "type": "string", "format": "date-time" },
        "url": { "type": "string", "format": "uri" }
      },
      "additionalProperties": false,
      "title": "Workflow"
    }
  },
  "oneOf": [
    { "$ref": "#/definitions/branch_protection_rule_event" },
    { "$ref": "#/definitions/check_run_event" },
    { "$ref": "#/definitions/check_suite_event" },
    { "$ref": "#/definitions/code_scanning_alert_event" },
    { "$ref": "#/definitions/commit_comment_event" },
    { "$ref": "#/definitions/create$event" },
    { "$ref": "#/definitions/delete$event" },
    { "$ref": "#/definitions/dependabot_alert_event" },
    { "$ref": "#/definitions/deploy_key_event" },
    { "$ref": "#/definitions/deployment_event" },
    { "$ref": "#/definitions/deployment_protection_rule_event" },
    { "$ref": "#/definitions/deployment_review_event" },
    { "$ref": "#/definitions/deployment_status_event" },
    { "$ref": "#/definitions/discussion_event" },
    { "$ref": "#/definitions/discussion_comment_event" },
    { "$ref": "#/definitions/fork$event" },
    { "$ref": "#/definitions/github_app_authorization_event" },
    { "$ref": "#/definitions/gollum$event" },
    { "$ref": "#/definitions/installation_event" },
    { "$ref": "#/definitions/installation_repositories_event" },
    { "$ref": "#/definitions/installation_target_event" },
    { "$ref": "#/definitions/issue_comment_event" },
    { "$ref": "#/definitions/issues_event" },
    { "$ref": "#/definitions/label_event" },
    { "$ref": "#/definitions/marketplace_purchase_event" },
    { "$ref": "#/definitions/member_event" },
    { "$ref": "#/definitions/membership_event" },
    { "$ref": "#/definitions/merge_group_event" },
    { "$ref": "#/definitions/meta_event" },
    { "$ref": "#/definitions/milestone_event" },
    { "$ref": "#/definitions/org_block_event" },
    { "$ref": "#/definitions/organization_event" },
    { "$ref": "#/definitions/package_event" },
    { "$ref": "#/definitions/page_build$event" },
    { "$ref": "#/definitions/ping$event" },
    { "$ref": "#/definitions/project_event" },
    { "$ref": "#/definitions/project_card_event" },
    { "$ref": "#/definitions/project_column_event" },
    { "$ref": "#/definitions/projects_v2_item_event" },
    { "$ref": "#/definitions/public$event" },
    { "$ref": "#/definitions/pull_request_event" },
    { "$ref": "#/definitions/pull_request_review_event" },
    { "$ref": "#/definitions/pull_request_review_comment_event" },
    { "$ref": "#/definitions/pull_request_review_thread_event" },
    { "$ref": "#/definitions/push$event" },
    { "$ref": "#/definitions/registry_package_event" },
    { "$ref": "#/definitions/release_event" },
    { "$ref": "#/definitions/repository_event" },
    { "$ref": "#/definitions/repository_dispatch$event" },
    { "$ref": "#/definitions/repository_import$event" },
    { "$ref": "#/definitions/repository_vulnerability_alert_event" },
    { "$ref": "#/definitions/secret_scanning_alert_event" },
    { "$ref": "#/definitions/secret_scanning_alert_location_event" },
    { "$ref": "#/definitions/security_advisory_event" },
    { "$ref": "#/definitions/sponsorship_event" },
    { "$ref": "#/definitions/star_event" },
    { "$ref": "#/definitions/status$event" },
    { "$ref": "#/definitions/team_event" },
    { "$ref": "#/definitions/team_add$event" },
    { "$ref": "#/definitions/watch_event" },
    { "$ref": "#/definitions/workflow_dispatch$event" },
    { "$ref": "#/definitions/workflow_job_event" },
    { "$ref": "#/definitions/workflow_run_event" }
  ]
}
